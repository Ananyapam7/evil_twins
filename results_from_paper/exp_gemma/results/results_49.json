[
    {
        "epoch": 1,
        "loss": 0.1263786405324936,
        "best_loss": 0.1263786405324936,
        "best_kl": 2.4742026329040527,
        "best_std": 0.2141793727874756,
        "cur_kl": 2.4742026329040527,
        "cur_std": 0.2141793727874756,
        "prompt": "<bos>What})));s the python script to determine a perfect square?",
        "nll_prompt": -174.28091430664062
    },
    {
        "epoch": 2,
        "loss": 0.11400660127401352,
        "best_loss": 0.11400660127401352,
        "best_kl": 1.9923185110092163,
        "best_std": 0.2016385555267334,
        "cur_kl": 1.9923185110092163,
        "cur_std": 0.2016385555267334,
        "prompt": "<bos> vainly})));s the python script to determine a perfect square?",
        "nll_prompt": -144.389892578125
    },
    {
        "epoch": 3,
        "loss": 0.11043232679367065,
        "best_loss": 0.11043232679367065,
        "best_kl": 1.7794328927993774,
        "best_std": 0.1285439610481262,
        "cur_kl": 1.7794328927993774,
        "cur_std": 0.1285439610481262,
        "prompt": "<bos> vainly})));s burberry python script to determine a perfect square?",
        "nll_prompt": -164.1825408935547
    },
    {
        "epoch": 4,
        "loss": 0.09753251820802689,
        "best_loss": 0.09753251820802689,
        "best_kl": 1.3456389904022217,
        "best_std": 0.1128919005393982,
        "cur_kl": 1.3456389904022217,
        "cur_std": 0.1128919005393982,
        "prompt": "<bos> lmfao})));s burberry python script to determine a perfect square?",
        "nll_prompt": -161.3471221923828
    },
    {
        "epoch": 5,
        "loss": 0.09848020225763321,
        "best_loss": 0.09753251820802689,
        "best_kl": 1.3456389904022217,
        "best_std": 0.1128919005393982,
        "cur_kl": 1.4354499578475952,
        "cur_std": 0.17144782543182374,
        "prompt": "<bos> lmfao})));RectangleBorder burberry python script to determine a perfect square?",
        "nll_prompt": -213.03794860839844
    },
    {
        "epoch": 6,
        "loss": 0.09311281144618988,
        "best_loss": 0.09311281144618988,
        "best_kl": 1.2149715423583984,
        "best_std": 0.1554276943206787,
        "cur_kl": 1.2149715423583984,
        "cur_std": 0.1554276943206787,
        "prompt": "<bos> lmfaoyyjRectangleBorder burberry python script to determine a perfect square?",
        "nll_prompt": -204.50169372558594
    },
    {
        "epoch": 7,
        "loss": 0.07772905379533768,
        "best_loss": 0.07772905379533768,
        "best_kl": 0.8836241960525513,
        "best_std": 0.16241531372070311,
        "cur_kl": 0.8836241960525513,
        "cur_std": 0.16241531372070311,
        "prompt": "<bos> lmfaoyyjRectangleBorder burberry python script to Checking a perfect square?",
        "nll_prompt": -221.65615844726562
    },
    {
        "epoch": 8,
        "loss": 0.07449870556592941,
        "best_loss": 0.07449870556592941,
        "best_kl": 0.6521981954574585,
        "best_std": 0.13940505981445311,
        "cur_kl": 0.6521981954574585,
        "cur_std": 0.13940505981445311,
        "prompt": "<bos> lmfaoyyjRectangleBorder burberry python script für Checking a perfect square?",
        "nll_prompt": -231.97616577148438
    },
    {
        "epoch": 9,
        "loss": 0.07734260708093643,
        "best_loss": 0.07449870556592941,
        "best_kl": 0.6521981954574585,
        "best_std": 0.13940505981445311,
        "cur_kl": 0.7829020023345947,
        "cur_std": 0.19130712747573853,
        "prompt": "<bos> lmfao fromRectangleBorder burberry python script für Checking a perfect square?",
        "nll_prompt": -230.97512817382812
    },
    {
        "epoch": 10,
        "loss": 0.07530117779970169,
        "best_loss": 0.07449870556592941,
        "best_kl": 0.6312331557273865,
        "best_std": 0.13727627992630004,
        "cur_kl": 0.6312331557273865,
        "cur_std": 0.13727627992630004,
        "prompt": "<bos> lmfaoمصادرRectangleBorder burberry python script für Checking a perfect square?",
        "nll_prompt": -237.21945190429688
    },
    {
        "epoch": 11,
        "loss": 0.07921677827835083,
        "best_loss": 0.07449870556592941,
        "best_kl": 0.6312331557273865,
        "best_std": 0.13727627992630004,
        "cur_kl": 0.8230653405189514,
        "cur_std": 0.16324265003204347,
        "prompt": "<bos> lmfaoمصادرRectangleBorder ModelExpression python script für Checking a perfect square?",
        "nll_prompt": -239.99241638183594
    },
    {
        "epoch": 12,
        "loss": 0.07734177261590958,
        "best_loss": 0.07449870556592941,
        "best_kl": 0.6312331557273865,
        "best_std": 0.13727627992630004,
        "cur_kl": 0.8489393591880798,
        "cur_std": 0.1874473810195923,
        "prompt": "<bos> lmfaoمصادرRectangleBorder ModelExpression python scriptúncia Checking a perfect square?",
        "nll_prompt": -260.62152099609375
    },
    {
        "epoch": 13,
        "loss": 0.07900910079479218,
        "best_loss": 0.07449870556592941,
        "best_kl": 0.6312331557273865,
        "best_std": 0.13727627992630004,
        "cur_kl": 0.7736197710037231,
        "cur_std": 0.18087217807769776,
        "prompt": "<bos> lmfaoمصادرRectangleBorder ModelExpression python scriptimplements Checking a perfect square?",
        "nll_prompt": -255.00057983398438
    },
    {
        "epoch": 14,
        "loss": 0.07854989171028137,
        "best_loss": 0.07449870556592941,
        "best_kl": 0.6312331557273865,
        "best_std": 0.13727627992630004,
        "cur_kl": 0.7005613446235657,
        "cur_std": 0.18267421722412108,
        "prompt": "<bos> lmfao MAIRectangleBorder ModelExpression python scriptimplements Checking a perfect square?",
        "nll_prompt": -220.96644592285156
    },
    {
        "epoch": 15,
        "loss": 0.07484371960163116,
        "best_loss": 0.07449870556592941,
        "best_kl": 0.623749852180481,
        "best_std": 0.17161643505096436,
        "cur_kl": 0.623749852180481,
        "cur_std": 0.17161643505096436,
        "prompt": "<bos> lmfao foitRectangleBorder ModelExpression python scriptimplements Checking a perfect square?",
        "nll_prompt": -255.50653076171875
    },
    {
        "epoch": 16,
        "loss": 0.07413118332624435,
        "best_loss": 0.07413118332624435,
        "best_kl": 0.585442841053009,
        "best_std": 0.11488713026046753,
        "cur_kl": 0.585442841053009,
        "cur_std": 0.11488713026046753,
        "prompt": "<bos> lmfao foit Acero ModelExpression python scriptimplements Checking a perfect square?",
        "nll_prompt": -221.31558227539062
    },
    {
        "epoch": 17,
        "loss": 0.07531603425741196,
        "best_loss": 0.07413118332624435,
        "best_kl": 0.5793082118034363,
        "best_std": 0.12289397716522217,
        "cur_kl": 0.5793082118034363,
        "cur_std": 0.12289397716522217,
        "prompt": "<bos> Mâ foit Acero ModelExpression python scriptimplements Checking a perfect square?",
        "nll_prompt": -235.12643432617188
    },
    {
        "epoch": 18,
        "loss": 0.07468191534280777,
        "best_loss": 0.07413118332624435,
        "best_kl": 0.5638067722320557,
        "best_std": 0.11724131107330323,
        "cur_kl": 0.5638067722320557,
        "cur_std": 0.11724131107330323,
        "prompt": "<bos> practition foit Acero ModelExpression python scriptimplements Checking a perfect square?",
        "nll_prompt": -200.98538208007812
    },
    {
        "epoch": 19,
        "loss": 0.0739535391330719,
        "best_loss": 0.0739535391330719,
        "best_kl": 0.5638067722320557,
        "best_std": 0.11724131107330323,
        "cur_kl": 0.5775476098060608,
        "cur_std": 0.11532198190689087,
        "prompt": "<bos> practition foit Sert ModelExpression python scriptimplements Checking a perfect square?",
        "nll_prompt": -200.3507080078125
    },
    {
        "epoch": 20,
        "loss": 0.07398352026939392,
        "best_loss": 0.0739535391330719,
        "best_kl": 0.534973680973053,
        "best_std": 0.11400731801986694,
        "cur_kl": 0.534973680973053,
        "cur_std": 0.11400731801986694,
        "prompt": "<bos> unwarran foit Sert ModelExpression python scriptimplements Checking a perfect square?",
        "nll_prompt": -211.66726684570312
    },
    {
        "epoch": 21,
        "loss": 0.07502889633178711,
        "best_loss": 0.0739535391330719,
        "best_kl": 0.534973680973053,
        "best_std": 0.11400731801986694,
        "cur_kl": 0.6435860991477966,
        "cur_std": 0.1144252896308899,
        "prompt": "<bos> impert foit Sert ModelExpression python scriptimplements Checking a perfect square?",
        "nll_prompt": -234.03851318359375
    },
    {
        "epoch": 22,
        "loss": 0.07567916065454483,
        "best_loss": 0.0739535391330719,
        "best_kl": 0.534973680973053,
        "best_std": 0.11400731801986694,
        "cur_kl": 0.629512369632721,
        "cur_std": 0.11666443347930908,
        "prompt": "<bos> impert foit Mazar ModelExpression python scriptimplements Checking a perfect square?",
        "nll_prompt": -228.76864624023438
    },
    {
        "epoch": 23,
        "loss": 0.0744057223200798,
        "best_loss": 0.0739535391330719,
        "best_kl": 0.534973680973053,
        "best_std": 0.11400731801986694,
        "cur_kl": 0.6170812249183655,
        "cur_std": 0.11854616403579712,
        "prompt": "<bos> vœ foit Mazar ModelExpression python scriptimplements Checking a perfect square?",
        "nll_prompt": -233.93040466308594
    },
    {
        "epoch": 24,
        "loss": 0.07420120388269424,
        "best_loss": 0.0739535391330719,
        "best_kl": 0.534973680973053,
        "best_std": 0.11400731801986694,
        "cur_kl": 0.5869541764259338,
        "cur_std": 0.12107857465744018,
        "prompt": "<bos> benevol foit Mazar ModelExpression python scriptimplements Checking a perfect square?",
        "nll_prompt": -214.4349822998047
    },
    {
        "epoch": 25,
        "loss": 0.07380301505327225,
        "best_loss": 0.07380301505327225,
        "best_kl": 0.534973680973053,
        "best_std": 0.11400731801986694,
        "cur_kl": 0.5554613471031189,
        "cur_std": 0.11659258604049683,
        "prompt": "<bos> benevolNova Mazar ModelExpression python scriptimplements Checking a perfect square?",
        "nll_prompt": -196.2753143310547
    },
    {
        "epoch": 26,
        "loss": 0.07333139330148697,
        "best_loss": 0.07333139330148697,
        "best_kl": 0.5224122405052185,
        "best_std": 0.11993119716644288,
        "cur_kl": 0.5224122405052185,
        "cur_std": 0.11993119716644288,
        "prompt": "<bos> benevolNova frankfurt ModelExpression python scriptimplements Checking a perfect square?",
        "nll_prompt": -198.16322326660156
    },
    {
        "epoch": 27,
        "loss": 0.07556605339050293,
        "best_loss": 0.07333139330148697,
        "best_kl": 0.5224122405052185,
        "best_std": 0.11993119716644288,
        "cur_kl": 0.6739753484725952,
        "cur_std": 0.12703760862350463,
        "prompt": "<bos> benevol profi frankfurt ModelExpression python scriptimplements Checking a perfect square?",
        "nll_prompt": -203.32655334472656
    },
    {
        "epoch": 28,
        "loss": 0.07334960997104645,
        "best_loss": 0.07333139330148697,
        "best_kl": 0.5224122405052185,
        "best_std": 0.11993119716644288,
        "cur_kl": 0.6200339198112488,
        "cur_std": 0.10804241895675659,
        "prompt": "<bos> benevol profi myrtle ModelExpression python scriptimplements Checking a perfect square?",
        "nll_prompt": -212.69268798828125
    },
    {
        "epoch": 29,
        "loss": 0.07386870682239532,
        "best_loss": 0.07333139330148697,
        "best_kl": 0.5224122405052185,
        "best_std": 0.11993119716644288,
        "cur_kl": 0.5856824517250061,
        "cur_std": 0.11470594406127929,
        "prompt": "<bos>ienna profi myrtle ModelExpression python scriptimplements Checking a perfect square?",
        "nll_prompt": -256.8982238769531
    },
    {
        "epoch": 30,
        "loss": 0.07409777492284775,
        "best_loss": 0.07333139330148697,
        "best_kl": 0.5224122405052185,
        "best_std": 0.11993119716644288,
        "cur_kl": 0.6545553207397461,
        "cur_std": 0.11903413534164428,
        "prompt": "<bos> UNIVER profi myrtle ModelExpression python scriptimplements Checking a perfect square?",
        "nll_prompt": -257.81298828125
    },
    {
        "epoch": 31,
        "loss": 0.07327835261821747,
        "best_loss": 0.07327835261821747,
        "best_kl": 0.5224122405052185,
        "best_std": 0.11993119716644288,
        "cur_kl": 0.5975900888442993,
        "cur_std": 0.13380075693130494,
        "prompt": "<bos> UNIVER                           myrtle ModelExpression python scriptimplements Checking a perfect square?",
        "nll_prompt": -250.2349853515625
    },
    {
        "epoch": 32,
        "loss": 0.07801000773906708,
        "best_loss": 0.07327835261821747,
        "best_kl": 0.5224122405052185,
        "best_std": 0.11993119716644288,
        "cur_kl": 0.8505216836929321,
        "cur_std": 0.1117121696472168,
        "prompt": "<bos> UNIVER                           myrtle lebe python scriptimplements Checking a perfect square?",
        "nll_prompt": -235.67958068847656
    },
    {
        "epoch": 33,
        "loss": 0.0789107233285904,
        "best_loss": 0.07327835261821747,
        "best_kl": 0.5224122405052185,
        "best_std": 0.11993119716644288,
        "cur_kl": 0.7428624629974365,
        "cur_std": 0.08768323659896851,
        "prompt": "<bos> UNIVER при myrtle lebe python scriptimplements Checking a perfect square?",
        "nll_prompt": -251.95016479492188
    },
    {
        "epoch": 34,
        "loss": 0.07877039909362793,
        "best_loss": 0.07327835261821747,
        "best_kl": 0.5224122405052185,
        "best_std": 0.11993119716644288,
        "cur_kl": 0.8671227097511292,
        "cur_std": 0.09680870771408082,
        "prompt": "<bos> UNIVER..) myrtle lebe python scriptimplements Checking a perfect square?",
        "nll_prompt": -245.22048950195312
    },
    {
        "epoch": 35,
        "loss": 0.08205598592758179,
        "best_loss": 0.07327835261821747,
        "best_kl": 0.5224122405052185,
        "best_std": 0.11993119716644288,
        "cur_kl": 0.9425245523452759,
        "cur_std": 0.0967945396900177,
        "prompt": "<bos> UNIVER Ngb myrtle lebe python scriptimplements Checking a perfect square?",
        "nll_prompt": -241.93118286132812
    },
    {
        "epoch": 36,
        "loss": 0.07854139804840088,
        "best_loss": 0.07327835261821747,
        "best_kl": 0.5224122405052185,
        "best_std": 0.11993119716644288,
        "cur_kl": 0.8428422212600708,
        "cur_std": 0.09189497828483581,
        "prompt": "<bos> UNIVER]). myrtle lebe python scriptimplements Checking a perfect square?",
        "nll_prompt": -239.18551635742188
    },
    {
        "epoch": 37,
        "loss": 0.078589528799057,
        "best_loss": 0.07327835261821747,
        "best_kl": 0.5224122405052185,
        "best_std": 0.11993119716644288,
        "cur_kl": 0.8343899250030518,
        "cur_std": 0.09095669984817505,
        "prompt": "<bos> gluco]). myrtle lebe python scriptimplements Checking a perfect square?",
        "nll_prompt": -245.71595764160156
    },
    {
        "epoch": 38,
        "loss": 0.08026501536369324,
        "best_loss": 0.07327835261821747,
        "best_kl": 0.5224122405052185,
        "best_std": 0.11993119716644288,
        "cur_kl": 0.9269698262214661,
        "cur_std": 0.11666853427886963,
        "prompt": "<bos> gluco]). iniziato lebe python scriptimplements Checking a perfect square?",
        "nll_prompt": -270.2799072265625
    },
    {
        "epoch": 39,
        "loss": 0.07844968885183334,
        "best_loss": 0.07327835261821747,
        "best_kl": 0.5224122405052185,
        "best_std": 0.11993119716644288,
        "cur_kl": 0.8642390370368958,
        "cur_std": 0.12144337892532349,
        "prompt": "<bos> sappi]). iniziato lebe python scriptimplements Checking a perfect square?",
        "nll_prompt": -239.001708984375
    },
    {
        "epoch": 40,
        "loss": 0.0800865888595581,
        "best_loss": 0.07327835261821747,
        "best_kl": 0.5224122405052185,
        "best_std": 0.11993119716644288,
        "cur_kl": 0.7536020278930664,
        "cur_std": 0.10330438613891602,
        "prompt": "<bos> sappi]). iniziato lebe python Inclusoimplements Checking a perfect square?",
        "nll_prompt": -266.91363525390625
    },
    {
        "epoch": 41,
        "loss": 0.08148293942213058,
        "best_loss": 0.07327835261821747,
        "best_kl": 0.5224122405052185,
        "best_std": 0.11993119716644288,
        "cur_kl": 0.8800176978111267,
        "cur_std": 0.12331099510192871,
        "prompt": "<bos>]=>]). iniziato lebe python Inclusoimplements Checking a perfect square?",
        "nll_prompt": -307.9657287597656
    },
    {
        "epoch": 42,
        "loss": 0.08461710065603256,
        "best_loss": 0.07327835261821747,
        "best_kl": 0.5224122405052185,
        "best_std": 0.11993119716644288,
        "cur_kl": 0.891511082649231,
        "cur_std": 0.11704906225204467,
        "prompt": "<bos> hant]). iniziato lebe python Inclusoimplements Checking a perfect square?",
        "nll_prompt": -279.8046875
    },
    {
        "epoch": 43,
        "loss": 0.08243605494499207,
        "best_loss": 0.07327835261821747,
        "best_kl": 0.5224122405052185,
        "best_std": 0.11993119716644288,
        "cur_kl": 0.8009207248687744,
        "cur_std": 0.10577265024185181,
        "prompt": "<bos> Perci]). iniziato lebe python Inclusoimplements Checking a perfect square?",
        "nll_prompt": -260.6005859375
    },
    {
        "epoch": 44,
        "loss": 0.07791884988546371,
        "best_loss": 0.07327835261821747,
        "best_kl": 0.5224122405052185,
        "best_std": 0.11993119716644288,
        "cur_kl": 0.7160146236419678,
        "cur_std": 0.1082192063331604,
        "prompt": "<bos> malheur]). iniziato lebe python Inclusoimplements Checking a perfect square?",
        "nll_prompt": -285.7523498535156
    },
    {
        "epoch": 45,
        "loss": 0.07954787462949753,
        "best_loss": 0.07327835261821747,
        "best_kl": 0.5224122405052185,
        "best_std": 0.11993119716644288,
        "cur_kl": 1.0083434581756592,
        "cur_std": 0.14984713792800902,
        "prompt": "<bos> malheur]). iniziato lebe python Bíimplements Checking a perfect square?",
        "nll_prompt": -279.34014892578125
    },
    {
        "epoch": 46,
        "loss": 0.07328490167856216,
        "best_loss": 0.07327835261821747,
        "best_kl": 0.5224122405052185,
        "best_std": 0.11993119716644288,
        "cur_kl": 0.6703701615333557,
        "cur_std": 0.11958740949630738,
        "prompt": "<bos> malheur]). iniziato lebe python程implements Checking a perfect square?",
        "nll_prompt": -267.8507995605469
    },
    {
        "epoch": 47,
        "loss": 0.0760120302438736,
        "best_loss": 0.07327835261821747,
        "best_kl": 0.5224122405052185,
        "best_std": 0.11993119716644288,
        "cur_kl": 0.8204671144485474,
        "cur_std": 0.11477415561676026,
        "prompt": "<bos> playboy]). iniziato lebe python程implements Checking a perfect square?",
        "nll_prompt": -261.69000244140625
    },
    {
        "epoch": 48,
        "loss": 0.0744888037443161,
        "best_loss": 0.07327835261821747,
        "best_kl": 0.5224122405052185,
        "best_std": 0.11993119716644288,
        "cur_kl": 0.7179463505744934,
        "cur_std": 0.1322088360786438,
        "prompt": "<bos> createdBy]). iniziato lebe python程implements Checking a perfect square?",
        "nll_prompt": -245.20611572265625
    },
    {
        "epoch": 49,
        "loss": 0.07356978952884674,
        "best_loss": 0.07327835261821747,
        "best_kl": 0.5224122405052185,
        "best_std": 0.11993119716644288,
        "cur_kl": 0.6152073740959167,
        "cur_std": 0.10946288108825683,
        "prompt": "<bos> fays]). iniziato lebe python程implements Checking a perfect square?",
        "nll_prompt": -224.1864013671875
    },
    {
        "epoch": 50,
        "loss": 0.07599382102489471,
        "best_loss": 0.07327835261821747,
        "best_kl": 0.5224122405052185,
        "best_std": 0.11993119716644288,
        "cur_kl": 0.7661774158477783,
        "cur_std": 0.11919620037078857,
        "prompt": "<bos> fays lidl iniziato lebe python程implements Checking a perfect square?",
        "nll_prompt": -205.9629669189453
    },
    {
        "epoch": 51,
        "loss": 0.07392702996730804,
        "best_loss": 0.07327835261821747,
        "best_kl": 0.5224122405052185,
        "best_std": 0.11993119716644288,
        "cur_kl": 0.6294158697128296,
        "cur_std": 0.12648066282272338,
        "prompt": "<bos> fays lidl beton lebe python程implements Checking a perfect square?",
        "nll_prompt": -194.13003540039062
    },
    {
        "epoch": 52,
        "loss": 0.07100863754749298,
        "best_loss": 0.07100863754749298,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.4928264617919922,
        "cur_std": 0.10741734504699707,
        "prompt": "<bos> fays Trix beton lebe python程implements Checking a perfect square?",
        "nll_prompt": -186.4765625
    },
    {
        "epoch": 53,
        "loss": 0.07144797593355179,
        "best_loss": 0.07100863754749298,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.5099635124206543,
        "cur_std": 0.11099289655685425,
        "prompt": "<bos> fays TrixShar lebe python程implements Checking a perfect square?",
        "nll_prompt": -179.33517456054688
    },
    {
        "epoch": 54,
        "loss": 0.07247120887041092,
        "best_loss": 0.07100863754749298,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.7175494432449341,
        "cur_std": 0.15083035230636596,
        "prompt": "<bos> fays TrixShar lebe pythonVediimplements Checking a perfect square?",
        "nll_prompt": -198.7432403564453
    },
    {
        "epoch": 55,
        "loss": 0.07057768851518631,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.6229232549667358,
        "cur_std": 0.14549312591552735,
        "prompt": "<bos> fays Trix arbejds lebe pythonVediimplements Checking a perfect square?",
        "nll_prompt": -236.2112579345703
    },
    {
        "epoch": 56,
        "loss": 0.07268982380628586,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.8095260262489319,
        "cur_std": 0.16679420471191406,
        "prompt": "<bos> fays ccm arbejds lebe pythonVediimplements Checking a perfect square?",
        "nll_prompt": -227.79339599609375
    },
    {
        "epoch": 57,
        "loss": 0.07426127791404724,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.7138301134109497,
        "cur_std": 0.1342657208442688,
        "prompt": "<bos> fays ccm arbejds lebe pythonMosaimplements Checking a perfect square?",
        "nll_prompt": -210.59857177734375
    },
    {
        "epoch": 58,
        "loss": 0.0751425176858902,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.5776880383491516,
        "cur_std": 0.11356334686279297,
        "prompt": "<bos> fays RFI arbejds lebe pythonMosaimplements Checking a perfect square?",
        "nll_prompt": -210.0379638671875
    },
    {
        "epoch": 59,
        "loss": 0.07331109046936035,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.6628623604774475,
        "cur_std": 0.14325308799743652,
        "prompt": "<bos> fays boîtier arbejds lebe pythonMosaimplements Checking a perfect square?",
        "nll_prompt": -205.89353942871094
    },
    {
        "epoch": 60,
        "loss": 0.07117306441068649,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.6543083190917969,
        "cur_std": 0.17191541194915771,
        "prompt": "<bos> fays boîtier arbejds lebe pythontômesimplements Checking a perfect square?",
        "nll_prompt": -217.87474060058594
    },
    {
        "epoch": 61,
        "loss": 0.07421472668647766,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.7470196485519409,
        "cur_std": 0.1711954355239868,
        "prompt": "<bos> fays boîtier Mev lebe pythontômesimplements Checking a perfect square?",
        "nll_prompt": -211.1234893798828
    },
    {
        "epoch": 62,
        "loss": 0.07352470606565475,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.7824870944023132,
        "cur_std": 0.19489800930023193,
        "prompt": "<bos> fays boîtier]){\r lebe pythontômesimplements Checking a perfect square?",
        "nll_prompt": -221.01727294921875
    },
    {
        "epoch": 63,
        "loss": 0.0723666101694107,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.6669298410415649,
        "cur_std": 0.14832441806793212,
        "prompt": "<bos> fays boîtier Friendly lebe pythontômesimplements Checking a perfect square?",
        "nll_prompt": -208.9383544921875
    },
    {
        "epoch": 64,
        "loss": 0.07199445366859436,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.5434843897819519,
        "cur_std": 0.11675938367843627,
        "prompt": "<bos> fays boîtier Friendly lebe pythonesindeimplements Checking a perfect square?",
        "nll_prompt": -204.93569946289062
    },
    {
        "epoch": 65,
        "loss": 0.07460024952888489,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.5825816988945007,
        "cur_std": 0.11864867210388183,
        "prompt": "<bos> PRESERV boîtier Friendly lebe pythonesindeimplements Checking a perfect square?",
        "nll_prompt": -283.68743896484375
    },
    {
        "epoch": 66,
        "loss": 0.08090896159410477,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.892029345035553,
        "cur_std": 0.13869147300720214,
        "prompt": "<bos> PRESERV boîtier Friendly lebe python automneimplements Checking a perfect square?",
        "nll_prompt": -293.05804443359375
    },
    {
        "epoch": 67,
        "loss": 0.07513398677110672,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.7344760894775391,
        "cur_std": 0.13386948108673097,
        "prompt": "<bos> PRESERV boîtier Friendly lebe python वर्षimplements Checking a perfect square?",
        "nll_prompt": -277.896484375
    },
    {
        "epoch": 68,
        "loss": 0.07594975084066391,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.827279269695282,
        "cur_std": 0.1397801160812378,
        "prompt": "<bos> PRESERV haer Friendly lebe python वर्षimplements Checking a perfect square?",
        "nll_prompt": -273.7334289550781
    },
    {
        "epoch": 69,
        "loss": 0.07687979191541672,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.7593194246292114,
        "cur_std": 0.13186997175216675,
        "prompt": "<bos> PRESERV hispan Friendly lebe python वर्षimplements Checking a perfect square?",
        "nll_prompt": -258.8785400390625
    },
    {
        "epoch": 70,
        "loss": 0.07602991908788681,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.75367671251297,
        "cur_std": 0.1199529767036438,
        "prompt": "<bos> PRESERVSiguiente Friendly lebe python वर्षimplements Checking a perfect square?",
        "nll_prompt": -260.3577880859375
    },
    {
        "epoch": 71,
        "loss": 0.07828294485807419,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.8272926807403564,
        "cur_std": 0.13273394107818604,
        "prompt": "<bos> PRESERV tikra Friendly lebe python वर्षimplements Checking a perfect square?",
        "nll_prompt": -257.9244079589844
    },
    {
        "epoch": 72,
        "loss": 0.07174793630838394,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.6630025506019592,
        "cur_std": 0.13523718118667602,
        "prompt": "<bos> hanggang tikra Friendly lebe python वर्षimplements Checking a perfect square?",
        "nll_prompt": -257.7598876953125
    },
    {
        "epoch": 73,
        "loss": 0.07317952066659927,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.7361023426055908,
        "cur_std": 0.1372971534729004,
        "prompt": "<bos>het tikra Friendly lebe python वर्षimplements Checking a perfect square?",
        "nll_prompt": -232.1128692626953
    },
    {
        "epoch": 74,
        "loss": 0.08249804377555847,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 1.0194107294082642,
        "cur_std": 0.13604400157928467,
        "prompt": "<bos>orylation tikra Friendly lebe python वर्षimplements Checking a perfect square?",
        "nll_prompt": -268.03057861328125
    },
    {
        "epoch": 75,
        "loss": 0.07399529963731766,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.7649266123771667,
        "cur_std": 0.13300879001617433,
        "prompt": "<bos>Hec tikra Friendly lebe python वर्षimplements Checking a perfect square?",
        "nll_prompt": -232.85494995117188
    },
    {
        "epoch": 76,
        "loss": 0.07533766329288483,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.7163073420524597,
        "cur_std": 0.1404012680053711,
        "prompt": "<bos> noce tikra Friendly lebe python वर्षimplements Checking a perfect square?",
        "nll_prompt": -233.83474731445312
    },
    {
        "epoch": 77,
        "loss": 0.07485389709472656,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.798732578754425,
        "cur_std": 0.1424826979637146,
        "prompt": "<bos> '<? tikra Friendly lebe python वर्षimplements Checking a perfect square?",
        "nll_prompt": -261.0605773925781
    },
    {
        "epoch": 78,
        "loss": 0.07648934423923492,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.8321806192398071,
        "cur_std": 0.13779125213623047,
        "prompt": "<bos> '<? realizacji Friendly lebe python वर्षimplements Checking a perfect square?",
        "nll_prompt": -257.14508056640625
    },
    {
        "epoch": 79,
        "loss": 0.07596559077501297,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.8016126751899719,
        "cur_std": 0.13667203187942506,
        "prompt": "<bos> '<? aggres Friendly lebe python वर्षimplements Checking a perfect square?",
        "nll_prompt": -258.1458435058594
    },
    {
        "epoch": 80,
        "loss": 0.07663500308990479,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.7902184724807739,
        "cur_std": 0.1311195969581604,
        "prompt": "<bos> '<? aggres Abbiamo lebe python वर्षimplements Checking a perfect square?",
        "nll_prompt": -277.9844970703125
    },
    {
        "epoch": 81,
        "loss": 0.07602516561746597,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.8052407503128052,
        "cur_std": 0.13169755935668945,
        "prompt": "<bos> '<? nouve Abbiamo lebe python वर्षimplements Checking a perfect square?",
        "nll_prompt": -274.7754211425781
    },
    {
        "epoch": 82,
        "loss": 0.07666142284870148,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.8404678106307983,
        "cur_std": 0.13087438344955443,
        "prompt": "<bos> lola nouve Abbiamo lebe python वर्षimplements Checking a perfect square?",
        "nll_prompt": -203.64366149902344
    },
    {
        "epoch": 83,
        "loss": 0.07523555308580399,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.7783445715904236,
        "cur_std": 0.11728225946426392,
        "prompt": "<bos>dot nouve Abbiamo lebe python वर्षimplements Checking a perfect square?",
        "nll_prompt": -290.34149169921875
    },
    {
        "epoch": 84,
        "loss": 0.07472650706768036,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.7183710932731628,
        "cur_std": 0.11575253009796142,
        "prompt": "<bos>dot nouve Abbiamo lebe python소implements Checking a perfect square?",
        "nll_prompt": -286.0328369140625
    },
    {
        "epoch": 85,
        "loss": 0.07355356216430664,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.6642146110534668,
        "cur_std": 0.11627833843231201,
        "prompt": "<bos>dot oner Abbiamo lebe python소implements Checking a perfect square?",
        "nll_prompt": -278.87738037109375
    },
    {
        "epoch": 86,
        "loss": 0.07220256328582764,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.7512303590774536,
        "cur_std": 0.11967283487319946,
        "prompt": "<bos>dot oner subsist lebe python소implements Checking a perfect square?",
        "nll_prompt": -257.95501708984375
    },
    {
        "epoch": 87,
        "loss": 0.07251478731632233,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.6729459762573242,
        "cur_std": 0.12787070274353027,
        "prompt": "<bos>dot oner Ueb lebe python소implements Checking a perfect square?",
        "nll_prompt": -252.2014617919922
    },
    {
        "epoch": 88,
        "loss": 0.07168800383806229,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.6574171185493469,
        "cur_std": 0.12241779565811158,
        "prompt": "<bos>dot oner conspic lebe python소implements Checking a perfect square?",
        "nll_prompt": -246.8306121826172
    },
    {
        "epoch": 89,
        "loss": 0.07198666781187057,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.6652616858482361,
        "cur_std": 0.12303417921066284,
        "prompt": "<bos>dot sra conspic lebe python소implements Checking a perfect square?",
        "nll_prompt": -248.34432983398438
    },
    {
        "epoch": 90,
        "loss": 0.07244543731212616,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.7171693444252014,
        "cur_std": 0.13467055559158325,
        "prompt": "<bos> verzorg sra conspic lebe python소implements Checking a perfect square?",
        "nll_prompt": -254.75990295410156
    },
    {
        "epoch": 91,
        "loss": 0.07280334085226059,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.7540969848632812,
        "cur_std": 0.14037399291992186,
        "prompt": "<bos> garantiert sra conspic lebe python소implements Checking a perfect square?",
        "nll_prompt": -252.16342163085938
    },
    {
        "epoch": 92,
        "loss": 0.07633072882890701,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.7915653586387634,
        "cur_std": 0.11379399299621581,
        "prompt": "<bos> garantiert sra powdered lebe python소implements Checking a perfect square?",
        "nll_prompt": -250.43319702148438
    },
    {
        "epoch": 93,
        "loss": 0.0724988803267479,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.6637933850288391,
        "cur_std": 0.12722569704055786,
        "prompt": "<bos> garantiert devol powdered lebe python소implements Checking a perfect square?",
        "nll_prompt": -255.50730895996094
    },
    {
        "epoch": 94,
        "loss": 0.07308722287416458,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.7345902323722839,
        "cur_std": 0.13282896280288697,
        "prompt": "<bos> garantiert devol seclu lebe python소implements Checking a perfect square?",
        "nll_prompt": -277.54595947265625
    },
    {
        "epoch": 95,
        "loss": 0.07175709307193756,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.5858094096183777,
        "cur_std": 0.13874047994613647,
        "prompt": "<bos> garantiert devol amino lebe python소implements Checking a perfect square?",
        "nll_prompt": -256.7027587890625
    },
    {
        "epoch": 96,
        "loss": 0.07158049196004868,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.5133810043334961,
        "cur_std": 0.09355223774909974,
        "prompt": "<bos> garantiertestament amino lebe python소implements Checking a perfect square?",
        "nll_prompt": -256.1761474609375
    },
    {
        "epoch": 97,
        "loss": 0.07384596019983292,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.6347818374633789,
        "cur_std": 0.11871728897094727,
        "prompt": "<bos> garantiert électron amino lebe python소implements Checking a perfect square?",
        "nll_prompt": -250.25741577148438
    },
    {
        "epoch": 98,
        "loss": 0.07440260052680969,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.6765788197517395,
        "cur_std": 0.12663757801055908,
        "prompt": "<bos> garantiert interesan amino lebe python소implements Checking a perfect square?",
        "nll_prompt": -257.98553466796875
    },
    {
        "epoch": 99,
        "loss": 0.0732802301645279,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.7408786416053772,
        "cur_std": 0.13694615364074708,
        "prompt": "<bos> garantiert interesan as lebe python소implements Checking a perfect square?",
        "nll_prompt": -236.49493408203125
    },
    {
        "epoch": 100,
        "loss": 0.074189193546772,
        "best_loss": 0.07057768851518631,
        "best_kl": 0.4928264617919922,
        "best_std": 0.10741734504699707,
        "cur_kl": 0.7998020648956299,
        "cur_std": 0.13328739404678344,
        "prompt": "<bos>Continuous interesan as lebe python소implements Checking a perfect square?",
        "nll_prompt": -230.06466674804688
    }
]