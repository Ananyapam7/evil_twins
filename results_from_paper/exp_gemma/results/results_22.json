[
    {
        "epoch": 1,
        "loss": 0.3685219883918762,
        "best_loss": 0.3685219883918762,
        "best_kl": 9.492612838745117,
        "best_std": 0.3830664396286011,
        "cur_kl": 9.492612838745117,
        "cur_std": 0.3830664396286011,
        "prompt": "<bos>Can you give me a Python function toìm leap years?",
        "nll_prompt": -145.1380157470703
    },
    {
        "epoch": 2,
        "loss": 0.35959726572036743,
        "best_loss": 0.35959726572036743,
        "best_kl": 9.197551727294922,
        "best_std": 0.3691104888916016,
        "cur_kl": 9.197551727294922,
        "cur_std": 0.3691104888916016,
        "prompt": "<bos>Can you ladri me a Python function toìm leap years?",
        "nll_prompt": -190.64224243164062
    },
    {
        "epoch": 3,
        "loss": 0.3553910255432129,
        "best_loss": 0.3553910255432129,
        "best_kl": 8.82060432434082,
        "best_std": 0.34787874221801757,
        "cur_kl": 8.82060432434082,
        "cur_std": 0.34787874221801757,
        "prompt": "<bos>Can youscalatest me a Python function toìm leap years?",
        "nll_prompt": -185.96253967285156
    },
    {
        "epoch": 4,
        "loss": 0.3504701852798462,
        "best_loss": 0.3504701852798462,
        "best_kl": 8.64543342590332,
        "best_std": 0.3402467012405396,
        "cur_kl": 8.64543342590332,
        "cur_std": 0.3402467012405396,
        "prompt": "<bos> Wak youscalatest me a Python function toìm leap years?",
        "nll_prompt": -193.9939727783203
    },
    {
        "epoch": 5,
        "loss": 0.3452485501766205,
        "best_loss": 0.3452485501766205,
        "best_kl": 8.50561237335205,
        "best_std": 0.33828537464141845,
        "cur_kl": 8.50561237335205,
        "cur_std": 0.33828537464141845,
        "prompt": "<bos> Wak youscalatest порядке a Python function toìm leap years?",
        "nll_prompt": -206.90219116210938
    },
    {
        "epoch": 6,
        "loss": 0.34836679697036743,
        "best_loss": 0.3452485501766205,
        "best_kl": 8.50561237335205,
        "best_std": 0.33828537464141845,
        "cur_kl": 8.788676261901855,
        "cur_std": 0.35342409610748293,
        "prompt": "<bos> Wak you simplif порядке a Python function toìm leap years?",
        "nll_prompt": -200.35609436035156
    },
    {
        "epoch": 7,
        "loss": 0.3407360911369324,
        "best_loss": 0.3407360911369324,
        "best_kl": 8.467853546142578,
        "best_std": 0.3195711612701416,
        "cur_kl": 8.467853546142578,
        "cur_std": 0.3195711612701416,
        "prompt": "<bos> Wak you simplif порядке a Python function toulatory leap years?",
        "nll_prompt": -200.11026000976562
    },
    {
        "epoch": 8,
        "loss": 0.3327094614505768,
        "best_loss": 0.3327094614505768,
        "best_kl": 8.05611801147461,
        "best_std": 0.30922565460205076,
        "cur_kl": 8.05611801147461,
        "cur_std": 0.30922565460205076,
        "prompt": "<bos> ApiService you simplif порядке a Python function toulatory leap years?",
        "nll_prompt": -214.288330078125
    },
    {
        "epoch": 9,
        "loss": 0.32946088910102844,
        "best_loss": 0.32946088910102844,
        "best_kl": 7.937707424163818,
        "best_std": 0.31709678173065187,
        "cur_kl": 7.937707424163818,
        "cur_std": 0.31709678173065187,
        "prompt": "<bos> ApiService you superbe порядке a Python function toulatory leap years?",
        "nll_prompt": -211.4002227783203
    },
    {
        "epoch": 10,
        "loss": 0.33429765701293945,
        "best_loss": 0.32946088910102844,
        "best_kl": 7.937707424163818,
        "best_std": 0.31709678173065187,
        "cur_kl": 8.132216453552246,
        "cur_std": 0.32801625728607176,
        "prompt": "<bos> ApiService you superbe maisha a Python function toulatory leap years?",
        "nll_prompt": -226.238037109375
    },
    {
        "epoch": 11,
        "loss": 0.3485507071018219,
        "best_loss": 0.32946088910102844,
        "best_kl": 7.937707424163818,
        "best_std": 0.31709678173065187,
        "cur_kl": 8.451258659362793,
        "cur_std": 0.29602000713348386,
        "prompt": "<bos> ApiService you superbe approximates a Python function toulatory leap years?",
        "nll_prompt": -210.62803649902344
    },
    {
        "epoch": 12,
        "loss": 0.36182016134262085,
        "best_loss": 0.32946088910102844,
        "best_kl": 7.937707424163818,
        "best_std": 0.31709678173065187,
        "cur_kl": 9.05787181854248,
        "cur_std": 0.3482248306274414,
        "prompt": "<bos> ApiService you superbe Alec a Python function toulatory leap years?",
        "nll_prompt": -210.8521728515625
    },
    {
        "epoch": 13,
        "loss": 0.3538687825202942,
        "best_loss": 0.32946088910102844,
        "best_kl": 7.937707424163818,
        "best_std": 0.31709678173065187,
        "cur_kl": 8.823147773742676,
        "cur_std": 0.3523355722427368,
        "prompt": "<bos> ApiService youায় Alec a Python function toulatory leap years?",
        "nll_prompt": -205.3210906982422
    },
    {
        "epoch": 14,
        "loss": 0.3331648111343384,
        "best_loss": 0.32946088910102844,
        "best_kl": 7.937707424163818,
        "best_std": 0.31709678173065187,
        "cur_kl": 8.218684196472168,
        "cur_std": 0.3266657114028931,
        "prompt": "<bos> ApiService youায়}^{*} a Python function toulatory leap years?",
        "nll_prompt": -204.83058166503906
    },
    {
        "epoch": 15,
        "loss": 0.30974081158638,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 7.276155948638916,
        "cur_std": 0.2925427913665771,
        "prompt": "<bos> ApiService youায় considération a Python function toulatory leap years?",
        "nll_prompt": -226.87693786621094
    },
    {
        "epoch": 16,
        "loss": 0.3146546185016632,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 7.378911018371582,
        "cur_std": 0.3009335517883301,
        "prompt": "<bos> ApiService you jati considération a Python function toulatory leap years?",
        "nll_prompt": -243.95616149902344
    },
    {
        "epoch": 17,
        "loss": 0.3241614103317261,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 7.806620121002197,
        "cur_std": 0.3049006938934326,
        "prompt": "<bos> ApiService youPurpose considération a Python function toulatory leap years?",
        "nll_prompt": -208.0662841796875
    },
    {
        "epoch": 18,
        "loss": 0.3355739414691925,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 8.123147010803223,
        "cur_std": 0.3170135974884033,
        "prompt": "<bos> lara youPurpose considération a Python function toulatory leap years?",
        "nll_prompt": -165.1373291015625
    },
    {
        "epoch": 19,
        "loss": 0.31750771403312683,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 7.614155292510986,
        "cur_std": 0.3076413631439209,
        "prompt": "<bos> regul youPurpose considération a Python function toulatory leap years?",
        "nll_prompt": -196.5688934326172
    },
    {
        "epoch": 20,
        "loss": 0.3253602385520935,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 7.936018466949463,
        "cur_std": 0.31754090785980227,
        "prompt": "<bos> regul youPurpose whiche a Python function toulatory leap years?",
        "nll_prompt": -190.9548797607422
    },
    {
        "epoch": 21,
        "loss": 0.3352477252483368,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 8.236383438110352,
        "cur_std": 0.32941312789916993,
        "prompt": "<bos> regul you ardu whiche a Python function toulatory leap years?",
        "nll_prompt": -184.3717041015625
    },
    {
        "epoch": 22,
        "loss": 0.33568403124809265,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 8.21920394897461,
        "cur_std": 0.32666375637054446,
        "prompt": "<bos> regul you juven whiche a Python function toulatory leap years?",
        "nll_prompt": -196.42567443847656
    },
    {
        "epoch": 23,
        "loss": 0.3233138918876648,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 7.8306884765625,
        "cur_std": 0.3067148685455322,
        "prompt": "<bos> regul you frames whiche a Python function toulatory leap years?",
        "nll_prompt": -173.7407989501953
    },
    {
        "epoch": 24,
        "loss": 0.3308859169483185,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 8.050485610961914,
        "cur_std": 0.31315610408782957,
        "prompt": "<bos> regul you frames kasar a Python function toulatory leap years?",
        "nll_prompt": -179.64181518554688
    },
    {
        "epoch": 25,
        "loss": 0.33850327134132385,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 8.356782913208008,
        "cur_std": 0.33549747467041013,
        "prompt": "<bos> regul youMeik kasar a Python function toulatory leap years?",
        "nll_prompt": -177.83609008789062
    },
    {
        "epoch": 26,
        "loss": 0.33524370193481445,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 8.25741195678711,
        "cur_std": 0.3290585517883301,
        "prompt": "<bos> regul youMeik uninten a Python function toulatory leap years?",
        "nll_prompt": -195.46234130859375
    },
    {
        "epoch": 27,
        "loss": 0.3349112272262573,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 8.184735298156738,
        "cur_std": 0.3279410839080811,
        "prompt": "<bos> regul you gom uninten a Python function toulatory leap years?",
        "nll_prompt": -175.04486083984375
    },
    {
        "epoch": 28,
        "loss": 0.32330894470214844,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 7.803414344787598,
        "cur_std": 0.3166203498840332,
        "prompt": "<bos> regul you pursuing uninten a Python function toulatory leap years?",
        "nll_prompt": -181.56149291992188
    },
    {
        "epoch": 29,
        "loss": 0.33406201004981995,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 8.193160057067871,
        "cur_std": 0.3273789405822754,
        "prompt": "<bos> regul youAHH uninten a Python function toulatory leap years?",
        "nll_prompt": -184.29364013671875
    },
    {
        "epoch": 30,
        "loss": 0.33797210454940796,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 8.252313613891602,
        "cur_std": 0.3321141242980957,
        "prompt": "<bos> regul youusing uninten a Python function toulatory leap years?",
        "nll_prompt": -175.64622497558594
    },
    {
        "epoch": 31,
        "loss": 0.3365287184715271,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 8.27718734741211,
        "cur_std": 0.3280224323272705,
        "prompt": "<bos> regul you ·· uninten a Python function toulatory leap years?",
        "nll_prompt": -187.1015625
    },
    {
        "epoch": 32,
        "loss": 0.33191797137260437,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 8.08548355102539,
        "cur_std": 0.3091559410095215,
        "prompt": "<bos> regul you ·· uninten a Python function to defining leap years?",
        "nll_prompt": -180.031982421875
    },
    {
        "epoch": 33,
        "loss": 0.3240247666835785,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 7.8424973487854,
        "cur_std": 0.2980365753173828,
        "prompt": "<bos> regul you ·· determine a Python function to defining leap years?",
        "nll_prompt": -166.72824096679688
    },
    {
        "epoch": 34,
        "loss": 0.32973071932792664,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 8.067610740661621,
        "cur_std": 0.31150662899017334,
        "prompt": "<bos> regul mcdonald ·· determine a Python function to defining leap years?",
        "nll_prompt": -190.13612365722656
    },
    {
        "epoch": 35,
        "loss": 0.32497501373291016,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 7.893677711486816,
        "cur_std": 0.30042548179626466,
        "prompt": "<bos> regul mcdonald riva determine a Python function to defining leap years?",
        "nll_prompt": -191.23672485351562
    },
    {
        "epoch": 36,
        "loss": 0.3308226764202118,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 8.09821605682373,
        "cur_std": 0.3111546516418457,
        "prompt": "<bos> regul mcdonald amanda determine a Python function to defining leap years?",
        "nll_prompt": -183.63784790039062
    },
    {
        "epoch": 37,
        "loss": 0.33125731348991394,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 8.057083129882812,
        "cur_std": 0.3031117916107178,
        "prompt": "<bos> regul mcdonald deleter determine a Python function to defining leap years?",
        "nll_prompt": -183.3202362060547
    },
    {
        "epoch": 38,
        "loss": 0.32606348395347595,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 7.857302188873291,
        "cur_std": 0.2934136390686035,
        "prompt": "<bos> regul져 deleter determine a Python function to defining leap years?",
        "nll_prompt": -175.35049438476562
    },
    {
        "epoch": 39,
        "loss": 0.32331252098083496,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 7.768437385559082,
        "cur_std": 0.2937586784362793,
        "prompt": "<bos> regul Ministero deleter determine a Python function to defining leap years?",
        "nll_prompt": -193.19851684570312
    },
    {
        "epoch": 40,
        "loss": 0.3202842175960541,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 7.755354881286621,
        "cur_std": 0.29358654022216796,
        "prompt": "<bos> regul vedea deleter determine a Python function to defining leap years?",
        "nll_prompt": -185.8873748779297
    },
    {
        "epoch": 41,
        "loss": 0.31586748361587524,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 7.535991191864014,
        "cur_std": 0.29512312412261965,
        "prompt": "<bos> regul vedea modes determine a Python function to defining leap years?",
        "nll_prompt": -180.6824951171875
    },
    {
        "epoch": 42,
        "loss": 0.31906092166900635,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 7.7131805419921875,
        "cur_std": 0.3133859157562256,
        "prompt": "<bos> regul vedea jsonArray determine a Python function to defining leap years?",
        "nll_prompt": -194.70372009277344
    },
    {
        "epoch": 43,
        "loss": 0.32048869132995605,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 7.673368453979492,
        "cur_std": 0.28959567546844484,
        "prompt": "<bos> regul vedea Hacks determine a Python function to defining leap years?",
        "nll_prompt": -194.86436462402344
    },
    {
        "epoch": 44,
        "loss": 0.3313564360141754,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 8.202028274536133,
        "cur_std": 0.3047941207885742,
        "prompt": "<bos> regul vedea keram determine a Python function to defining leap years?",
        "nll_prompt": -185.6036376953125
    },
    {
        "epoch": 45,
        "loss": 0.3174334764480591,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 7.625285625457764,
        "cur_std": 0.2929917097091675,
        "prompt": "<bos> regul Wandering keram determine a Python function to defining leap years?",
        "nll_prompt": -197.17022705078125
    },
    {
        "epoch": 46,
        "loss": 0.3288422226905823,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 7.887415409088135,
        "cur_std": 0.3107386827468872,
        "prompt": "<bos> regul Wandering keramfohlen a Python function to defining leap years?",
        "nll_prompt": -222.2375946044922
    },
    {
        "epoch": 47,
        "loss": 0.32835373282432556,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 7.866086483001709,
        "cur_std": 0.3072232961654663,
        "prompt": "<bos> regul\"\"); keramfohlen a Python function to defining leap years?",
        "nll_prompt": -222.115966796875
    },
    {
        "epoch": 48,
        "loss": 0.3313291370868683,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 8.085846900939941,
        "cur_std": 0.3079803466796875,
        "prompt": "<bos> regul Aseg keramfohlen a Python function to defining leap years?",
        "nll_prompt": -224.55105590820312
    },
    {
        "epoch": 49,
        "loss": 0.3215506970882416,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 7.728806018829346,
        "cur_std": 0.3009232997894287,
        "prompt": "<bos> regul Aseg keram reccom a Python function to defining leap years?",
        "nll_prompt": -215.84979248046875
    },
    {
        "epoch": 50,
        "loss": 0.317306250333786,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 7.581704139709473,
        "cur_std": 0.2988292217254639,
        "prompt": "<bos> regul AsegHen reccom a Python function to defining leap years?",
        "nll_prompt": -196.821533203125
    },
    {
        "epoch": 51,
        "loss": 0.3218258321285248,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 7.7029128074646,
        "cur_std": 0.30507917404174806,
        "prompt": "<bos> stockholm AsegHen reccom a Python function to defining leap years?",
        "nll_prompt": -154.937255859375
    },
    {
        "epoch": 52,
        "loss": 0.3134782314300537,
        "best_loss": 0.30974081158638,
        "best_kl": 7.276155948638916,
        "best_std": 0.2925427913665771,
        "cur_kl": 7.353520393371582,
        "cur_std": 0.3032970666885376,
        "prompt": "<bos> stockholm AsegHen pitching a Python function to defining leap years?",
        "nll_prompt": -148.31939697265625
    },
    {
        "epoch": 53,
        "loss": 0.3073550760746002,
        "best_loss": 0.3073550760746002,
        "best_kl": 7.2084269523620605,
        "best_std": 0.2885406017303467,
        "cur_kl": 7.2084269523620605,
        "cur_std": 0.2885406017303467,
        "prompt": "<bos>CloseOperation AsegHen pitching a Python function to defining leap years?",
        "nll_prompt": -236.60122680664062
    },
    {
        "epoch": 54,
        "loss": 0.31872817873954773,
        "best_loss": 0.3073550760746002,
        "best_kl": 7.2084269523620605,
        "best_std": 0.2885406017303467,
        "cur_kl": 7.5338358879089355,
        "cur_std": 0.3019712448120117,
        "prompt": "<bos>CloseOperation totaHen pitching a Python function to defining leap years?",
        "nll_prompt": -228.20555114746094
    },
    {
        "epoch": 55,
        "loss": 0.30795368552207947,
        "best_loss": 0.3073550760746002,
        "best_kl": 7.101964950561523,
        "best_std": 0.29609715938568115,
        "cur_kl": 7.101964950561523,
        "cur_std": 0.29609715938568115,
        "prompt": "<bos>CloseOperation personnaliséesHen pitching a Python function to defining leap years?",
        "nll_prompt": -245.93560791015625
    },
    {
        "epoch": 56,
        "loss": 0.30960381031036377,
        "best_loss": 0.3073550760746002,
        "best_kl": 7.101964950561523,
        "best_std": 0.29609715938568115,
        "cur_kl": 7.2094950675964355,
        "cur_std": 0.2945213556289673,
        "prompt": "<bos>CloseOperation personnalisées Necess pitching a Python function to defining leap years?",
        "nll_prompt": -253.76116943359375
    },
    {
        "epoch": 57,
        "loss": 0.3208885192871094,
        "best_loss": 0.3073550760746002,
        "best_kl": 7.101964950561523,
        "best_std": 0.29609715938568115,
        "cur_kl": 7.571320533752441,
        "cur_std": 0.2983842372894287,
        "prompt": "<bos>CloseOperation personnalisées Necess thiệu a Python function to defining leap years?",
        "nll_prompt": -263.9004211425781
    },
    {
        "epoch": 58,
        "loss": 0.32126691937446594,
        "best_loss": 0.3073550760746002,
        "best_kl": 7.101964950561523,
        "best_std": 0.29609715938568115,
        "cur_kl": 7.459116458892822,
        "cur_std": 0.2936264514923096,
        "prompt": "<bos>CloseOperation personnalisées Gouvernement thiệu a Python function to defining leap years?",
        "nll_prompt": -272.337890625
    },
    {
        "epoch": 59,
        "loss": 0.311886727809906,
        "best_loss": 0.3073550760746002,
        "best_kl": 7.101964950561523,
        "best_std": 0.29609715938568115,
        "cur_kl": 7.231550216674805,
        "cur_std": 0.28630380630493163,
        "prompt": "<bos>CloseOperation stockholm Gouvernement thiệu a Python function to defining leap years?",
        "nll_prompt": -294.850830078125
    },
    {
        "epoch": 60,
        "loss": 0.31270459294319153,
        "best_loss": 0.3073550760746002,
        "best_kl": 7.101964950561523,
        "best_std": 0.29609715938568115,
        "cur_kl": 7.25961971282959,
        "cur_std": 0.2897241830825806,
        "prompt": "<bos>CloseOperation stockholm orch thiệu a Python function to defining leap years?",
        "nll_prompt": -282.8970947265625
    },
    {
        "epoch": 61,
        "loss": 0.317868173122406,
        "best_loss": 0.3073550760746002,
        "best_kl": 7.101964950561523,
        "best_std": 0.29609715938568115,
        "cur_kl": 7.4579758644104,
        "cur_std": 0.29230523109436035,
        "prompt": "<bos>CloseOperation stockholm nong thiệu a Python function to defining leap years?",
        "nll_prompt": -288.27691650390625
    },
    {
        "epoch": 62,
        "loss": 0.3115503191947937,
        "best_loss": 0.3073550760746002,
        "best_kl": 7.101964950561523,
        "best_std": 0.29609715938568115,
        "cur_kl": 7.22625732421875,
        "cur_std": 0.2929427146911621,
        "prompt": "<bos>createTable stockholm nong thiệu a Python function to defining leap years?",
        "nll_prompt": -248.92138671875
    },
    {
        "epoch": 63,
        "loss": 0.2998282313346863,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 6.870242118835449,
        "cur_std": 0.27893977165222167,
        "prompt": "<bos>createTableΑνα nong thiệu a Python function to defining leap years?",
        "nll_prompt": -252.574462890625
    },
    {
        "epoch": 64,
        "loss": 0.3093506097793579,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.158376216888428,
        "cur_std": 0.28956849575042726,
        "prompt": "<bos>createTable gend nong thiệu a Python function to defining leap years?",
        "nll_prompt": -233.35874938964844
    },
    {
        "epoch": 65,
        "loss": 0.3060171902179718,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.041816234588623,
        "cur_std": 0.2793464660644531,
        "prompt": "<bos> getField gend nong thiệu a Python function to defining leap years?",
        "nll_prompt": -238.10531616210938
    },
    {
        "epoch": 66,
        "loss": 0.30182620882987976,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 6.899828910827637,
        "cur_std": 0.27924461364746095,
        "prompt": "<bos> réflé gend nong thiệu a Python function to defining leap years?",
        "nll_prompt": -197.62030029296875
    },
    {
        "epoch": 67,
        "loss": 0.3079448342323303,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.136584758758545,
        "cur_std": 0.28201680183410643,
        "prompt": "<bos> Arabes gend nong thiệu a Python function to defining leap years?",
        "nll_prompt": -184.5143280029297
    },
    {
        "epoch": 68,
        "loss": 0.31519079208374023,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.374523639678955,
        "cur_std": 0.28950936794281007,
        "prompt": "<bos> Arabes rafra nong thiệu a Python function to defining leap years?",
        "nll_prompt": -208.80552673339844
    },
    {
        "epoch": 69,
        "loss": 0.3113584518432617,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.3106231689453125,
        "cur_std": 0.28814847469329835,
        "prompt": "<bos> Ev rafra nong thiệu a Python function to defining leap years?",
        "nll_prompt": -226.7060546875
    },
    {
        "epoch": 70,
        "loss": 0.31626397371292114,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.251285076141357,
        "cur_std": 0.2953204870223999,
        "prompt": "<bos> Ev rafrathanh thiệu a Python function to defining leap years?",
        "nll_prompt": -231.24154663085938
    },
    {
        "epoch": 71,
        "loss": 0.31213706731796265,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.138386249542236,
        "cur_std": 0.2928522348403931,
        "prompt": "<bos> Ev apprehenthanh thiệu a Python function to defining leap years?",
        "nll_prompt": -233.50979614257812
    },
    {
        "epoch": 72,
        "loss": 0.31577250361442566,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.31123161315918,
        "cur_std": 0.292580771446228,
        "prompt": "<bos> Ev apprehen zimmer thiệu a Python function to defining leap years?",
        "nll_prompt": -242.654541015625
    },
    {
        "epoch": 73,
        "loss": 0.30739814043045044,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.006619930267334,
        "cur_std": 0.28662092685699464,
        "prompt": "<bos> Ev各 zimmer thiệu a Python function to defining leap years?",
        "nll_prompt": -210.85594177246094
    },
    {
        "epoch": 74,
        "loss": 0.3046024739742279,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 6.917363166809082,
        "cur_std": 0.29272046089172366,
        "prompt": "<bos> Ev各エン thiệu a Python function to defining leap years?",
        "nll_prompt": -197.8711395263672
    },
    {
        "epoch": 75,
        "loss": 0.31191620230674744,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.23749303817749,
        "cur_std": 0.29433159828186034,
        "prompt": "<bos> Ev各エン thiệu veja Python function to defining leap years?",
        "nll_prompt": -217.09225463867188
    },
    {
        "epoch": 76,
        "loss": 0.3187295198440552,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.457284927368164,
        "cur_std": 0.2849359750747681,
        "prompt": "<bos> Ev各エン thiệu ritard Python function to defining leap years?",
        "nll_prompt": -224.7473907470703
    },
    {
        "epoch": 77,
        "loss": 0.34315305948257446,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 8.376734733581543,
        "cur_std": 0.29859375953674316,
        "prompt": "<bos> Ev各 beweisen thiệu ritard Python function to defining leap years?",
        "nll_prompt": -240.228271484375
    },
    {
        "epoch": 78,
        "loss": 0.33752861618995667,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 8.217830657958984,
        "cur_std": 0.3069762706756592,
        "prompt": "<bos> Ev各 beweisen thiệu fupp Python function to defining leap years?",
        "nll_prompt": -250.31396484375
    },
    {
        "epoch": 79,
        "loss": 0.3316338360309601,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 8.011273384094238,
        "cur_std": 0.30634617805480957,
        "prompt": "<bos> Ev<bos> beweisen thiệu fupp Python function to defining leap years?",
        "nll_prompt": -258.2403869628906
    },
    {
        "epoch": 80,
        "loss": 0.3223630487918854,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.646168231964111,
        "cur_std": 0.3028253078460693,
        "prompt": "<bos> Ev<bos>figurine thiệu fupp Python function to defining leap years?",
        "nll_prompt": -272.50018310546875
    },
    {
        "epoch": 81,
        "loss": 0.3227960467338562,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.721058368682861,
        "cur_std": 0.30213935375213624,
        "prompt": "<bos> Ev<bos>richText thiệu fupp Python function to defining leap years?",
        "nll_prompt": -269.1363220214844
    },
    {
        "epoch": 82,
        "loss": 0.32088226079940796,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.590340614318848,
        "cur_std": 0.3011181116104126,
        "prompt": "<bos> Ev<bos> coffret thiệu fupp Python function to defining leap years?",
        "nll_prompt": -285.7969970703125
    },
    {
        "epoch": 83,
        "loss": 0.31741175055503845,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.432503700256348,
        "cur_std": 0.28064353466033937,
        "prompt": "<bos> Ev<bos> coffret thiệuRaphael Python function to defining leap years?",
        "nll_prompt": -270.78662109375
    },
    {
        "epoch": 84,
        "loss": 0.32068294286727905,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.445151329040527,
        "cur_std": 0.28573901653289796,
        "prompt": "Duración Ev<bos> coffret thiệuRaphael Python function to defining leap years?",
        "nll_prompt": -240.49664306640625
    },
    {
        "epoch": 85,
        "loss": 0.3197202682495117,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.500694274902344,
        "cur_std": 0.2812400579452515,
        "prompt": "Duración{}'.<bos> coffret thiệuRaphael Python function to defining leap years?",
        "nll_prompt": -236.6559600830078
    },
    {
        "epoch": 86,
        "loss": 0.32020336389541626,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.59372615814209,
        "cur_std": 0.2794567823410034,
        "prompt": "Movement{}'.<bos> coffret thiệuRaphael Python function to defining leap years?",
        "nll_prompt": -226.65464782714844
    },
    {
        "epoch": 87,
        "loss": 0.3078121244907379,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.068614482879639,
        "cur_std": 0.2770704984664917,
        "prompt": "Movement�<bos> coffret thiệuRaphael Python function to defining leap years?",
        "nll_prompt": -219.29791259765625
    },
    {
        "epoch": 88,
        "loss": 0.31425851583480835,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.260740756988525,
        "cur_std": 0.2817750215530396,
        "prompt": "gridy�<bos> coffret thiệuRaphael Python function to defining leap years?",
        "nll_prompt": -233.35101318359375
    },
    {
        "epoch": 89,
        "loss": 0.3218820095062256,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.682488918304443,
        "cur_std": 0.2842763900756836,
        "prompt": " affor�<bos> coffret thiệuRaphael Python function to defining leap years?",
        "nll_prompt": -243.7802734375
    },
    {
        "epoch": 90,
        "loss": 0.3113073706626892,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.09879207611084,
        "cur_std": 0.2844069004058838,
        "prompt": "EndContext�<bos> coffret thiệuRaphael Python function to defining leap years?",
        "nll_prompt": -280.70928955078125
    },
    {
        "epoch": 91,
        "loss": 0.31124070286750793,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.155881404876709,
        "cur_std": 0.27716379165649413,
        "prompt": "EndContext�<bos> instan thiệuRaphael Python function to defining leap years?",
        "nll_prompt": -270.34295654296875
    },
    {
        "epoch": 92,
        "loss": 0.30392226576805115,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 6.952133655548096,
        "cur_std": 0.28049476146698,
        "prompt": "EndContext�<bos>Conten thiệuRaphael Python function to defining leap years?",
        "nll_prompt": -271.755615234375
    },
    {
        "epoch": 93,
        "loss": 0.31254175305366516,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.307498455047607,
        "cur_std": 0.28749048709869385,
        "prompt": "EndContext*<bos>Conten thiệuRaphael Python function to defining leap years?",
        "nll_prompt": -233.77056884765625
    },
    {
        "epoch": 94,
        "loss": 0.3147526979446411,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.351308822631836,
        "cur_std": 0.2855702877044678,
        "prompt": "EndContext*<bos> ajustable thiệuRaphael Python function to defining leap years?",
        "nll_prompt": -228.712646484375
    },
    {
        "epoch": 95,
        "loss": 0.3160645365715027,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.386684417724609,
        "cur_std": 0.2902310848236084,
        "prompt": "EndContextglColor<bos> ajustable thiệuRaphael Python function to defining leap years?",
        "nll_prompt": -265.1249084472656
    },
    {
        "epoch": 96,
        "loss": 0.3210034966468811,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.583133220672607,
        "cur_std": 0.28556668758392334,
        "prompt": "EndContextglColor<bos> nõ thiệuRaphael Python function to defining leap years?",
        "nll_prompt": -265.8388977050781
    },
    {
        "epoch": 97,
        "loss": 0.31438517570495605,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.290546894073486,
        "cur_std": 0.2694999694824219,
        "prompt": "EndContext مشارکت‌کنندگان<bos> nõ thiệuRaphael Python function to defining leap years?",
        "nll_prompt": -269.541748046875
    },
    {
        "epoch": 98,
        "loss": 0.3168579638004303,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.431118011474609,
        "cur_std": 0.278790807723999,
        "prompt": "EndContext مشارکت‌کنندگان<bos>NOPE thiệuRaphael Python function to defining leap years?",
        "nll_prompt": -270.1802978515625
    },
    {
        "epoch": 99,
        "loss": 0.31902840733528137,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.53452205657959,
        "cur_std": 0.28759920597076416,
        "prompt": "EndContext아이<bos>NOPE thiệuRaphael Python function to defining leap years?",
        "nll_prompt": -240.67857360839844
    },
    {
        "epoch": 100,
        "loss": 0.3098445534706116,
        "best_loss": 0.2998282313346863,
        "best_kl": 6.870242118835449,
        "best_std": 0.27893977165222167,
        "cur_kl": 7.1862359046936035,
        "cur_std": 0.2814117670059204,
        "prompt": "EndContext아이<bos>Ua thiệuRaphael Python function to defining leap years?",
        "nll_prompt": -233.25729370117188
    }
]