[
    {
        "epoch": 1,
        "loss": 0.5596819519996643,
        "best_loss": 0.5596819519996643,
        "best_kl": 11.183894157409668,
        "best_std": 0.6089168548583984,
        "cur_kl": 11.183894157409668,
        "cur_std": 0.6089168548583984,
        "prompt": "<bos>Create()) JavaScript function using map data structure to find most frequent element in array.",
        "nll_prompt": -185.1903533935547
    },
    {
        "epoch": 2,
        "loss": 0.4308899939060211,
        "best_loss": 0.4308899939060211,
        "best_kl": 7.130943298339844,
        "best_std": 0.2706792116165161,
        "cur_kl": 7.130943298339844,
        "cur_std": 0.2706792116165161,
        "prompt": "<bos>Create()) JavaScript function using TOC data structure to find most frequent element in array.",
        "nll_prompt": -214.00332641601562
    },
    {
        "epoch": 3,
        "loss": 0.31200021505355835,
        "best_loss": 0.31200021505355835,
        "best_kl": 3.33028507232666,
        "best_std": 0.21394000053405762,
        "cur_kl": 3.33028507232666,
        "cur_std": 0.21394000053405762,
        "prompt": "<bos>Create()) JavaScript function using TOC fortn structure to find most frequent element in array.",
        "nll_prompt": -256.4678955078125
    },
    {
        "epoch": 4,
        "loss": 0.28964781761169434,
        "best_loss": 0.28964781761169434,
        "best_kl": 2.6510121822357178,
        "best_std": 0.2141864061355591,
        "cur_kl": 2.6510121822357178,
        "cur_std": 0.2141864061355591,
        "prompt": "<bos>Create()) JavaScript function using TOC fortn structure*/ find most frequent element in array.",
        "nll_prompt": -293.46612548828125
    },
    {
        "epoch": 5,
        "loss": 0.2831592261791229,
        "best_loss": 0.2831592261791229,
        "best_kl": 2.235814094543457,
        "best_std": 0.18493454456329345,
        "cur_kl": 2.235814094543457,
        "cur_std": 0.18493454456329345,
        "prompt": "<bos>Create habile JavaScript function using TOC fortn structure*/ find most frequent element in array.",
        "nll_prompt": -287.62109375
    },
    {
        "epoch": 6,
        "loss": 0.2764914333820343,
        "best_loss": 0.2764914333820343,
        "best_kl": 1.9947901964187622,
        "best_std": 0.1789728283882141,
        "cur_kl": 1.9947901964187622,
        "cur_std": 0.1789728283882141,
        "prompt": "<bos>Create habile JavaScript function using TOC할 structure*/ find most frequent element in array.",
        "nll_prompt": -261.18072509765625
    },
    {
        "epoch": 7,
        "loss": 0.2663775682449341,
        "best_loss": 0.2663775682449341,
        "best_kl": 1.644061803817749,
        "best_std": 0.15462585687637329,
        "cur_kl": 1.644061803817749,
        "cur_std": 0.15462585687637329,
        "prompt": "<bos>Create habile JavaScript function using TOC할 jugé*/ find most frequent element in array.",
        "nll_prompt": -277.2333984375
    },
    {
        "epoch": 8,
        "loss": 0.2547124922275543,
        "best_loss": 0.2547124922275543,
        "best_kl": 1.1648484468460083,
        "best_std": 0.11780261993408203,
        "cur_kl": 1.1648484468460083,
        "cur_std": 0.11780261993408203,
        "prompt": "<bos>Create habile JavaScript function usingpage할 jugé*/ find most frequent element in array.",
        "nll_prompt": -267.5924987792969
    },
    {
        "epoch": 9,
        "loss": 0.24827979505062103,
        "best_loss": 0.24827979505062103,
        "best_kl": 1.011356234550476,
        "best_std": 0.12555007934570311,
        "cur_kl": 1.011356234550476,
        "cur_std": 0.12555007934570311,
        "prompt": "<bos>Create habile JavaScript function usingpage Consiglio jugé*/ find most frequent element in array.",
        "nll_prompt": -291.902099609375
    },
    {
        "epoch": 10,
        "loss": 0.24538922309875488,
        "best_loss": 0.24538922309875488,
        "best_kl": 0.7411504983901978,
        "best_std": 0.10301734209060669,
        "cur_kl": 0.7411504983901978,
        "cur_std": 0.10301734209060669,
        "prompt": "<bos>Create habile JavaScript function usingpage Consiglio jugé뭔 find most frequent element in array.",
        "nll_prompt": -286.6383972167969
    },
    {
        "epoch": 11,
        "loss": 0.24428491294384003,
        "best_loss": 0.24428491294384003,
        "best_kl": 0.656511127948761,
        "best_std": 0.10990928411483765,
        "cur_kl": 0.656511127948761,
        "cur_std": 0.10990928411483765,
        "prompt": "<bos>Create habile JavaScript function usingcreas Consiglio jugé뭔 find most frequent element in array.",
        "nll_prompt": -278.9412841796875
    },
    {
        "epoch": 12,
        "loss": 0.2451055496931076,
        "best_loss": 0.24428491294384003,
        "best_kl": 0.656511127948761,
        "best_std": 0.10990928411483765,
        "cur_kl": 0.6919710636138916,
        "cur_std": 0.11351845264434815,
        "prompt": "<bos>Create habile JavaScript function using Leurs Consiglio jugé뭔 find most frequent element in array.",
        "nll_prompt": -298.5025939941406
    },
    {
        "epoch": 13,
        "loss": 0.24365462362766266,
        "best_loss": 0.24365462362766266,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.6144914031028748,
        "cur_std": 0.10658185482025147,
        "prompt": "<bos>Create habile JavaScript function using Leurs tille jugé뭔 find most frequent element in array.",
        "nll_prompt": -286.6717834472656
    },
    {
        "epoch": 14,
        "loss": 0.24626211822032928,
        "best_loss": 0.24365462362766266,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.7881355285644531,
        "cur_std": 0.13221668004989623,
        "prompt": "<bos>Create valiant JavaScript function using Leurs tille jugé뭔 find most frequent element in array.",
        "nll_prompt": -281.1317443847656
    },
    {
        "epoch": 15,
        "loss": 0.24919797480106354,
        "best_loss": 0.24365462362766266,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8657728433609009,
        "cur_std": 0.13808126449584962,
        "prompt": "<bos>Create valiant JavaScript function using Leurs tille Cæ뭔 find most frequent element in array.",
        "nll_prompt": -265.567138671875
    },
    {
        "epoch": 16,
        "loss": 0.24878831207752228,
        "best_loss": 0.24365462362766266,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.7496769428253174,
        "cur_std": 0.13171790838241576,
        "prompt": "<bos>Create valiant JavaScript function using librement tille Cæ뭔 find most frequent element in array.",
        "nll_prompt": -278.93658447265625
    },
    {
        "epoch": 17,
        "loss": 0.24911029636859894,
        "best_loss": 0.24365462362766266,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.9045721292495728,
        "cur_std": 0.1454840660095215,
        "prompt": "<bos>Create valiant JavaScript function outlander librement tille Cæ뭔 find most frequent element in array.",
        "nll_prompt": -293.05072021484375
    },
    {
        "epoch": 18,
        "loss": 0.24625377357006073,
        "best_loss": 0.24365462362766266,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.7734391689300537,
        "cur_std": 0.12985073328018187,
        "prompt": "<bos>Create valiant JavaScript function chande librement tille Cæ뭔 find most frequent element in array.",
        "nll_prompt": -314.7048645019531
    },
    {
        "epoch": 19,
        "loss": 0.24745075404644012,
        "best_loss": 0.24365462362766266,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8289332985877991,
        "cur_std": 0.13750665187835692,
        "prompt": "<bos>Create valiant JavaScript function chande librement espoir Cæ뭔 find most frequent element in array.",
        "nll_prompt": -306.705322265625
    },
    {
        "epoch": 20,
        "loss": 0.2487432062625885,
        "best_loss": 0.24365462362766266,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8535517454147339,
        "cur_std": 0.13637948036193848,
        "prompt": "<bos>Create valiant JavaScript function chande librement possu Cæ뭔 find most frequent element in array.",
        "nll_prompt": -308.5675964355469
    },
    {
        "epoch": 21,
        "loss": 0.24716660380363464,
        "best_loss": 0.24365462362766266,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8182108998298645,
        "cur_std": 0.129893159866333,
        "prompt": "<bos>Create valiant JavaScript function chande librement appunto Cæ뭔 find most frequent element in array.",
        "nll_prompt": -310.7247314453125
    },
    {
        "epoch": 22,
        "loss": 0.24597398936748505,
        "best_loss": 0.24365462362766266,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.7646418809890747,
        "cur_std": 0.1265994668006897,
        "prompt": "<bos>Create valiant JavaScript function increa librement appunto Cæ뭔 find most frequent element in array.",
        "nll_prompt": -315.8145446777344
    },
    {
        "epoch": 23,
        "loss": 0.2442357987165451,
        "best_loss": 0.24365462362766266,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.7267303466796875,
        "cur_std": 0.12387549877166748,
        "prompt": "<bos>Create valiant JavaScript functionAndrey librement appunto Cæ뭔 find most frequent element in array.",
        "nll_prompt": -300.5008239746094
    },
    {
        "epoch": 24,
        "loss": 0.24464695155620575,
        "best_loss": 0.24365462362766266,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8075534105300903,
        "cur_std": 0.13915356397628784,
        "prompt": "<bos>Create valiant JavaScript functionAndrey librement appuntogénero뭔 find most frequent element in array.",
        "nll_prompt": -302.87982177734375
    },
    {
        "epoch": 25,
        "loss": 0.2460022121667862,
        "best_loss": 0.24365462362766266,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8532021045684814,
        "cur_std": 0.1462307095527649,
        "prompt": "<bos>Create valiant JavaScript functionAndrey librement innovagénero뭔 find most frequent element in array.",
        "nll_prompt": -295.3409423828125
    },
    {
        "epoch": 26,
        "loss": 0.24365201592445374,
        "best_loss": 0.24365201592445374,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.6517981290817261,
        "cur_std": 0.12161151170730591,
        "prompt": "<bos>Create valiant JavaScript functionAndrey librement innova Giugno뭔 find most frequent element in array.",
        "nll_prompt": -291.41693115234375
    },
    {
        "epoch": 27,
        "loss": 0.24400962889194489,
        "best_loss": 0.24365201592445374,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.74322110414505,
        "cur_std": 0.13248502016067504,
        "prompt": "<bos>Create valiant JavaScript functionAndrey librement innovaConclusión뭔 find most frequent element in array.",
        "nll_prompt": -296.38800048828125
    },
    {
        "epoch": 28,
        "loss": 0.24379009008407593,
        "best_loss": 0.24365201592445374,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.7359415888786316,
        "cur_std": 0.1186289668083191,
        "prompt": "<bos>Create valiant JavaScript functionAndrey librement innovareff뭔 find most frequent element in array.",
        "nll_prompt": -276.26336669921875
    },
    {
        "epoch": 29,
        "loss": 0.24242429435253143,
        "best_loss": 0.24242429435253143,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.6772475838661194,
        "cur_std": 0.11654421091079711,
        "prompt": "<bos>Create valiant JavaScript functionAndrey librement avancéreff뭔 find most frequent element in array.",
        "nll_prompt": -294.4288635253906
    },
    {
        "epoch": 30,
        "loss": 0.24205270409584045,
        "best_loss": 0.24205270409584045,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.7162545323371887,
        "cur_std": 0.12329953908920288,
        "prompt": "<bos>Create valiant JavaScript functionAndrey librement avancéunen뭔 find most frequent element in array.",
        "nll_prompt": -295.93115234375
    },
    {
        "epoch": 31,
        "loss": 0.24623939394950867,
        "best_loss": 0.24205270409584045,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.7931963801383972,
        "cur_std": 0.13905208110809325,
        "prompt": "<bos>Create valiant JavaScript functionAndrey librement avancéBamb뭔 find most frequent element in array.",
        "nll_prompt": -287.5164489746094
    },
    {
        "epoch": 32,
        "loss": 0.24662235379219055,
        "best_loss": 0.24205270409584045,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8053252696990967,
        "cur_std": 0.1349472999572754,
        "prompt": "<bos>Create valiant JavaScript functionAndrey librement avancé Pâ뭔 find most frequent element in array.",
        "nll_prompt": -292.4869689941406
    },
    {
        "epoch": 33,
        "loss": 0.24498103559017181,
        "best_loss": 0.24205270409584045,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.7216304540634155,
        "cur_std": 0.12426173686981201,
        "prompt": "<bos>Create valiant JavaScript functionAndrey librement nî Pâ뭔 find most frequent element in array.",
        "nll_prompt": -282.2315673828125
    },
    {
        "epoch": 34,
        "loss": 0.24767017364501953,
        "best_loss": 0.24205270409584045,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8470103144645691,
        "cur_std": 0.13563992977142333,
        "prompt": "<bos>Create valiant JavaScript functionAndrey librementIkr Pâ뭔 find most frequent element in array.",
        "nll_prompt": -298.6252136230469
    },
    {
        "epoch": 35,
        "loss": 0.24683259427547455,
        "best_loss": 0.24205270409584045,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.7634427547454834,
        "cur_std": 0.13632165193557738,
        "prompt": "<bos>Create wip JavaScript functionAndrey librementIkr Pâ뭔 find most frequent element in array.",
        "nll_prompt": -305.8024597167969
    },
    {
        "epoch": 36,
        "loss": 0.24445734918117523,
        "best_loss": 0.24205270409584045,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.6481674313545227,
        "cur_std": 0.12665780782699584,
        "prompt": "<bos>Create wip JavaScript function Să librementIkr Pâ뭔 find most frequent element in array.",
        "nll_prompt": -311.9286804199219
    },
    {
        "epoch": 37,
        "loss": 0.24514636397361755,
        "best_loss": 0.24205270409584045,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.6356790065765381,
        "cur_std": 0.11283013820648194,
        "prompt": "<bos>Create wip JavaScript function Să librementIkr/***\r뭔 find most frequent element in array.",
        "nll_prompt": -325.95257568359375
    },
    {
        "epoch": 38,
        "loss": 0.24450793862342834,
        "best_loss": 0.24205270409584045,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.6460623145103455,
        "cur_std": 0.11399039030075073,
        "prompt": "<bos>Create wip JavaScript function Să soggiorIkr/***\r뭔 find most frequent element in array.",
        "nll_prompt": -329.7635498046875
    },
    {
        "epoch": 39,
        "loss": 0.2443404346704483,
        "best_loss": 0.24205270409584045,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.6784259676933289,
        "cur_std": 0.12061245441436767,
        "prompt": "<bos>Create wip JavaScript function Să porscheIkr/***\r뭔 find most frequent element in array.",
        "nll_prompt": -325.8799133300781
    },
    {
        "epoch": 40,
        "loss": 0.24318650364875793,
        "best_loss": 0.24205270409584045,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.7927999496459961,
        "cur_std": 0.1321916937828064,
        "prompt": "<bos>Create wip JavaScript function Să porscheIkr'])뭔 find most frequent element in array.",
        "nll_prompt": -320.2272644042969
    },
    {
        "epoch": 41,
        "loss": 0.2418256253004074,
        "best_loss": 0.2418256253004074,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.6950139403343201,
        "cur_std": 0.12783608436584473,
        "prompt": "<bos>Create wip JavaScript function SăWichtigIkr'])뭔 find most frequent element in array.",
        "nll_prompt": -321.0417785644531
    },
    {
        "epoch": 42,
        "loss": 0.24239514768123627,
        "best_loss": 0.2418256253004074,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.7342512607574463,
        "cur_std": 0.12557098865509034,
        "prompt": "<bos>Create wip JavaScript function Să waerIkr'])뭔 find most frequent element in array.",
        "nll_prompt": -317.5581970214844
    },
    {
        "epoch": 43,
        "loss": 0.24522417783737183,
        "best_loss": 0.2418256253004074,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8592391610145569,
        "cur_std": 0.14975578784942628,
        "prompt": "<bos>Create wip JavaScript function Să jouantIkr'])뭔 find most frequent element in array.",
        "nll_prompt": -325.3829040527344
    },
    {
        "epoch": 44,
        "loss": 0.24144604802131653,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.7191641330718994,
        "cur_std": 0.12292532920837403,
        "prompt": "<bos>Create wip JavaScript function Să lmfaoIkr'])뭔 find most frequent element in array.",
        "nll_prompt": -334.54962158203125
    },
    {
        "epoch": 45,
        "loss": 0.24516862630844116,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8295255899429321,
        "cur_std": 0.13237955570220947,
        "prompt": "<bos>Create wip JavaScript function Să lmfaoTokenNameDOT'])뭔 find most frequent element in array.",
        "nll_prompt": -315.760986328125
    },
    {
        "epoch": 46,
        "loss": 0.24491801857948303,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8642599582672119,
        "cur_std": 0.14107184410095214,
        "prompt": "<bos>Create wip JavaScript function Să lmfaoTokenNameDOT'])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n find most frequent element in array.",
        "nll_prompt": -322.1427917480469
    },
    {
        "epoch": 47,
        "loss": 0.2498333752155304,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 1.0203481912612915,
        "cur_std": 0.15807496309280394,
        "prompt": "<bos>Create wip JavaScript function Să lmfaoTokenNameDOTVedi\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n find most frequent element in array.",
        "nll_prompt": -336.2714538574219
    },
    {
        "epoch": 48,
        "loss": 0.2482149600982666,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.9745385646820068,
        "cur_std": 0.1447487711906433,
        "prompt": "<bos>Create wip JavaScript function Să lmfaoTokenNameDOT Niet\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n find most frequent element in array.",
        "nll_prompt": -313.5003662109375
    },
    {
        "epoch": 49,
        "loss": 0.24702788889408112,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8705782294273376,
        "cur_std": 0.1365688443183899,
        "prompt": "<bos>Create wip JavaScript function Să lmfaoTokenNameDOT Pentru\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n find most frequent element in array.",
        "nll_prompt": -335.52197265625
    },
    {
        "epoch": 50,
        "loss": 0.24659648537635803,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8266134262084961,
        "cur_std": 0.12854325771331787,
        "prompt": "<bos>Create wip JavaScript function vorrei lmfaoTokenNameDOT Pentru\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n find most frequent element in array.",
        "nll_prompt": -348.70147705078125
    },
    {
        "epoch": 51,
        "loss": 0.24703536927700043,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8449912071228027,
        "cur_std": 0.14387528896331786,
        "prompt": "<bos>Create wip JavaScript function vorrei lmfaoTokenNameDOT/>\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n find most frequent element in array.",
        "nll_prompt": -351.4056396484375
    },
    {
        "epoch": 52,
        "loss": 0.24551276862621307,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.7961344718933105,
        "cur_std": 0.1361984372138977,
        "prompt": "<bos>Create wip JavaScript function souhaitez lmfaoTokenNameDOT/>\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n find most frequent element in array.",
        "nll_prompt": -327.1576232910156
    },
    {
        "epoch": 53,
        "loss": 0.24814832210540771,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8660657405853271,
        "cur_std": 0.13446465730667115,
        "prompt": "<bos>Create wip JavaScript function souhaitez usataTokenNameDOT/>\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n find most frequent element in array.",
        "nll_prompt": -335.55902099609375
    },
    {
        "epoch": 54,
        "loss": 0.24711304903030396,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8500511050224304,
        "cur_std": 0.13702584505081178,
        "prompt": "<bos>Create wip JavaScript function Și usataTokenNameDOT/>\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n find most frequent element in array.",
        "nll_prompt": -341.4409484863281
    },
    {
        "epoch": 55,
        "loss": 0.251187801361084,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 1.0788685083389282,
        "cur_std": 0.15590486526489258,
        "prompt": "<bos>Create wip JavaScript function Și poèmeTokenNameDOT/>\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n find most frequent element in array.",
        "nll_prompt": -329.86737060546875
    },
    {
        "epoch": 56,
        "loss": 0.2520078718662262,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 1.1321276426315308,
        "cur_std": 0.16423059701919557,
        "prompt": "<bos>Create wip JavaScript function Și poème vespa/>\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n find most frequent element in array.",
        "nll_prompt": -331.5375061035156
    },
    {
        "epoch": 57,
        "loss": 0.24897930026054382,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.9720399379730225,
        "cur_std": 0.15963224172592164,
        "prompt": "<bos>Create wip JavaScript function ȘiPreparazione vespa/>\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n find most frequent element in array.",
        "nll_prompt": -323.34014892578125
    },
    {
        "epoch": 58,
        "loss": 0.2490394413471222,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.9251130223274231,
        "cur_std": 0.15755002498626708,
        "prompt": "<bos>Create wip JavaScript function Și ftre vespa/>\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n find most frequent element in array.",
        "nll_prompt": -325.0244445800781
    },
    {
        "epoch": 59,
        "loss": 0.2479785829782486,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.9070727825164795,
        "cur_std": 0.1509536862373352,
        "prompt": "<bos>Create wip JavaScript function Și ftre vespa/>\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n find most frequent element in array。",
        "nll_prompt": -335.5527648925781
    },
    {
        "epoch": 60,
        "loss": 0.24518929421901703,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8580931425094604,
        "cur_std": 0.14793498516082765,
        "prompt": "<bos>Create wip JavaScript function Și ftre ugg/>\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n find most frequent element in array。",
        "nll_prompt": -319.2938232421875
    },
    {
        "epoch": 61,
        "loss": 0.2464110106229782,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8463256359100342,
        "cur_std": 0.144121515750885,
        "prompt": "<bos>Create wip JavaScript function Și ftre)<\\/>\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n find most frequent element in array。",
        "nll_prompt": -322.8692321777344
    },
    {
        "epoch": 62,
        "loss": 0.2448311150074005,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.7929877042770386,
        "cur_std": 0.1420843243598938,
        "prompt": "<bos>Create wip JavaScript function Și ftre biar/>\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n find most frequent element in array。",
        "nll_prompt": -322.48297119140625
    },
    {
        "epoch": 63,
        "loss": 0.2484220713376999,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.9902955293655396,
        "cur_std": 0.15534504652023315,
        "prompt": "<bos>Create wip JavaScript function Și ftre venait/>\";\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n find most frequent element in array。",
        "nll_prompt": -333.1448974609375
    },
    {
        "epoch": 64,
        "loss": 0.24635711312294006,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8441013693809509,
        "cur_std": 0.13659567832946778,
        "prompt": "<bos>Create wip JavaScript function Și ftre venait/>\"; unden find most frequent element in array。",
        "nll_prompt": -339.6257629394531
    },
    {
        "epoch": 65,
        "loss": 0.2505159080028534,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 1.019157886505127,
        "cur_std": 0.1573299288749695,
        "prompt": "<bos>Create wip JavaScript function Și ftre venait Tolu unden find most frequent element in array。",
        "nll_prompt": -349.3457946777344
    },
    {
        "epoch": 66,
        "loss": 0.2481032907962799,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.9420919418334961,
        "cur_std": 0.148592746257782,
        "prompt": "<bos>Create wip JavaScript function Și ftre venait Gus unden find most frequent element in array。",
        "nll_prompt": -325.49072265625
    },
    {
        "epoch": 67,
        "loss": 0.25114649534225464,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 1.058117389678955,
        "cur_std": 0.16354070901870726,
        "prompt": "<bos>Create wip JavaScript function Și ftrerzez Gus unden find most frequent element in array。",
        "nll_prompt": -329.1327819824219
    },
    {
        "epoch": 68,
        "loss": 0.2459041327238083,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8250542283058167,
        "cur_std": 0.14296309947967528,
        "prompt": "<bos>Create wip JavaScript function Și ftre ?... Gus unden find most frequent element in array。",
        "nll_prompt": -328.26580810546875
    },
    {
        "epoch": 69,
        "loss": 0.2434362918138504,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.6689077615737915,
        "cur_std": 0.129503071308136,
        "prompt": "<bos>Create wip JavaScript function Și ftre ?... Hes unden find most frequent element in array。",
        "nll_prompt": -328.9592590332031
    },
    {
        "epoch": 70,
        "loss": 0.2456502914428711,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.7115321755409241,
        "cur_std": 0.11794551610946655,
        "prompt": "<bos>Create wip JavaScript function Și__) ?... Hes unden find most frequent element in array。",
        "nll_prompt": -340.3964538574219
    },
    {
        "epoch": 71,
        "loss": 0.24331824481487274,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.7308543920516968,
        "cur_std": 0.12738009691238403,
        "prompt": "<bos>Create wip JavaScript function Șixnn ?... Hes unden find most frequent element in array。",
        "nll_prompt": -330.3890380859375
    },
    {
        "epoch": 72,
        "loss": 0.24354863166809082,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.7697814702987671,
        "cur_std": 0.12979797124862671,
        "prompt": "<bos>Create wip JavaScript function Șixnn ?... Hesczegó find most frequent element in array。",
        "nll_prompt": -336.7694091796875
    },
    {
        "epoch": 73,
        "loss": 0.24331358075141907,
        "best_loss": 0.24144604802131653,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.7777524590492249,
        "cur_std": 0.1312031626701355,
        "prompt": "<bos>Create wip JavaScript function Șixnn ?...Huhuczegó find most frequent element in array。",
        "nll_prompt": -326.6606750488281
    },
    {
        "epoch": 74,
        "loss": 0.24113406240940094,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.7037068009376526,
        "cur_std": 0.12202484607696533,
        "prompt": "<bos>Create wip JavaScript function Șixnn ?... -)czegó find most frequent element in array。",
        "nll_prompt": -328.9386291503906
    },
    {
        "epoch": 75,
        "loss": 0.24455001950263977,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.816069483757019,
        "cur_std": 0.1337290048599243,
        "prompt": "<bos>Create wip JavaScript function Șixnn ?... Févrierczegó find most frequent element in array。",
        "nll_prompt": -332.4168395996094
    },
    {
        "epoch": 76,
        "loss": 0.24442216753959656,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.7196273803710938,
        "cur_std": 0.1277391195297241,
        "prompt": "<bos>Create wip JavaScript function Și ritor ?... Févrierczegó find most frequent element in array。",
        "nll_prompt": -351.70391845703125
    },
    {
        "epoch": 77,
        "loss": 0.24729135632514954,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8282648324966431,
        "cur_std": 0.13653640747070311,
        "prompt": "<bos>Create wip JavaScript function Și uș ?... Févrierczegó find most frequent element in array。",
        "nll_prompt": -342.22906494140625
    },
    {
        "epoch": 78,
        "loss": 0.24515827000141144,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.7755564451217651,
        "cur_std": 0.13165743350982667,
        "prompt": "<bos>Create wip JavaScript function Și ușfinals Févrierczegó find most frequent element in array。",
        "nll_prompt": -340.49212646484375
    },
    {
        "epoch": 79,
        "loss": 0.24796999990940094,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 1.0186511278152466,
        "cur_std": 0.14790416955947877,
        "prompt": "<bos>Create wip JavaScript function Și ușfinals Perciczegó find most frequent element in array。",
        "nll_prompt": -339.0362548828125
    },
    {
        "epoch": 80,
        "loss": 0.24610671401023865,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8704701066017151,
        "cur_std": 0.13421883583068847,
        "prompt": "<bos>Create wip JavaScript function Și uș 😍😍 Perciczegó find most frequent element in array。",
        "nll_prompt": -356.2925720214844
    },
    {
        "epoch": 81,
        "loss": 0.24328583478927612,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.6698001027107239,
        "cur_std": 0.11487979888916015,
        "prompt": "<bos>Create wip JavaScript function Și uș 😍😍 Perciscanning find most frequent element in array。",
        "nll_prompt": -351.5355224609375
    },
    {
        "epoch": 82,
        "loss": 0.2438940703868866,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.7505426406860352,
        "cur_std": 0.11400021314620971,
        "prompt": "<bos>Create wip JavaScript function Și uș 😍😍 hervorscanning find most frequent element in array。",
        "nll_prompt": -331.7532958984375
    },
    {
        "epoch": 83,
        "loss": 0.24368412792682648,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.7520367503166199,
        "cur_std": 0.11806391477584839,
        "prompt": "<bos>Create wip JavaScript function Și shewn 😍😍 hervorscanning find most frequent element in array。",
        "nll_prompt": -325.4215393066406
    },
    {
        "epoch": 84,
        "loss": 0.24360279738903046,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.6927416324615479,
        "cur_std": 0.11552836894989013,
        "prompt": "<bos>Create wip JavaScript function Și shewn 😍😍 hervornumeric find most frequent element in array。",
        "nll_prompt": -322.76947021484375
    },
    {
        "epoch": 85,
        "loss": 0.2486773580312729,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.9705197811126709,
        "cur_std": 0.1408329725265503,
        "prompt": "<bos>Create wip JavaScript function Și shewn Meksi hervornumeric find most frequent element in array。",
        "nll_prompt": -324.253173828125
    },
    {
        "epoch": 86,
        "loss": 0.2468898892402649,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8169068098068237,
        "cur_std": 0.13253060579299927,
        "prompt": "<bos>Create wip JavaScript function intrigu shewn Meksi hervornumeric find most frequent element in array。",
        "nll_prompt": -325.15106201171875
    },
    {
        "epoch": 87,
        "loss": 0.24449579417705536,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8126196265220642,
        "cur_std": 0.1357869029045105,
        "prompt": "<bos>Create wip JavaScript function intrigu shewn Meksi hervor ;-; find most frequent element in array。",
        "nll_prompt": -346.25250244140625
    },
    {
        "epoch": 88,
        "loss": 0.24619361758232117,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.822363018989563,
        "cur_std": 0.13338421583175658,
        "prompt": "<bos>Create wip JavaScript function intrigu shewn Meksi hervorİyi find most frequent element in array。",
        "nll_prompt": -332.9174499511719
    },
    {
        "epoch": 89,
        "loss": 0.24537591636180878,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8287501335144043,
        "cur_std": 0.13601614236831666,
        "prompt": "<bos>Create wip JavaScript function intrigu shewn Meksi hervor [?] find most frequent element in array。",
        "nll_prompt": -336.45172119140625
    },
    {
        "epoch": 90,
        "loss": 0.24707964062690735,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.9062394499778748,
        "cur_std": 0.14831240177154542,
        "prompt": "<bos>Create wip JavaScript function intrigu shewn stefan hervor [?] find most frequent element in array。",
        "nll_prompt": -309.4061584472656
    },
    {
        "epoch": 91,
        "loss": 0.24676795303821564,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8170428276062012,
        "cur_std": 0.13616811037063598,
        "prompt": "<bos>Create wip JavaScript function intrigu shewn câte hervor [?] find most frequent element in array。",
        "nll_prompt": -329.87689208984375
    },
    {
        "epoch": 92,
        "loss": 0.25016963481903076,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.8884292244911194,
        "cur_std": 0.1450989365577698,
        "prompt": "<bos>Create wip JavaScript function intrigu shewn câte hervor [?] find most frequent element in array !...",
        "nll_prompt": -345.07122802734375
    },
    {
        "epoch": 93,
        "loss": 0.2510896325111389,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.9823483824729919,
        "cur_std": 0.15861978530883789,
        "prompt": "<bos>Create wip JavaScript function intrigu shewn Abbé hervor [?] find most frequent element in array !...",
        "nll_prompt": -339.4541320800781
    },
    {
        "epoch": 94,
        "loss": 0.24961397051811218,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.9647887349128723,
        "cur_std": 0.15303176641464233,
        "prompt": "<bos>Create wip JavaScript function intrigu expressly Abbé hervor [?] find most frequent element in array !...",
        "nll_prompt": -309.8245544433594
    },
    {
        "epoch": 95,
        "loss": 0.2519933879375458,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.9776045083999634,
        "cur_std": 0.16568944454193116,
        "prompt": "<bos>Create wip JavaScript function intrigu expressly Abbé hervor paula find most frequent element in array !...",
        "nll_prompt": -328.15582275390625
    },
    {
        "epoch": 96,
        "loss": 0.251662939786911,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 1.0292458534240723,
        "cur_std": 0.15993340015411378,
        "prompt": "<bos>Create wip JavaScript function intrigu expressly Abbé hervorofer find most frequent element in array !...",
        "nll_prompt": -308.6728515625
    },
    {
        "epoch": 97,
        "loss": 0.25102663040161133,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.9771227836608887,
        "cur_std": 0.14772456884384155,
        "prompt": "<bos>Create wip JavaScript function intrigu insofar Abbé hervorofer find most frequent element in array !...",
        "nll_prompt": -304.858642578125
    },
    {
        "epoch": 98,
        "loss": 0.25235095620155334,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 1.1941165924072266,
        "cur_std": 0.125050950050354,
        "prompt": "<bos>Create wip JavaScript function diferencial insofar Abbé hervorofer find most frequent element in array !...",
        "nll_prompt": -329.89874267578125
    },
    {
        "epoch": 99,
        "loss": 0.2527424693107605,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 1.222606897354126,
        "cur_std": 0.13536808490753174,
        "prompt": "<bos>Create wip JavaScript function diferencial insofar Abbémonėsofer find most frequent element in array !...",
        "nll_prompt": -330.71221923828125
    },
    {
        "epoch": 100,
        "loss": 0.249051034450531,
        "best_loss": 0.24113406240940094,
        "best_kl": 0.6144914031028748,
        "best_std": 0.10658185482025147,
        "cur_kl": 0.997900664806366,
        "cur_std": 0.11852531433105469,
        "prompt": "<bos>Create wip JavaScript function diferencial insofar attempmonėsofer find most frequent element in array !...",
        "nll_prompt": -318.5469665527344
    }
]