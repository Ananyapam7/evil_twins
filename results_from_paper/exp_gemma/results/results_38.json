[
    {
        "epoch": 1,
        "loss": 0.15894074738025665,
        "best_loss": 0.15894074738025665,
        "best_kl": 1.6978759765625,
        "best_std": 0.1754499316215515,
        "cur_kl": 1.6978759765625,
        "cur_std": 0.1754499316215515,
        "prompt": "<bos>Write a Python]# named Stack that uses list to store data.",
        "nll_prompt": -182.20762634277344
    },
    {
        "epoch": 2,
        "loss": 0.15955358743667603,
        "best_loss": 0.15894074738025665,
        "best_kl": 1.3981709480285645,
        "best_std": 0.18691036701202393,
        "cur_kl": 1.3981709480285645,
        "cur_std": 0.18691036701202393,
        "prompt": "<bos>Write a Python]# named Stack that uses list toKeyType data.",
        "nll_prompt": -228.33241271972656
    },
    {
        "epoch": 3,
        "loss": 0.1347503364086151,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 1.1730111837387085,
        "cur_std": 0.1657322406768799,
        "prompt": "<bos>Write a Python]# named Stack that uses list to zs data.",
        "nll_prompt": -227.458251953125
    },
    {
        "epoch": 4,
        "loss": 0.14762750267982483,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 1.969664454460144,
        "cur_std": 0.21255941390991212,
        "prompt": "<bos>Write a Pythonthiet named Stack that uses list to zs data.",
        "nll_prompt": -219.68057250976562
    },
    {
        "epoch": 5,
        "loss": 0.15829011797904968,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 1.6517003774642944,
        "cur_std": 0.21399919986724852,
        "prompt": "<bos>Write a Pythonzupeł named Stack that uses list to zs data.",
        "nll_prompt": -217.02142333984375
    },
    {
        "epoch": 6,
        "loss": 0.14934508502483368,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 1.5440305471420288,
        "cur_std": 0.20912418365478516,
        "prompt": "<bos>Write a Python Augu named Stack that uses list to zs data.",
        "nll_prompt": -230.7644500732422
    },
    {
        "epoch": 7,
        "loss": 0.1542917937040329,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 1.2888685464859009,
        "cur_std": 0.20276734828948975,
        "prompt": "<bos>Write a Python Augu named Stack that uses list toTheGreat data.",
        "nll_prompt": -231.75070190429688
    },
    {
        "epoch": 8,
        "loss": 0.14659909904003143,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 1.2911885976791382,
        "cur_std": 0.17999551296234131,
        "prompt": "<bos>Write LECT Python Augu named Stack that uses list toTheGreat data.",
        "nll_prompt": -263.728271484375
    },
    {
        "epoch": 9,
        "loss": 0.13698355853557587,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 1.2711976766586304,
        "cur_std": 0.18858400583267212,
        "prompt": "<bos>Writestates Python Augu named Stack that uses list toTheGreat data.",
        "nll_prompt": -255.3721923828125
    },
    {
        "epoch": 10,
        "loss": 0.14860007166862488,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 1.6704812049865723,
        "cur_std": 0.21642005443572998,
        "prompt": "<bos>Writestates Python Augu named Stack that uses list to yder data.",
        "nll_prompt": -260.8572082519531
    },
    {
        "epoch": 11,
        "loss": 0.14640948176383972,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 1.6314928531646729,
        "cur_std": 0.21519818305969238,
        "prompt": "<bos>Writestates Python Augu named Stack that uses listالدراسه yder data.",
        "nll_prompt": -298.4317321777344
    },
    {
        "epoch": 12,
        "loss": 0.161670982837677,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 2.2077927589416504,
        "cur_std": 0.2756305694580078,
        "prompt": "<bos>Write ļoti Python Augu named Stack that uses listالدراسه yder data.",
        "nll_prompt": -320.2267150878906
    },
    {
        "epoch": 13,
        "loss": 0.15179915726184845,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 1.808095932006836,
        "cur_std": 0.2394324541091919,
        "prompt": "<bos>Write Luglio Python Augu named Stack that uses listالدراسه yder data.",
        "nll_prompt": -314.21282958984375
    },
    {
        "epoch": 14,
        "loss": 0.15055905282497406,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 1.9495906829833984,
        "cur_std": 0.22882468700408937,
        "prompt": "<bos>Write stockholm Python Augu named Stack that uses listالدراسه yder data.",
        "nll_prompt": -304.4583740234375
    },
    {
        "epoch": 15,
        "loss": 0.14661164581775665,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 2.0439281463623047,
        "cur_std": 0.2077486515045166,
        "prompt": "<bos>Write stockholm Python Augu named Stack that uses list reluct yder data.",
        "nll_prompt": -301.35894775390625
    },
    {
        "epoch": 16,
        "loss": 0.16189084947109222,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 1.8665810823440552,
        "cur_std": 0.22530858516693114,
        "prompt": "<bos>Write stockholm Python Augu named Stack that uses listerdings yder data.",
        "nll_prompt": -295.2274169921875
    },
    {
        "epoch": 17,
        "loss": 0.1705375462770462,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 2.0270655155181885,
        "cur_std": 0.23006060123443603,
        "prompt": "<bos>Write rubia Python Augu named Stack that uses listerdings yder data.",
        "nll_prompt": -300.89703369140625
    },
    {
        "epoch": 18,
        "loss": 0.16556867957115173,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 1.985516905784607,
        "cur_std": 0.22539563179016114,
        "prompt": "<bos>Write rubia Python Augu named Stack that uses list outward yder data.",
        "nll_prompt": -306.4339599609375
    },
    {
        "epoch": 19,
        "loss": 0.1447475552558899,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 1.7641983032226562,
        "cur_std": 0.2301764726638794,
        "prompt": "<bos>Write Gå Python Augu named Stack that uses list outward yder data.",
        "nll_prompt": -289.4915771484375
    },
    {
        "epoch": 20,
        "loss": 0.13698023557662964,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 1.5621081590652466,
        "cur_std": 0.20585219860076903,
        "prompt": "<bos>Write Gå Python Augu _: Stack that uses list outward yder data.",
        "nll_prompt": -313.716796875
    },
    {
        "epoch": 21,
        "loss": 0.14377853274345398,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 1.9902514219284058,
        "cur_std": 0.2374422788619995,
        "prompt": "<bos>Write Gå Python Augu;'> Stack that uses list outward yder data.",
        "nll_prompt": -315.9574890136719
    },
    {
        "epoch": 22,
        "loss": 0.1651565283536911,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 2.33833909034729,
        "cur_std": 0.216806960105896,
        "prompt": "<bos>Write Gå Python Augu;'> Stack that uses list outward naï data.",
        "nll_prompt": -301.1940612792969
    },
    {
        "epoch": 23,
        "loss": 0.14278440177440643,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 2.009702205657959,
        "cur_std": 0.1783825159072876,
        "prompt": "<bos>Write Gå Python Augu;'> Stack that uses list outward naï list.",
        "nll_prompt": -292.9758605957031
    },
    {
        "epoch": 24,
        "loss": 0.14651484787464142,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 1.612842321395874,
        "cur_std": 0.1803302764892578,
        "prompt": "<bos>Write Gå Python Augu;'> Stack that uses list outward hairc list.",
        "nll_prompt": -306.8240051269531
    },
    {
        "epoch": 25,
        "loss": 0.15834686160087585,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 2.070314884185791,
        "cur_std": 0.19517656564712524,
        "prompt": "<bos>Write Gå Python Augu;'> Stack that uses list outward alip list.",
        "nll_prompt": -310.55023193359375
    },
    {
        "epoch": 26,
        "loss": 0.13792794942855835,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 1.863064169883728,
        "cur_std": 0.1950819969177246,
        "prompt": "<bos>Write Gå Python Augu;'> Stack that uses list outward oner list.",
        "nll_prompt": -295.8438720703125
    },
    {
        "epoch": 27,
        "loss": 0.14678926765918732,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 1.8736529350280762,
        "cur_std": 0.2054598331451416,
        "prompt": "<bos>Write Python Augu;'> Stack that uses list outward oner list.",
        "nll_prompt": -319.3382568359375
    },
    {
        "epoch": 28,
        "loss": 0.14057572185993195,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 1.4432092905044556,
        "cur_std": 0.19383267164230347,
        "prompt": "<bos>Write PythonRUCT;'> Stack that uses list outward oner list.",
        "nll_prompt": -308.84869384765625
    },
    {
        "epoch": 29,
        "loss": 0.15004700422286987,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 2.174678087234497,
        "cur_std": 0.2671229839324951,
        "prompt": "<bos>Write PythonRUCT;'> Stack that uses userInput outward oner list.",
        "nll_prompt": -326.6910095214844
    },
    {
        "epoch": 30,
        "loss": 0.16064275801181793,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 1.9490103721618652,
        "cur_std": 0.2579538345336914,
        "prompt": "<bos>Write PythonRUCT;'> Stack that uses userInput outward oner list)]",
        "nll_prompt": -339.2652282714844
    },
    {
        "epoch": 31,
        "loss": 0.15428657829761505,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 1.8378344774246216,
        "cur_std": 0.26917765140533445,
        "prompt": "<bos>Write PythonRUCT;'> Stack that uses crou outward oner list)]",
        "nll_prompt": -343.0590515136719
    },
    {
        "epoch": 32,
        "loss": 0.13872285187244415,
        "best_loss": 0.1347503364086151,
        "best_kl": 1.1730111837387085,
        "best_std": 0.1657322406768799,
        "cur_kl": 1.906049132347107,
        "cur_std": 0.2534447193145752,
        "prompt": "<bos>Write PythonRUCT;'> Stack that uses crou outward simple list)]",
        "nll_prompt": -325.658203125
    },
    {
        "epoch": 33,
        "loss": 0.13039755821228027,
        "best_loss": 0.13039755821228027,
        "best_kl": 1.0673102140426636,
        "best_std": 0.21328914165496826,
        "cur_kl": 1.0673102140426636,
        "cur_std": 0.21328914165496826,
        "prompt": "<bos>Write PythonRUCT;'> Stack that uses peppa outward simple list)]",
        "nll_prompt": -324.83184814453125
    },
    {
        "epoch": 34,
        "loss": 0.14287959039211273,
        "best_loss": 0.13039755821228027,
        "best_kl": 1.0673102140426636,
        "best_std": 0.21328914165496826,
        "cur_kl": 1.163653016090393,
        "cur_std": 0.21182870864868164,
        "prompt": "<bos>Write PythonRUCT;'> Stack that uses peppa outward simple --;)]",
        "nll_prompt": -346.06982421875
    },
    {
        "epoch": 35,
        "loss": 0.1354382187128067,
        "best_loss": 0.13039755821228027,
        "best_kl": 1.0673102140426636,
        "best_std": 0.21328914165496826,
        "cur_kl": 1.350188970565796,
        "cur_std": 0.2519878387451172,
        "prompt": "<bos>Write مفص PythonRUCT;'> Stack that uses peppa outward simple --;)]",
        "nll_prompt": -331.09735107421875
    },
    {
        "epoch": 36,
        "loss": 0.1342982053756714,
        "best_loss": 0.13039755821228027,
        "best_kl": 1.0673102140426636,
        "best_std": 0.21328914165496826,
        "cur_kl": 1.5380340814590454,
        "cur_std": 0.25941197872161864,
        "prompt": "<bos>Write مفص PythonRUCT;'> Stack that uses peppa outwardChez --;)]",
        "nll_prompt": -335.90802001953125
    },
    {
        "epoch": 37,
        "loss": 0.13513784110546112,
        "best_loss": 0.13039755821228027,
        "best_kl": 1.0673102140426636,
        "best_std": 0.21328914165496826,
        "cur_kl": 1.3422329425811768,
        "cur_std": 0.24846172332763672,
        "prompt": "<bos>Write مفص PythonRUCT;'> Stack that uses peppa outward athe --;)]",
        "nll_prompt": -342.130859375
    },
    {
        "epoch": 38,
        "loss": 0.12055650353431702,
        "best_loss": 0.12055650353431702,
        "best_kl": 1.0673102140426636,
        "best_std": 0.21328914165496826,
        "cur_kl": 1.3889604806900024,
        "cur_std": 0.2566503047943115,
        "prompt": "<bos>Write مفص PythonRUCT;'> Stack that uses peppa outward athe whofe)]",
        "nll_prompt": -349.540771484375
    },
    {
        "epoch": 39,
        "loss": 0.1332024186849594,
        "best_loss": 0.12055650353431702,
        "best_kl": 1.0673102140426636,
        "best_std": 0.21328914165496826,
        "cur_kl": 1.4162653684616089,
        "cur_std": 0.25281927585601804,
        "prompt": "<bos>Write مفص PythonRUCT;'> Stack that uses peppa outward,< whofe)]",
        "nll_prompt": -333.73095703125
    },
    {
        "epoch": 40,
        "loss": 0.12548652291297913,
        "best_loss": 0.12055650353431702,
        "best_kl": 1.0673102140426636,
        "best_std": 0.21328914165496826,
        "cur_kl": 1.3290072679519653,
        "cur_std": 0.25783486366271974,
        "prompt": "<bos>Write مفص PythonRUCT;'> Stack that uses peppa outward dichi whofe)]",
        "nll_prompt": -366.6818542480469
    },
    {
        "epoch": 41,
        "loss": 0.14304441213607788,
        "best_loss": 0.12055650353431702,
        "best_kl": 1.0673102140426636,
        "best_std": 0.21328914165496826,
        "cur_kl": 1.7748419046401978,
        "cur_std": 0.2653923988342285,
        "prompt": "<bos>Write مفص PythonRUCT;'> Stack that uses hcm outward dichi whofe)]",
        "nll_prompt": -388.1388854980469
    },
    {
        "epoch": 42,
        "loss": 0.14795196056365967,
        "best_loss": 0.12055650353431702,
        "best_kl": 1.0673102140426636,
        "best_std": 0.21328914165496826,
        "cur_kl": 1.3839645385742188,
        "cur_std": 0.2598036527633667,
        "prompt": "<bos>Write مفص PythonRUCT;'> Stack that uses hcm COMMUNIC dichi whofe)]",
        "nll_prompt": -396.97796630859375
    },
    {
        "epoch": 43,
        "loss": 0.13922828435897827,
        "best_loss": 0.12055650353431702,
        "best_kl": 1.0673102140426636,
        "best_std": 0.21328914165496826,
        "cur_kl": 1.1715846061706543,
        "cur_std": 0.1911417007446289,
        "prompt": "<bos>Write eluc PythonRUCT;'> Stack that uses hcm COMMUNIC dichi whofe)]",
        "nll_prompt": -397.7754821777344
    },
    {
        "epoch": 44,
        "loss": 0.12081784754991531,
        "best_loss": 0.12055650353431702,
        "best_kl": 1.023024082183838,
        "best_std": 0.19661893844604492,
        "cur_kl": 1.023024082183838,
        "cur_std": 0.19661893844604492,
        "prompt": "<bos>Write eluc PythonRUCT;'> Stack that uses noel COMMUNIC dichi whofe)]",
        "nll_prompt": -389.65557861328125
    },
    {
        "epoch": 45,
        "loss": 0.12244319915771484,
        "best_loss": 0.12055650353431702,
        "best_kl": 1.023024082183838,
        "best_std": 0.19661893844604492,
        "cur_kl": 1.0363701581954956,
        "cur_std": 0.19221440553665162,
        "prompt": "<bos>Write eluc PythonRUCT;'> Stack that uses noel COMMUNIC dichi started)]",
        "nll_prompt": -373.32904052734375
    },
    {
        "epoch": 46,
        "loss": 0.13941644132137299,
        "best_loss": 0.12055650353431702,
        "best_kl": 1.023024082183838,
        "best_std": 0.19661893844604492,
        "cur_kl": 1.1138757467269897,
        "cur_std": 0.19838361740112304,
        "prompt": "<bos>Write eluc PythonRUCT;'> Stack that uses noel COMMUNIC eyel started)]",
        "nll_prompt": -351.31341552734375
    },
    {
        "epoch": 47,
        "loss": 0.14906813204288483,
        "best_loss": 0.12055650353431702,
        "best_kl": 1.023024082183838,
        "best_std": 0.19661893844604492,
        "cur_kl": 1.321962833404541,
        "cur_std": 0.2055119514465332,
        "prompt": "<bos>Write eluc PythonRUCT;'> Stack that uses noelguerite eyel started)]",
        "nll_prompt": -348.18243408203125
    },
    {
        "epoch": 48,
        "loss": 0.11845961958169937,
        "best_loss": 0.11845961958169937,
        "best_kl": 1.023024082183838,
        "best_std": 0.19661893844604492,
        "cur_kl": 1.1784485578536987,
        "cur_std": 0.1905405640602112,
        "prompt": "<bos>Write eluc PythonRUCT;'> Stack that uses noel ammat eyel started)]",
        "nll_prompt": -354.48150634765625
    },
    {
        "epoch": 49,
        "loss": 0.1362346112728119,
        "best_loss": 0.11845961958169937,
        "best_kl": 1.023024082183838,
        "best_std": 0.19661893844604492,
        "cur_kl": 1.0740013122558594,
        "cur_std": 0.17285490036010742,
        "prompt": "<bos>Write eluc PythonRUCT;'> Stack that uses \"\". ammat eyel started)]",
        "nll_prompt": -348.85491943359375
    },
    {
        "epoch": 50,
        "loss": 0.1442016363143921,
        "best_loss": 0.11845961958169937,
        "best_kl": 1.023024082183838,
        "best_std": 0.19661893844604492,
        "cur_kl": 1.035848617553711,
        "cur_std": 0.1757739543914795,
        "prompt": "<bos>Write eluc PythonRUCT;'> Stack that uses \"\". coö eyel started)]",
        "nll_prompt": -366.273681640625
    },
    {
        "epoch": 51,
        "loss": 0.13941290974617004,
        "best_loss": 0.11845961958169937,
        "best_kl": 1.023024082183838,
        "best_std": 0.19661893844604492,
        "cur_kl": 1.1265913248062134,
        "cur_std": 0.18509873151779174,
        "prompt": "<bos>Write eluc PythonBril;'> Stack that uses \"\". coö eyel started)]",
        "nll_prompt": -365.2349548339844
    },
    {
        "epoch": 52,
        "loss": 0.11462251096963882,
        "best_loss": 0.11462251096963882,
        "best_kl": 1.023024082183838,
        "best_std": 0.19661893844604492,
        "cur_kl": 1.1999683380126953,
        "cur_std": 0.20273044109344482,
        "prompt": "<bos>Write eluc Python Numer;'> Stack that uses \"\". coö eyel started)]",
        "nll_prompt": -370.619384765625
    },
    {
        "epoch": 53,
        "loss": 0.1153765395283699,
        "best_loss": 0.11462251096963882,
        "best_kl": 1.023024082183838,
        "best_std": 0.19661893844604492,
        "cur_kl": 1.1254366636276245,
        "cur_std": 0.18574447631835939,
        "prompt": "<bos>Write eluc Python Numer;'> Stack that uses empêche coö eyel started)]",
        "nll_prompt": -397.4517517089844
    },
    {
        "epoch": 54,
        "loss": 0.12563316524028778,
        "best_loss": 0.11462251096963882,
        "best_kl": 1.023024082183838,
        "best_std": 0.19661893844604492,
        "cur_kl": 1.2812869548797607,
        "cur_std": 0.1930056929588318,
        "prompt": "<bos>Write eluc Python Numer;'> Stack that uses empêche coö eyel**.)]",
        "nll_prompt": -396.1326904296875
    },
    {
        "epoch": 55,
        "loss": 0.12204641848802567,
        "best_loss": 0.11462251096963882,
        "best_kl": 1.023024082183838,
        "best_std": 0.19661893844604492,
        "cur_kl": 1.4033946990966797,
        "cur_std": 0.20279374122619628,
        "prompt": "<bos>Write eluc Python Numer;'> Stack that uses empêche coö сі**.)]",
        "nll_prompt": -367.76806640625
    },
    {
        "epoch": 56,
        "loss": 0.13041137158870697,
        "best_loss": 0.11462251096963882,
        "best_kl": 1.023024082183838,
        "best_std": 0.19661893844604492,
        "cur_kl": 1.2913886308670044,
        "cur_std": 0.17467586994171141,
        "prompt": "<bos>Write eluc Python Numer;'> Stack that uses empêche coö♪**.)]",
        "nll_prompt": -373.160888671875
    },
    {
        "epoch": 57,
        "loss": 0.13051417469978333,
        "best_loss": 0.11462251096963882,
        "best_kl": 1.023024082183838,
        "best_std": 0.19661893844604492,
        "cur_kl": 1.1697101593017578,
        "cur_std": 0.19691559076309204,
        "prompt": "<bos>Write eluc Python Numer;'> Stack that uses Confe coö♪**.)]",
        "nll_prompt": -372.42681884765625
    },
    {
        "epoch": 58,
        "loss": 0.13378818333148956,
        "best_loss": 0.11462251096963882,
        "best_kl": 1.023024082183838,
        "best_std": 0.19661893844604492,
        "cur_kl": 1.121148705482483,
        "cur_std": 0.19398998022079467,
        "prompt": "<bos>Write eluc Python Numer;'> Stack that uses cok coö♪**.)]",
        "nll_prompt": -338.4788818359375
    },
    {
        "epoch": 59,
        "loss": 0.12987440824508667,
        "best_loss": 0.11462251096963882,
        "best_kl": 1.023024082183838,
        "best_std": 0.19661893844604492,
        "cur_kl": 1.0725252628326416,
        "cur_std": 0.18187090158462524,
        "prompt": "<bos>Write eluc Python Numer;'> Stack that uses cok coö.,**.)]",
        "nll_prompt": -324.79437255859375
    },
    {
        "epoch": 60,
        "loss": 0.11553370952606201,
        "best_loss": 0.11462251096963882,
        "best_kl": 1.023024082183838,
        "best_std": 0.19661893844604492,
        "cur_kl": 1.0844204425811768,
        "cur_std": 0.1736892580986023,
        "prompt": "<bos>Write eluc Python Numer;'> Stack that uses cokrebbero.,**.)]",
        "nll_prompt": -310.96380615234375
    },
    {
        "epoch": 61,
        "loss": 0.1373409628868103,
        "best_loss": 0.11462251096963882,
        "best_kl": 1.0081634521484375,
        "best_std": 0.1860583543777466,
        "cur_kl": 1.0081634521484375,
        "cur_std": 0.1860583543777466,
        "prompt": "<bos>Write eluc Python Numer;'> Stack that uses cokyszer.,**.)]",
        "nll_prompt": -311.70855712890625
    },
    {
        "epoch": 62,
        "loss": 0.1380952149629593,
        "best_loss": 0.11462251096963882,
        "best_kl": 1.0081634521484375,
        "best_std": 0.1860583543777466,
        "cur_kl": 1.233731746673584,
        "cur_std": 0.17358787059783937,
        "prompt": "<bos>Write eluc Python Numer;'> Stack that uses luonyszer.,**.)]",
        "nll_prompt": -320.9052734375
    },
    {
        "epoch": 63,
        "loss": 0.12667982280254364,
        "best_loss": 0.11462251096963882,
        "best_kl": 1.0081634521484375,
        "best_std": 0.1860583543777466,
        "cur_kl": 1.3070634603500366,
        "cur_std": 0.1852259874343872,
        "prompt": "<bos>Write eluc Python Numer;'> Stack that uses luon ridu.,**.)]",
        "nll_prompt": -330.09796142578125
    },
    {
        "epoch": 64,
        "loss": 0.13391369581222534,
        "best_loss": 0.11462251096963882,
        "best_kl": 1.0081634521484375,
        "best_std": 0.1860583543777466,
        "cur_kl": 1.3810909986495972,
        "cur_std": 0.2031641960144043,
        "prompt": "<bos>Write eluc Python Numer;'> Stack that uses fuo ridu.,**.)]",
        "nll_prompt": -339.44970703125
    },
    {
        "epoch": 65,
        "loss": 0.13803237676620483,
        "best_loss": 0.11462251096963882,
        "best_kl": 1.0081634521484375,
        "best_std": 0.1860583543777466,
        "cur_kl": 1.1561839580535889,
        "cur_std": 0.19051283597946167,
        "prompt": "<bos>Write eluc Python Numer;'> Stack that uses abnorm ridu.,**.)]",
        "nll_prompt": -330.861083984375
    },
    {
        "epoch": 66,
        "loss": 0.13462698459625244,
        "best_loss": 0.11462251096963882,
        "best_kl": 1.0081634521484375,
        "best_std": 0.1860583543777466,
        "cur_kl": 1.1063504219055176,
        "cur_std": 0.17953461408615112,
        "prompt": "<bos>Write eluc Python Numer;'> Stack that usesBahkan ridu.,**.)]",
        "nll_prompt": -327.728271484375
    },
    {
        "epoch": 67,
        "loss": 0.13822974264621735,
        "best_loss": 0.11462251096963882,
        "best_kl": 0.922327995300293,
        "best_std": 0.16026471853256224,
        "cur_kl": 0.922327995300293,
        "cur_std": 0.16026471853256224,
        "prompt": "<bos>Write eluc Pythonthode;'> Stack that usesBahkan ridu.,**.)]",
        "nll_prompt": -334.338134765625
    },
    {
        "epoch": 68,
        "loss": 0.11701520532369614,
        "best_loss": 0.11462251096963882,
        "best_kl": 0.922327995300293,
        "best_std": 0.16026471853256224,
        "cur_kl": 0.9953044056892395,
        "cur_std": 0.17141422033309936,
        "prompt": "<bos>Write eluc Pythonthode;'> Stack that uses apprehen ridu.,**.)]",
        "nll_prompt": -360.3606872558594
    },
    {
        "epoch": 69,
        "loss": 0.13128481805324554,
        "best_loss": 0.11462251096963882,
        "best_kl": 0.922327995300293,
        "best_std": 0.16026471853256224,
        "cur_kl": 1.035383939743042,
        "cur_std": 0.19663553237915038,
        "prompt": "<bos>Write sturdy Pythonthode;'> Stack that uses apprehen ridu.,**.)]",
        "nll_prompt": -342.05426025390625
    },
    {
        "epoch": 70,
        "loss": 0.13574765622615814,
        "best_loss": 0.11462251096963882,
        "best_kl": 0.8887972831726074,
        "best_std": 0.19458751678466796,
        "cur_kl": 0.8887972831726074,
        "cur_std": 0.19458751678466796,
        "prompt": "<bos>Write sturdy Pythonthode;'> Stack that uses pregi ridu.,**.)]",
        "nll_prompt": -316.7818603515625
    },
    {
        "epoch": 71,
        "loss": 0.13798652589321136,
        "best_loss": 0.11462251096963882,
        "best_kl": 0.8887972831726074,
        "best_std": 0.19458751678466796,
        "cur_kl": 1.6419364213943481,
        "cur_std": 0.2152406930923462,
        "prompt": "<bos>Write sturdy Pythonthode;'> Stack that usesnikami ridu.,**.)]",
        "nll_prompt": -306.3568115234375
    },
    {
        "epoch": 72,
        "loss": 0.13351961970329285,
        "best_loss": 0.11462251096963882,
        "best_kl": 0.8887972831726074,
        "best_std": 0.19458751678466796,
        "cur_kl": 1.1463491916656494,
        "cur_std": 0.21348154544830322,
        "prompt": "<bos>Write sturdy Pythonthode;'> Stack that usesnikamifranzös.,**.)]",
        "nll_prompt": -308.6539306640625
    },
    {
        "epoch": 73,
        "loss": 0.1416310966014862,
        "best_loss": 0.11462251096963882,
        "best_kl": 0.8887972831726074,
        "best_std": 0.19458751678466796,
        "cur_kl": 1.2970871925354004,
        "cur_std": 0.21632869243621827,
        "prompt": "<bos>Write sturdy Pythonthode;'> Stack that usesnikamifranzös., doon)]",
        "nll_prompt": -317.7401123046875
    },
    {
        "epoch": 74,
        "loss": 0.13062962889671326,
        "best_loss": 0.11462251096963882,
        "best_kl": 0.8887972831726074,
        "best_std": 0.19458751678466796,
        "cur_kl": 1.3068392276763916,
        "cur_std": 0.18680380582809447,
        "prompt": "<bos>Write sturdy Pythonthode;'> Stack that usesnikami opport., doon)]",
        "nll_prompt": -307.9259033203125
    },
    {
        "epoch": 75,
        "loss": 0.1414053738117218,
        "best_loss": 0.11462251096963882,
        "best_kl": 0.8887972831726074,
        "best_std": 0.19458751678466796,
        "cur_kl": 1.46123468875885,
        "cur_std": 0.2446887969970703,
        "prompt": "<bos>Write sturdy Pythonthode;'> Stack that usesnikami appearance., doon)]",
        "nll_prompt": -303.0177917480469
    },
    {
        "epoch": 76,
        "loss": 0.1388765126466751,
        "best_loss": 0.11462251096963882,
        "best_kl": 0.8887972831726074,
        "best_std": 0.19458751678466796,
        "cur_kl": 1.1450488567352295,
        "cur_std": 0.21098713874816893,
        "prompt": "<bos>Write sturdy Pythonthode;'> Stack that usesnikami appearance Italij doon)]",
        "nll_prompt": -325.982666015625
    },
    {
        "epoch": 77,
        "loss": 0.12478315830230713,
        "best_loss": 0.11462251096963882,
        "best_kl": 0.8887972831726074,
        "best_std": 0.19458751678466796,
        "cur_kl": 1.2115806341171265,
        "cur_std": 0.201354718208313,
        "prompt": "<bos>Write sturdy Pythonthode;'> Stack that usesnikami''; Italij doon)]",
        "nll_prompt": -337.99676513671875
    },
    {
        "epoch": 78,
        "loss": 0.12873950600624084,
        "best_loss": 0.11462251096963882,
        "best_kl": 0.8887972831726074,
        "best_std": 0.19458751678466796,
        "cur_kl": 1.0595301389694214,
        "cur_std": 0.19055771827697754,
        "prompt": "<bos>Write sturdy Pythonthode;'> Stack that usesnikami''; Italij doon</em>",
        "nll_prompt": -344.91278076171875
    },
    {
        "epoch": 79,
        "loss": 0.13384996354579926,
        "best_loss": 0.11462251096963882,
        "best_kl": 0.8887972831726074,
        "best_std": 0.19458751678466796,
        "cur_kl": 1.218895435333252,
        "cur_std": 0.1974332571029663,
        "prompt": "<bos>Write sturdy Pythonthode;'> Stack that usesnikami piaci Italij doon</em>",
        "nll_prompt": -329.62005615234375
    },
    {
        "epoch": 80,
        "loss": 0.1356736570596695,
        "best_loss": 0.11462251096963882,
        "best_kl": 0.8887972831726074,
        "best_std": 0.19458751678466796,
        "cur_kl": 1.1950340270996094,
        "cur_std": 0.18629469871520996,
        "prompt": "<bos>Write sturdy Pythonthode;'> Stack that usesnikami inconce Italij doon</em>",
        "nll_prompt": -350.56536865234375
    },
    {
        "epoch": 81,
        "loss": 0.13715605437755585,
        "best_loss": 0.11462251096963882,
        "best_kl": 0.8887972831726074,
        "best_std": 0.19458751678466796,
        "cur_kl": 1.1746002435684204,
        "cur_std": 0.18757729530334472,
        "prompt": "<bos>Write sturdy Pythonthode;'> Stack that usesnikami inconceCringe doon</em>",
        "nll_prompt": -357.15423583984375
    },
    {
        "epoch": 82,
        "loss": 0.13261985778808594,
        "best_loss": 0.11462251096963882,
        "best_kl": 0.8887972831726074,
        "best_std": 0.19458751678466796,
        "cur_kl": 1.1219861507415771,
        "cur_std": 0.18341101408004762,
        "prompt": "<bos>Write sturdy PythonLr;'> Stack that usesnikami inconceCringe doon</em>",
        "nll_prompt": -337.5918273925781
    },
    {
        "epoch": 83,
        "loss": 0.13819493353366852,
        "best_loss": 0.11462251096963882,
        "best_kl": 0.8887972831726074,
        "best_std": 0.19458751678466796,
        "cur_kl": 1.3505480289459229,
        "cur_std": 0.21215617656707764,
        "prompt": "<bos>Write sturdy PythonLr;'> Stack thatcontnikami inconceCringe doon</em>",
        "nll_prompt": -356.9087829589844
    },
    {
        "epoch": 84,
        "loss": 0.13059528172016144,
        "best_loss": 0.11462251096963882,
        "best_kl": 0.8887972831726074,
        "best_std": 0.19458751678466796,
        "cur_kl": 1.3701602220535278,
        "cur_std": 0.2090461015701294,
        "prompt": "<bos>Write sturdy PythonLr;'> Stack thatcontnikami inconce depic doon</em>",
        "nll_prompt": -383.45880126953125
    },
    {
        "epoch": 85,
        "loss": 0.13344985246658325,
        "best_loss": 0.11462251096963882,
        "best_kl": 0.8887972831726074,
        "best_std": 0.19458751678466796,
        "cur_kl": 1.5244344472885132,
        "cur_std": 0.22703819274902343,
        "prompt": "<bos>Write sturdy PythonLr;'> Stack thatcontnikami inconce manchester doon</em>",
        "nll_prompt": -343.48779296875
    },
    {
        "epoch": 86,
        "loss": 0.14477813243865967,
        "best_loss": 0.11462251096963882,
        "best_kl": 0.8887972831726074,
        "best_std": 0.19458751678466796,
        "cur_kl": 1.3381729125976562,
        "cur_std": 0.20513806343078614,
        "prompt": "<bos>Write sturdy PythonLr;'> Stack thatcontnikami inconce inters doon</em>",
        "nll_prompt": -345.4397277832031
    },
    {
        "epoch": 87,
        "loss": 0.12080895155668259,
        "best_loss": 0.11462251096963882,
        "best_kl": 0.8887972831726074,
        "best_std": 0.19458751678466796,
        "cur_kl": 1.3935939073562622,
        "cur_std": 0.20575244426727296,
        "prompt": "<bos>Write sturdy PythonLr;'> Stack thatcontnikami inconce inters Châ</em>",
        "nll_prompt": -344.0320739746094
    },
    {
        "epoch": 88,
        "loss": 0.1240740567445755,
        "best_loss": 0.11462251096963882,
        "best_kl": 0.8887972831726074,
        "best_std": 0.19458751678466796,
        "cur_kl": 1.1751335859298706,
        "cur_std": 0.20189075469970702,
        "prompt": "<bos>Write sturdy PythonLr;'> Stack that ftonikami inconce inters Châ</em>",
        "nll_prompt": -344.1781005859375
    },
    {
        "epoch": 89,
        "loss": 0.13190005719661713,
        "best_loss": 0.11462251096963882,
        "best_kl": 0.8887972831726074,
        "best_std": 0.19458751678466796,
        "cur_kl": 1.1363186836242676,
        "cur_std": 0.19904342889785767,
        "prompt": "<bos>Write sturdy PythonLr;'> Stack that fhortnikami inconce inters Châ</em>",
        "nll_prompt": -348.5726318359375
    },
    {
        "epoch": 90,
        "loss": 0.13493622839450836,
        "best_loss": 0.11462251096963882,
        "best_kl": 0.8887972831726074,
        "best_std": 0.19458751678466796,
        "cur_kl": 1.3247631788253784,
        "cur_std": 0.2062394142150879,
        "prompt": "<bos>Write sturdy PythonLr;'> Stack that fhort antik inconce inters Châ</em>",
        "nll_prompt": -351.0797424316406
    },
    {
        "epoch": 91,
        "loss": 0.1336553692817688,
        "best_loss": 0.11462251096963882,
        "best_kl": 0.8887972831726074,
        "best_std": 0.19458751678466796,
        "cur_kl": 1.1342835426330566,
        "cur_std": 0.20089526176452638,
        "prompt": "<bos>Write sturdy PythonLr;'> Stack that fhort kyo inconce inters Châ</em>",
        "nll_prompt": -337.064208984375
    },
    {
        "epoch": 92,
        "loss": 0.11849123984575272,
        "best_loss": 0.11462251096963882,
        "best_kl": 0.8887972831726074,
        "best_std": 0.19458751678466796,
        "cur_kl": 0.8925948143005371,
        "cur_std": 0.16645076274871826,
        "prompt": "<bos>Write sturdy Python Travers;'> Stack that fhort kyo inconce inters Châ</em>",
        "nll_prompt": -345.67523193359375
    },
    {
        "epoch": 93,
        "loss": 0.1123267114162445,
        "best_loss": 0.1123267114162445,
        "best_kl": 0.8699706792831421,
        "best_std": 0.1654644012451172,
        "cur_kl": 0.8699706792831421,
        "cur_std": 0.1654644012451172,
        "prompt": "<bos>Write sturdy Python Travers;'> Stack that fhort miu inconce inters Châ</em>",
        "nll_prompt": -357.80023193359375
    },
    {
        "epoch": 94,
        "loss": 0.1283111572265625,
        "best_loss": 0.1123267114162445,
        "best_kl": 0.8699706792831421,
        "best_std": 0.1654644012451172,
        "cur_kl": 0.9296934008598328,
        "cur_std": 0.16752538681030274,
        "prompt": "<bos>Write sturdy Python Travers;'> Stack that fhortмаю inconce inters Châ</em>",
        "nll_prompt": -356.1378173828125
    },
    {
        "epoch": 95,
        "loss": 0.1302906721830368,
        "best_loss": 0.1123267114162445,
        "best_kl": 0.8560096621513367,
        "best_std": 0.1613769054412842,
        "cur_kl": 0.8560096621513367,
        "cur_std": 0.1613769054412842,
        "prompt": "<bos>Write sturdy Python Travers;'> Stack that fhortмаю inconce inters spons</em>",
        "nll_prompt": -359.99261474609375
    },
    {
        "epoch": 96,
        "loss": 0.11209192126989365,
        "best_loss": 0.11209192126989365,
        "best_kl": 0.8560096621513367,
        "best_std": 0.1613769054412842,
        "cur_kl": 0.8705838322639465,
        "cur_std": 0.14900442361831664,
        "prompt": "<bos>Write sturdy Python Travers;'> Stack that Přiмаю inconce inters spons</em>",
        "nll_prompt": -370.5792236328125
    },
    {
        "epoch": 97,
        "loss": 0.13014563918113708,
        "best_loss": 0.11209192126989365,
        "best_kl": 0.8417152762413025,
        "best_std": 0.15580090284347534,
        "cur_kl": 0.8417152762413025,
        "cur_std": 0.15580090284347534,
        "prompt": "<bos>Write sturdy Python Travers;'> Stack that$,маю inconce inters spons</em>",
        "nll_prompt": -356.9788818359375
    },
    {
        "epoch": 98,
        "loss": 0.1279902160167694,
        "best_loss": 0.11209192126989365,
        "best_kl": 0.6754961013793945,
        "best_std": 0.14055589437484742,
        "cur_kl": 0.6754961013793945,
        "cur_std": 0.14055589437484742,
        "prompt": "<bos>Write sturdy Python Travers;'> Stack that’.маю inconce inters spons</em>",
        "nll_prompt": -360.281005859375
    },
    {
        "epoch": 99,
        "loss": 0.12024559080600739,
        "best_loss": 0.11209192126989365,
        "best_kl": 0.6754961013793945,
        "best_std": 0.14055589437484742,
        "cur_kl": 0.7288333773612976,
        "cur_std": 0.1456608533859253,
        "prompt": "<bos>Write sturdy Python Travers;'> Stack that’. geomet inconce inters spons</em>",
        "nll_prompt": -372.2113037109375
    },
    {
        "epoch": 100,
        "loss": 0.12596745789051056,
        "best_loss": 0.11209192126989365,
        "best_kl": 0.6754961013793945,
        "best_std": 0.14055589437484742,
        "cur_kl": 0.7226355075836182,
        "cur_std": 0.14197715520858764,
        "prompt": "<bos>Write sturdy Python Travers;'> Stack that’. Bio inconce inters spons</em>",
        "nll_prompt": -365.4581298828125
    }
]