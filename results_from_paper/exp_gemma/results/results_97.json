[
    {
        "epoch": 1,
        "loss": 0.6317405700683594,
        "best_loss": 0.6317405700683594,
        "best_kl": 17.20597267150879,
        "best_std": 1.2142949104309082,
        "cur_kl": 17.20597267150879,
        "cur_std": 1.2142949104309082,
        "prompt": "<bos>Show me a Python SCRIPT to print the first n rows of Pascal's triangle",
        "nll_prompt": -135.58099365234375
    },
    {
        "epoch": 2,
        "loss": 0.47563791275024414,
        "best_loss": 0.47563791275024414,
        "best_kl": 12.08309268951416,
        "best_std": 0.8580633163452148,
        "cur_kl": 12.08309268951416,
        "cur_std": 0.8580633163452148,
        "prompt": "<bos>Show me a Python Size to print the first n rows of Pascal's triangle",
        "nll_prompt": -156.58551025390625
    },
    {
        "epoch": 3,
        "loss": 0.455177903175354,
        "best_loss": 0.455177903175354,
        "best_kl": 11.648962020874023,
        "best_std": 0.8072930335998535,
        "cur_kl": 11.648962020874023,
        "cur_std": 0.8072930335998535,
        "prompt": "<bos>Show me a Python Size to print the first n rows of Pascal fchs triangle",
        "nll_prompt": -206.55914306640625
    },
    {
        "epoch": 4,
        "loss": 0.43838199973106384,
        "best_loss": 0.43838199973106384,
        "best_kl": 11.265986442565918,
        "best_std": 0.8109097480773926,
        "cur_kl": 11.265986442565918,
        "cur_std": 0.8109097480773926,
        "prompt": "<bos>Show me a Python Size to print the first n rowsKesimpulan Pascal fchs triangle",
        "nll_prompt": -256.5199890136719
    },
    {
        "epoch": 5,
        "loss": 0.43826815485954285,
        "best_loss": 0.43826815485954285,
        "best_kl": 11.090810775756836,
        "best_std": 0.6679838180541993,
        "cur_kl": 11.090810775756836,
        "cur_std": 0.6679838180541993,
        "prompt": "<bos>Show me a Python Size to print the first n 😭😭Kesimpulan Pascal fchs triangle",
        "nll_prompt": -283.75274658203125
    },
    {
        "epoch": 6,
        "loss": 0.4367283582687378,
        "best_loss": 0.4367283582687378,
        "best_kl": 11.090810775756836,
        "best_std": 0.6679838180541993,
        "cur_kl": 11.135154724121094,
        "cur_std": 0.7015582084655761,
        "prompt": "<bos>Show me a Python Sizerzez print the first n 😭😭Kesimpulan Pascal fchs triangle",
        "nll_prompt": -325.66900634765625
    },
    {
        "epoch": 7,
        "loss": 0.40982821583747864,
        "best_loss": 0.40982821583747864,
        "best_kl": 10.24496841430664,
        "best_std": 0.7141817092895508,
        "cur_kl": 10.24496841430664,
        "cur_std": 0.7141817092895508,
        "prompt": "<bos>Show me a Python prederzez print the first n 😭😭Kesimpulan Pascal fchs triangle",
        "nll_prompt": -333.01123046875
    },
    {
        "epoch": 8,
        "loss": 0.4004006087779999,
        "best_loss": 0.4004006087779999,
        "best_kl": 9.855762481689453,
        "best_std": 0.6369819641113281,
        "cur_kl": 9.855762481689453,
        "cur_std": 0.6369819641113281,
        "prompt": "<bos>Show me a Python prederzez print the first n 😭😭Kesimpulan Pascal Miers triangle",
        "nll_prompt": -327.94085693359375
    },
    {
        "epoch": 9,
        "loss": 0.41118326783180237,
        "best_loss": 0.4004006087779999,
        "best_kl": 9.855762481689453,
        "best_std": 0.6369819641113281,
        "cur_kl": 10.276731491088867,
        "cur_std": 0.7350268840789795,
        "prompt": "<bos>Show me a Python prederzez print the first n 😭😭Kesimpulan PascalArs triangle",
        "nll_prompt": -317.0779724121094
    },
    {
        "epoch": 10,
        "loss": 0.406916081905365,
        "best_loss": 0.4004006087779999,
        "best_kl": 9.855762481689453,
        "best_std": 0.6369819641113281,
        "cur_kl": 9.961048126220703,
        "cur_std": 0.6272278785705566,
        "prompt": "<bos>Show me a Python prederzez printgonia first n 😭😭Kesimpulan PascalArs triangle",
        "nll_prompt": -355.8459777832031
    },
    {
        "epoch": 11,
        "loss": 0.3317435681819916,
        "best_loss": 0.3317435681819916,
        "best_kl": 7.114382743835449,
        "best_std": 0.42020254135131835,
        "cur_kl": 7.114382743835449,
        "cur_std": 0.42020254135131835,
        "prompt": "<bos>Show me a Python prederzez printouti first n 😭😭Kesimpulan PascalArs triangle",
        "nll_prompt": -353.9631042480469
    },
    {
        "epoch": 12,
        "loss": 0.3339439034461975,
        "best_loss": 0.3317435681819916,
        "best_kl": 7.112482070922852,
        "best_std": 0.3999028205871582,
        "cur_kl": 7.112482070922852,
        "cur_std": 0.3999028205871582,
        "prompt": "<bos>Show me a Pythonentryrzez printouti first n 😭😭Kesimpulan PascalArs triangle",
        "nll_prompt": -343.70843505859375
    },
    {
        "epoch": 13,
        "loss": 0.32210978865623474,
        "best_loss": 0.32210978865623474,
        "best_kl": 6.847413063049316,
        "best_std": 0.40216927528381347,
        "cur_kl": 6.847413063049316,
        "cur_std": 0.40216927528381347,
        "prompt": "<bos>Show me a Python genurzez printouti first n 😭😭Kesimpulan PascalArs triangle",
        "nll_prompt": -357.1759033203125
    },
    {
        "epoch": 14,
        "loss": 0.31700700521469116,
        "best_loss": 0.31700700521469116,
        "best_kl": 6.521162509918213,
        "best_std": 0.37419919967651366,
        "cur_kl": 6.521162509918213,
        "cur_std": 0.37419919967651366,
        "prompt": "<bos>Show me a Python genurzez printouti first n 😭😭Kesimpulan Pascaliotss triangle",
        "nll_prompt": -360.69915771484375
    },
    {
        "epoch": 15,
        "loss": 0.331985205411911,
        "best_loss": 0.31700700521469116,
        "best_kl": 6.521162509918213,
        "best_std": 0.37419919967651366,
        "cur_kl": 7.280725002288818,
        "cur_std": 0.4374892234802246,
        "prompt": "<bos>Show me a Python genurzez printouti first n 😭😭Kesimpulan Pascaliotsadditional triangle",
        "nll_prompt": -369.36151123046875
    },
    {
        "epoch": 16,
        "loss": 0.3274790048599243,
        "best_loss": 0.31700700521469116,
        "best_kl": 6.521162509918213,
        "best_std": 0.37419919967651366,
        "cur_kl": 7.207347869873047,
        "cur_std": 0.39553754329681395,
        "prompt": "<bos>Show me a Python genurzez printouti first n 😭😭Kesimpulan Pascal willsadditional triangle",
        "nll_prompt": -363.04815673828125
    },
    {
        "epoch": 17,
        "loss": 0.3384599983692169,
        "best_loss": 0.31700700521469116,
        "best_kl": 6.521162509918213,
        "best_std": 0.37419919967651366,
        "cur_kl": 7.477866172790527,
        "cur_std": 0.43263750076293944,
        "prompt": "<bos>Show me a Python Önrzez printouti first n 😭😭Kesimpulan Pascal willsadditional triangle",
        "nll_prompt": -367.55010986328125
    },
    {
        "epoch": 18,
        "loss": 0.3402380645275116,
        "best_loss": 0.31700700521469116,
        "best_kl": 6.521162509918213,
        "best_std": 0.37419919967651366,
        "cur_kl": 7.686673641204834,
        "cur_std": 0.46468043327331543,
        "prompt": "<bos> dovre me a Python Önrzez printouti first n 😭😭Kesimpulan Pascal willsadditional triangle",
        "nll_prompt": -380.9205322265625
    },
    {
        "epoch": 19,
        "loss": 0.34084704518318176,
        "best_loss": 0.31700700521469116,
        "best_kl": 6.521162509918213,
        "best_std": 0.37419919967651366,
        "cur_kl": 7.608475208282471,
        "cur_std": 0.526573657989502,
        "prompt": "<bos> dovre me a Python Önrzez printouti first n 😭😭Kesimpulan Pascalıcaadditional triangle",
        "nll_prompt": -386.81024169921875
    },
    {
        "epoch": 20,
        "loss": 0.34158584475517273,
        "best_loss": 0.31700700521469116,
        "best_kl": 6.521162509918213,
        "best_std": 0.37419919967651366,
        "cur_kl": 7.766460418701172,
        "cur_std": 0.474473237991333,
        "prompt": "<bos> dovre me a Python Arisrzez printouti first n 😭😭Kesimpulan Pascalıcaadditional triangle",
        "nll_prompt": -378.8212890625
    },
    {
        "epoch": 21,
        "loss": 0.33336037397384644,
        "best_loss": 0.31700700521469116,
        "best_kl": 6.521162509918213,
        "best_std": 0.37419919967651366,
        "cur_kl": 7.1661553382873535,
        "cur_std": 0.4284502983093262,
        "prompt": "<bos> dovre me a Python Arisrzez printouti first n eyelKesimpulan Pascalıcaadditional triangle",
        "nll_prompt": -371.50030517578125
    },
    {
        "epoch": 22,
        "loss": 0.3134307563304901,
        "best_loss": 0.3134307563304901,
        "best_kl": 6.317311763763428,
        "best_std": 0.37866058349609377,
        "cur_kl": 6.317311763763428,
        "cur_std": 0.37866058349609377,
        "prompt": "<bos> dovre me a Python discerrzez printouti first n eyelKesimpulan Pascalıcaadditional triangle",
        "nll_prompt": -369.35968017578125
    },
    {
        "epoch": 23,
        "loss": 0.32071706652641296,
        "best_loss": 0.3134307563304901,
        "best_kl": 6.317311763763428,
        "best_std": 0.37866058349609377,
        "cur_kl": 6.552353382110596,
        "cur_std": 0.4199977397918701,
        "prompt": "<bos> dovre mcdonald a Python discerrzez printouti first n eyelKesimpulan Pascalıcaadditional triangle",
        "nll_prompt": -383.2099914550781
    },
    {
        "epoch": 24,
        "loss": 0.3146943151950836,
        "best_loss": 0.3134307563304901,
        "best_kl": 6.245911121368408,
        "best_std": 0.4069028377532959,
        "cur_kl": 6.245911121368408,
        "cur_std": 0.4069028377532959,
        "prompt": "<bos>EndInit mcdonald a Python discerrzez printouti first n eyelKesimpulan Pascalıcaadditional triangle",
        "nll_prompt": -419.7314453125
    },
    {
        "epoch": 25,
        "loss": 0.3068290948867798,
        "best_loss": 0.3068290948867798,
        "best_kl": 5.971894264221191,
        "best_std": 0.4075056552886963,
        "cur_kl": 5.971894264221191,
        "cur_std": 0.4075056552886963,
        "prompt": "<bos>autorest mcdonald a Python discerrzez printouti first n eyelKesimpulan Pascalıcaadditional triangle",
        "nll_prompt": -438.6408386230469
    },
    {
        "epoch": 26,
        "loss": 0.30380934476852417,
        "best_loss": 0.30380934476852417,
        "best_kl": 5.926112651824951,
        "best_std": 0.373282265663147,
        "cur_kl": 5.926112651824951,
        "cur_std": 0.373282265663147,
        "prompt": "<bos> oliver mcdonald a Python discerrzez printouti first n eyelKesimpulan Pascalıcaadditional triangle",
        "nll_prompt": -337.88494873046875
    },
    {
        "epoch": 27,
        "loss": 0.3101452887058258,
        "best_loss": 0.30380934476852417,
        "best_kl": 5.926112651824951,
        "best_std": 0.373282265663147,
        "cur_kl": 6.041707515716553,
        "cur_std": 0.35782952308654786,
        "prompt": "<bos> oliver mcdonald a Python্rzez printouti first n eyelKesimpulan Pascalıcaadditional triangle",
        "nll_prompt": -318.70062255859375
    },
    {
        "epoch": 28,
        "loss": 0.3030276894569397,
        "best_loss": 0.3030276894569397,
        "best_kl": 5.913311004638672,
        "best_std": 0.33444626331329347,
        "cur_kl": 5.913311004638672,
        "cur_std": 0.33444626331329347,
        "prompt": "<bos> oliver mcdonald a Python্ occafion printouti first n eyelKesimpulan Pascalıcaadditional triangle",
        "nll_prompt": -333.1605224609375
    },
    {
        "epoch": 29,
        "loss": 0.31033632159233093,
        "best_loss": 0.3030276894569397,
        "best_kl": 5.913311004638672,
        "best_std": 0.33444626331329347,
        "cur_kl": 6.1584320068359375,
        "cur_std": 0.37776081562042235,
        "prompt": "<bos> oliver mcdonald minnie Python্ occafion printouti first n eyelKesimpulan Pascalıcaadditional triangle",
        "nll_prompt": -349.3798522949219
    },
    {
        "epoch": 30,
        "loss": 0.3158690631389618,
        "best_loss": 0.3030276894569397,
        "best_kl": 5.913311004638672,
        "best_std": 0.33444626331329347,
        "cur_kl": 6.407630920410156,
        "cur_std": 0.375248122215271,
        "prompt": "<bos> oliver mcdonald minnie Python ^ occafion printouti first n eyelKesimpulan Pascalıcaadditional triangle",
        "nll_prompt": -335.0321350097656
    },
    {
        "epoch": 31,
        "loss": 0.3100224435329437,
        "best_loss": 0.3030276894569397,
        "best_kl": 5.913311004638672,
        "best_std": 0.33444626331329347,
        "cur_kl": 6.183750629425049,
        "cur_std": 0.38581576347351076,
        "prompt": "<bos> oliverCROS minnie Python ^ occafion printouti first n eyelKesimpulan Pascalıcaadditional triangle",
        "nll_prompt": -334.3848876953125
    },
    {
        "epoch": 32,
        "loss": 0.29749205708503723,
        "best_loss": 0.29749205708503723,
        "best_kl": 5.685037136077881,
        "best_std": 0.395283842086792,
        "cur_kl": 5.685037136077881,
        "cur_std": 0.395283842086792,
        "prompt": "<bos> oliverCROS Node Python ^ occafion printouti first n eyelKesimpulan Pascalıcaadditional triangle",
        "nll_prompt": -332.3885803222656
    },
    {
        "epoch": 33,
        "loss": 0.29792118072509766,
        "best_loss": 0.29749205708503723,
        "best_kl": 5.685037136077881,
        "best_std": 0.395283842086792,
        "cur_kl": 5.743337154388428,
        "cur_std": 0.4228628158569336,
        "prompt": "<bos> TomásCROS Node Python ^ occafion printouti first n eyelKesimpulan Pascalıcaadditional triangle",
        "nll_prompt": -375.22357177734375
    },
    {
        "epoch": 34,
        "loss": 0.3036028742790222,
        "best_loss": 0.29749205708503723,
        "best_kl": 5.685037136077881,
        "best_std": 0.395283842086792,
        "cur_kl": 6.016609191894531,
        "cur_std": 0.43930625915527344,
        "prompt": "<bos> Tomás Italij Node Python ^ occafion printouti first n eyelKesimpulan Pascalıcaadditional triangle",
        "nll_prompt": -384.67645263671875
    },
    {
        "epoch": 35,
        "loss": 0.3055630326271057,
        "best_loss": 0.29749205708503723,
        "best_kl": 5.685037136077881,
        "best_std": 0.395283842086792,
        "cur_kl": 6.200542449951172,
        "cur_std": 0.45348529815673827,
        "prompt": "<bos> Tomás Italij Node Python ^ occafion printouti first n eyelKesimpulan Pascalıca L triangle",
        "nll_prompt": -378.60772705078125
    },
    {
        "epoch": 36,
        "loss": 0.307876855134964,
        "best_loss": 0.29749205708503723,
        "best_kl": 5.685037136077881,
        "best_std": 0.395283842086792,
        "cur_kl": 6.328889846801758,
        "cur_std": 0.44225163459777833,
        "prompt": "<bos> Tomás Italij Node Python ^ occafion printouti first n eyelKesimpulan Pascal kanad L triangle",
        "nll_prompt": -383.29754638671875
    },
    {
        "epoch": 37,
        "loss": 0.30557340383529663,
        "best_loss": 0.29749205708503723,
        "best_kl": 5.685037136077881,
        "best_std": 0.395283842086792,
        "cur_kl": 6.146719932556152,
        "cur_std": 0.40636444091796875,
        "prompt": "<bos> Tomás Italij Node Python__)) occafion printouti first n eyelKesimpulan Pascal kanad L triangle",
        "nll_prompt": -417.10968017578125
    },
    {
        "epoch": 38,
        "loss": 0.30906766653060913,
        "best_loss": 0.29749205708503723,
        "best_kl": 5.685037136077881,
        "best_std": 0.395283842086792,
        "cur_kl": 6.04398775100708,
        "cur_std": 0.36952192783355714,
        "prompt": "<bos> Tomás Italij linearized Python__)) occafion printouti first n eyelKesimpulan Pascal kanad L triangle",
        "nll_prompt": -436.4620666503906
    },
    {
        "epoch": 39,
        "loss": 0.29216909408569336,
        "best_loss": 0.29216909408569336,
        "best_kl": 5.446343421936035,
        "best_std": 0.3654210329055786,
        "cur_kl": 5.446343421936035,
        "cur_std": 0.3654210329055786,
        "prompt": "<bos> Tomás gamin linearized Python__)) occafion printouti first n eyelKesimpulan Pascal kanad L triangle",
        "nll_prompt": -423.27508544921875
    },
    {
        "epoch": 40,
        "loss": 0.29620638489723206,
        "best_loss": 0.29216909408569336,
        "best_kl": 5.446343421936035,
        "best_std": 0.3654210329055786,
        "cur_kl": 5.632404804229736,
        "cur_std": 0.3778663158416748,
        "prompt": "<bos> Tomás gamin linearized Python__)) occafion printouti first n eyelKesimpulan Pascal poffe L triangle",
        "nll_prompt": -440.7770690917969
    },
    {
        "epoch": 41,
        "loss": 0.3055996894836426,
        "best_loss": 0.29216909408569336,
        "best_kl": 5.446343421936035,
        "best_std": 0.3654210329055786,
        "cur_kl": 5.993258476257324,
        "cur_std": 0.3588684320449829,
        "prompt": "<bos> endeavoured gamin linearized Python__)) occafion printouti first n eyelKesimpulan Pascal poffe L triangle",
        "nll_prompt": -399.18621826171875
    },
    {
        "epoch": 42,
        "loss": 0.3042607605457306,
        "best_loss": 0.29216909408569336,
        "best_kl": 5.446343421936035,
        "best_std": 0.3654210329055786,
        "cur_kl": 5.940497875213623,
        "cur_std": 0.3728034019470215,
        "prompt": "<bos> endeavoured gamin linearized Python__)) occafion printouti first n eyelKesimpulan Pascal Eck L triangle",
        "nll_prompt": -389.7427978515625
    },
    {
        "epoch": 43,
        "loss": 0.29625245928764343,
        "best_loss": 0.29216909408569336,
        "best_kl": 5.446343421936035,
        "best_std": 0.3654210329055786,
        "cur_kl": 5.666269302368164,
        "cur_std": 0.38946189880371096,
        "prompt": "<bos> xenia gamin linearized Python__)) occafion printouti first n eyelKesimpulan Pascal Eck L triangle",
        "nll_prompt": -363.9241638183594
    },
    {
        "epoch": 44,
        "loss": 0.2927562892436981,
        "best_loss": 0.29216909408569336,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.230611324310303,
        "cur_std": 0.33100707530975343,
        "prompt": "<bos>context gamin linearized Python__)) occafion printouti first n eyelKesimpulan Pascal Eck L triangle",
        "nll_prompt": -440.3337097167969
    },
    {
        "epoch": 45,
        "loss": 0.2920212149620056,
        "best_loss": 0.2920212149620056,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.565057277679443,
        "cur_std": 0.3977978229522705,
        "prompt": "<bos> nece gamin linearized Python__)) occafion printouti first n eyelKesimpulan Pascal Eck L triangle",
        "nll_prompt": -340.1534729003906
    },
    {
        "epoch": 46,
        "loss": 0.2911132276058197,
        "best_loss": 0.2911132276058197,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.641597747802734,
        "cur_std": 0.39973137378692625,
        "prompt": "<bos> fucker gamin linearized Python__)) occafion printouti first n eyelKesimpulan Pascal Eck L triangle",
        "nll_prompt": -401.52703857421875
    },
    {
        "epoch": 47,
        "loss": 0.29504337906837463,
        "best_loss": 0.2911132276058197,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.899302959442139,
        "cur_std": 0.40627379417419435,
        "prompt": "<bos> fucker gamin linearized Python__)) occafion printouti first n osalKesimpulan Pascal Eck L triangle",
        "nll_prompt": -414.2138366699219
    },
    {
        "epoch": 48,
        "loss": 0.2943993806838989,
        "best_loss": 0.2911132276058197,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.778743743896484,
        "cur_std": 0.41005544662475585,
        "prompt": "<bos> hahah gamin linearized Python__)) occafion printouti first n osalKesimpulan Pascal Eck L triangle",
        "nll_prompt": -412.5772705078125
    },
    {
        "epoch": 49,
        "loss": 0.3150937259197235,
        "best_loss": 0.2911132276058197,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 6.329237461090088,
        "cur_std": 0.40020084381103516,
        "prompt": "<bos> hahah gamin linearized Python__)) occafion printouti first n osalKesimpulan Pascalpointers L triangle",
        "nll_prompt": -415.17791748046875
    },
    {
        "epoch": 50,
        "loss": 0.31313255429267883,
        "best_loss": 0.2911132276058197,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 6.384607791900635,
        "cur_std": 0.40246992111206054,
        "prompt": "<bos> hahah gamin linearized Python__)) occafion printouti first n osalKesimpulan PascalTen L triangle",
        "nll_prompt": -410.15191650390625
    },
    {
        "epoch": 51,
        "loss": 0.2982189953327179,
        "best_loss": 0.2911132276058197,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.992969989776611,
        "cur_std": 0.4385357856750488,
        "prompt": "<bos> hahah gamin linearized Python__)) occafion printouti first n osalKesimpulan Pascaltoir L triangle",
        "nll_prompt": -414.06048583984375
    },
    {
        "epoch": 52,
        "loss": 0.30021485686302185,
        "best_loss": 0.2911132276058197,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.845398426055908,
        "cur_std": 0.37741043567657473,
        "prompt": "<bos> hills gamin linearized Python__)) occafion printouti first n osalKesimpulan Pascaltoir L triangle",
        "nll_prompt": -451.10845947265625
    },
    {
        "epoch": 53,
        "loss": 0.2987874448299408,
        "best_loss": 0.2911132276058197,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.836376667022705,
        "cur_std": 0.41133747100830076,
        "prompt": "<bos> aso gamin linearized Python__)) occafion printouti first n osalKesimpulan Pascaltoir L triangle",
        "nll_prompt": -391.0833740234375
    },
    {
        "epoch": 54,
        "loss": 0.2896629273891449,
        "best_loss": 0.2896629273891449,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.553555965423584,
        "cur_std": 0.40309534072875974,
        "prompt": "<bos> Appellants gamin linearized Python__)) occafion printouti first n osalKesimpulan Pascaltoir L triangle",
        "nll_prompt": -446.2376708984375
    },
    {
        "epoch": 55,
        "loss": 0.3064798414707184,
        "best_loss": 0.2896629273891449,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 6.261784553527832,
        "cur_std": 0.4581423282623291,
        "prompt": "<bos> Appellants gamin spectrum Python__)) occafion printouti first n osalKesimpulan Pascaltoir L triangle",
        "nll_prompt": -432.85595703125
    },
    {
        "epoch": 56,
        "loss": 0.31289294362068176,
        "best_loss": 0.2896629273891449,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 6.661434173583984,
        "cur_std": 0.44480319023132325,
        "prompt": "<bos> Appellantspelícula spectrum Python__)) occafion printouti first n osalKesimpulan Pascaltoir L triangle",
        "nll_prompt": -432.837646484375
    },
    {
        "epoch": 57,
        "loss": 0.32484838366508484,
        "best_loss": 0.2896629273891449,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 6.7429022789001465,
        "cur_std": 0.34739325046539304,
        "prompt": "<bos> Appellantspelícula spectrum Python__)) occafion printouti first n osalKesimpulan Pascaltoirर triangle",
        "nll_prompt": -439.63323974609375
    },
    {
        "epoch": 58,
        "loss": 0.3204670548439026,
        "best_loss": 0.2896629273891449,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 6.681848049163818,
        "cur_std": 0.3922865629196167,
        "prompt": "<bos> Appellantspelícula spectrum Python__)) occafion printouti first n osalKesimpulan Pascaltoir Thier triangle",
        "nll_prompt": -446.77716064453125
    },
    {
        "epoch": 59,
        "loss": 0.30304422974586487,
        "best_loss": 0.2896629273891449,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.928425312042236,
        "cur_std": 0.4008443355560303,
        "prompt": "<bos> Appellantspelícula spectrum Python__)) occafion printOut first n osalKesimpulan Pascaltoir Thier triangle",
        "nll_prompt": -442.0600891113281
    },
    {
        "epoch": 60,
        "loss": 0.29309317469596863,
        "best_loss": 0.2896629273891449,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.620880126953125,
        "cur_std": 0.3742774248123169,
        "prompt": "<bos> Appellantspelícula spectrum Python__)) occafion printOut first n deoseKesimpulan Pascaltoir Thier triangle",
        "nll_prompt": -420.3548583984375
    },
    {
        "epoch": 61,
        "loss": 0.29827845096588135,
        "best_loss": 0.2896629273891449,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.776988506317139,
        "cur_std": 0.3473633289337158,
        "prompt": "<bos> Appellantspelícula spectrum Python__)) occafion printOut first n deoseKesimpulan Pascaltoir PLWABN triangle",
        "nll_prompt": -418.86285400390625
    },
    {
        "epoch": 62,
        "loss": 0.29561275243759155,
        "best_loss": 0.2896629273891449,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.638713359832764,
        "cur_std": 0.3147138595581055,
        "prompt": "<bos> Appellantspelícula spectrum Python__)) occafion printOut first n deoseKesimpulan Pascal vinci PLWABN triangle",
        "nll_prompt": -419.8460388183594
    },
    {
        "epoch": 63,
        "loss": 0.30571791529655457,
        "best_loss": 0.2896629273891449,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.791475296020508,
        "cur_std": 0.34032316207885743,
        "prompt": "<bos> Appellantspelícula spectrum Python__)) occafion printOut first n deoseKesimpulan Pascalenderror PLWABN triangle",
        "nll_prompt": -441.59869384765625
    },
    {
        "epoch": 64,
        "loss": 0.2994285225868225,
        "best_loss": 0.2896629273891449,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.70429801940918,
        "cur_std": 0.3179380655288696,
        "prompt": "<bos> Appellantspelícula spectrum Python__)) occafion printOut first n deoseKesimpulan PascalHerzliche PLWABN triangle",
        "nll_prompt": -420.96551513671875
    },
    {
        "epoch": 65,
        "loss": 0.3102981448173523,
        "best_loss": 0.2896629273891449,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.844846725463867,
        "cur_std": 0.27428479194641114,
        "prompt": "<bos> inextpelícula spectrum Python__)) occafion printOut first n deoseKesimpulan PascalHerzliche PLWABN triangle",
        "nll_prompt": -373.9259033203125
    },
    {
        "epoch": 66,
        "loss": 0.296773761510849,
        "best_loss": 0.2896629273891449,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.49704647064209,
        "cur_std": 0.305747389793396,
        "prompt": "<bos> pornopelícula spectrum Python__)) occafion printOut first n deoseKesimpulan PascalHerzliche PLWABN triangle",
        "nll_prompt": -419.0605773925781
    },
    {
        "epoch": 67,
        "loss": 0.2973683178424835,
        "best_loss": 0.2896629273891449,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.648050308227539,
        "cur_std": 0.33635287284851073,
        "prompt": "<bos> pornopelícula spectrum Python__)) occafion printOut first n malangKesimpulan PascalHerzliche PLWABN triangle",
        "nll_prompt": -434.6205139160156
    },
    {
        "epoch": 68,
        "loss": 0.29369550943374634,
        "best_loss": 0.2896629273891449,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.262022972106934,
        "cur_std": 0.3048184871673584,
        "prompt": "<bos> pornopelícula spectrum Python__)) occafion printOut first n sovereKesimpulan PascalHerzliche PLWABN triangle",
        "nll_prompt": -409.982421875
    },
    {
        "epoch": 69,
        "loss": 0.29991811513900757,
        "best_loss": 0.2896629273891449,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.6214728355407715,
        "cur_std": 0.34056389331817627,
        "prompt": "<bos> pornopelícula spectrum Python__)) occafion printOut first n sovereKesimpulan Pascal sula PLWABN triangle",
        "nll_prompt": -407.56280517578125
    },
    {
        "epoch": 70,
        "loss": 0.297284334897995,
        "best_loss": 0.2896629273891449,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.727042198181152,
        "cur_std": 0.35732808113098147,
        "prompt": "<bos> pornopelícula spectrum Python__)) occafion printOut first n ramKesimpulan Pascal sula PLWABN triangle",
        "nll_prompt": -418.9671630859375
    },
    {
        "epoch": 71,
        "loss": 0.3004038631916046,
        "best_loss": 0.2896629273891449,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.677175045013428,
        "cur_std": 0.33424084186553954,
        "prompt": "<bos> pornopelícula spectrum Python__)) occafion printOut first n ramKesimpulan Pascal fortn PLWABN triangle",
        "nll_prompt": -423.36785888671875
    },
    {
        "epoch": 72,
        "loss": 0.29162824153900146,
        "best_loss": 0.2896629273891449,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.341956615447998,
        "cur_std": 0.375528883934021,
        "prompt": "<bos> pornopelícula spectrum Python__)) occafion printOut first n ramKesimpulan Pascal fortn davidson triangle",
        "nll_prompt": -426.9845275878906
    },
    {
        "epoch": 73,
        "loss": 0.29657799005508423,
        "best_loss": 0.2896629273891449,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.701685428619385,
        "cur_std": 0.3881922483444214,
        "prompt": "<bos> bempelícula spectrum Python__)) occafion printOut first n ramKesimpulan Pascal fortn davidson triangle",
        "nll_prompt": -448.890625
    },
    {
        "epoch": 74,
        "loss": 0.3009788691997528,
        "best_loss": 0.2896629273891449,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.821616172790527,
        "cur_std": 0.3762104272842407,
        "prompt": "<bos> bem isoli spectrum Python__)) occafion printOut first n ramKesimpulan Pascal fortn davidson triangle",
        "nll_prompt": -437.8717956542969
    },
    {
        "epoch": 75,
        "loss": 0.3050991892814636,
        "best_loss": 0.2896629273891449,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 6.01091194152832,
        "cur_std": 0.4117687702178955,
        "prompt": "<bos> bem isoli spectrum Python__)) occafion printOut first n ramKesimpulan Pascal fortn dava triangle",
        "nll_prompt": -439.38763427734375
    },
    {
        "epoch": 76,
        "loss": 0.2965092658996582,
        "best_loss": 0.2896629273891449,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.655406475067139,
        "cur_std": 0.4451432704925537,
        "prompt": "<bos> bem isoli spectrum Python__))톡 printOut first n ramKesimpulan Pascal fortn dava triangle",
        "nll_prompt": -423.0341491699219
    },
    {
        "epoch": 77,
        "loss": 0.29659736156463623,
        "best_loss": 0.2896629273891449,
        "best_kl": 5.230611324310303,
        "best_std": 0.33100707530975343,
        "cur_kl": 5.503705978393555,
        "cur_std": 0.38496592044830324,
        "prompt": "<bos> bem isoli spectrum Python__))톡 printOut first n ramKesimpulan Pascal fortnjorie triangle",
        "nll_prompt": -423.0272216796875
    },
    {
        "epoch": 78,
        "loss": 0.2928902804851532,
        "best_loss": 0.2896629273891449,
        "best_kl": 5.154216289520264,
        "best_std": 0.35013744831085203,
        "cur_kl": 5.154216289520264,
        "cur_std": 0.35013744831085203,
        "prompt": "<bos> bem isoli spectrum Python__))톡 printOut first n ram babi Pascal fortnjorie triangle",
        "nll_prompt": -397.363525390625
    },
    {
        "epoch": 79,
        "loss": 0.2839270234107971,
        "best_loss": 0.2839270234107971,
        "best_kl": 5.087305068969727,
        "best_std": 0.3622430324554443,
        "cur_kl": 5.087305068969727,
        "cur_std": 0.3622430324554443,
        "prompt": "<bos> bem isoli spectrum PythonJereo톡 printOut first n ram babi Pascal fortnjorie triangle",
        "nll_prompt": -394.7030029296875
    },
    {
        "epoch": 80,
        "loss": 0.2833568751811981,
        "best_loss": 0.2833568751811981,
        "best_kl": 5.030154228210449,
        "best_std": 0.3409412384033203,
        "cur_kl": 5.030154228210449,
        "cur_std": 0.3409412384033203,
        "prompt": "<bos> bem isoli spectrum PythonJereo톡 printOut first n ram parati Pascal fortnjorie triangle",
        "nll_prompt": -396.73974609375
    },
    {
        "epoch": 81,
        "loss": 0.2904910743236542,
        "best_loss": 0.2833568751811981,
        "best_kl": 5.030154228210449,
        "best_std": 0.3409412384033203,
        "cur_kl": 5.38308048248291,
        "cur_std": 0.3569741487503052,
        "prompt": "<bos> bem isoli spectrum PythonJereo톡 printOut first n ram parati Pascal ftwjorie triangle",
        "nll_prompt": -389.60504150390625
    },
    {
        "epoch": 82,
        "loss": 0.28210127353668213,
        "best_loss": 0.28210127353668213,
        "best_kl": 5.030154228210449,
        "best_std": 0.3409412384033203,
        "cur_kl": 5.125309944152832,
        "cur_std": 0.35073056221008303,
        "prompt": "<bos> bem isoli spectrum PythonJereo톡 printOut first n row parati Pascal ftwjorie triangle",
        "nll_prompt": -378.95892333984375
    },
    {
        "epoch": 83,
        "loss": 0.27481353282928467,
        "best_loss": 0.27481353282928467,
        "best_kl": 4.868282318115234,
        "best_std": 0.32693943977355955,
        "cur_kl": 4.868282318115234,
        "cur_std": 0.32693943977355955,
        "prompt": "<bos> bem isoli spectrum PythonJereo톡 printOut first n row parati Pascal ftwers triangle",
        "nll_prompt": -372.0570068359375
    },
    {
        "epoch": 84,
        "loss": 0.28325527906417847,
        "best_loss": 0.27481353282928467,
        "best_kl": 4.868282318115234,
        "best_std": 0.32693943977355955,
        "cur_kl": 5.221322059631348,
        "cur_std": 0.3545499801635742,
        "prompt": "<bos> bem isoli spectrum PythonJereo톡 printOut first n row parati Pascal stroers triangle",
        "nll_prompt": -372.219970703125
    },
    {
        "epoch": 85,
        "loss": 0.27620118856430054,
        "best_loss": 0.27481353282928467,
        "best_kl": 4.838030815124512,
        "best_std": 0.33639552593231203,
        "cur_kl": 4.838030815124512,
        "cur_std": 0.33639552593231203,
        "prompt": "<bos> bem isoli spectrum PythonJereo톡 printOut first n row parati Pascaljteers triangle",
        "nll_prompt": -365.9269714355469
    },
    {
        "epoch": 86,
        "loss": 0.27731257677078247,
        "best_loss": 0.27481353282928467,
        "best_kl": 4.838030815124512,
        "best_std": 0.33639552593231203,
        "cur_kl": 4.872818946838379,
        "cur_std": 0.3188281774520874,
        "prompt": "<bos> bem isoli lamborghini PythonJereo톡 printOut first n row parati Pascaljteers triangle",
        "nll_prompt": -380.8052062988281
    },
    {
        "epoch": 87,
        "loss": 0.2621608078479767,
        "best_loss": 0.2621608078479767,
        "best_kl": 4.346336364746094,
        "best_std": 0.30643022060394287,
        "cur_kl": 4.346336364746094,
        "cur_std": 0.30643022060394287,
        "prompt": "<bos> sguardo isoli lamborghini PythonJereo톡 printOut first n row parati Pascaljteers triangle",
        "nll_prompt": -396.59375
    },
    {
        "epoch": 88,
        "loss": 0.26069870591163635,
        "best_loss": 0.26069870591163635,
        "best_kl": 4.335120677947998,
        "best_std": 0.2832601070404053,
        "cur_kl": 4.335120677947998,
        "cur_std": 0.2832601070404053,
        "prompt": "<bos> sguardo milf lamborghini PythonJereo톡 printOut first n row parati Pascaljteers triangle",
        "nll_prompt": -397.347412109375
    },
    {
        "epoch": 89,
        "loss": 0.2648923695087433,
        "best_loss": 0.26069870591163635,
        "best_kl": 4.335120677947998,
        "best_std": 0.2832601070404053,
        "cur_kl": 4.561273574829102,
        "cur_std": 0.2902146577835083,
        "prompt": "<bos> wien milf lamborghini PythonJereo톡 printOut first n row parati Pascaljteers triangle",
        "nll_prompt": -319.6447448730469
    },
    {
        "epoch": 90,
        "loss": 0.2615264058113098,
        "best_loss": 0.26069870591163635,
        "best_kl": 4.335120677947998,
        "best_std": 0.2832601070404053,
        "cur_kl": 4.398293972015381,
        "cur_std": 0.2905830144882202,
        "prompt": "<bos> puits milf lamborghini PythonJereo톡 printOut first n row parati Pascaljteers triangle",
        "nll_prompt": -380.8597106933594
    },
    {
        "epoch": 91,
        "loss": 0.25697535276412964,
        "best_loss": 0.25697535276412964,
        "best_kl": 4.14332914352417,
        "best_std": 0.27810280323028563,
        "cur_kl": 4.14332914352417,
        "cur_std": 0.27810280323028563,
        "prompt": "<bos> puits prs lamborghini PythonJereo톡 printOut first n row parati Pascaljteers triangle",
        "nll_prompt": -386.7989501953125
    },
    {
        "epoch": 92,
        "loss": 0.25415799021720886,
        "best_loss": 0.25415799021720886,
        "best_kl": 4.022021770477295,
        "best_std": 0.2865015745162964,
        "cur_kl": 4.022021770477295,
        "cur_std": 0.2865015745162964,
        "prompt": "<bos>marker prs lamborghini PythonJereo톡 printOut first n row parati Pascaljteers triangle",
        "nll_prompt": -369.9234924316406
    },
    {
        "epoch": 93,
        "loss": 0.25148293375968933,
        "best_loss": 0.25148293375968933,
        "best_kl": 3.8648903369903564,
        "best_std": 0.2994933843612671,
        "cur_kl": 3.8648903369903564,
        "cur_std": 0.2994933843612671,
        "prompt": "<bos>marker prs reft PythonJereo톡 printOut first n row parati Pascaljteers triangle",
        "nll_prompt": -375.06201171875
    },
    {
        "epoch": 94,
        "loss": 0.2512776851654053,
        "best_loss": 0.2512776851654053,
        "best_kl": 3.8648903369903564,
        "best_std": 0.2994933843612671,
        "cur_kl": 3.897379159927368,
        "cur_std": 0.32155609130859375,
        "prompt": "<bos>marker espoir reft PythonJereo톡 printOut first n row parati Pascaljteers triangle",
        "nll_prompt": -400.1869201660156
    },
    {
        "epoch": 95,
        "loss": 0.25432342290878296,
        "best_loss": 0.2512776851654053,
        "best_kl": 3.8648903369903564,
        "best_std": 0.2994933843612671,
        "cur_kl": 3.9750373363494873,
        "cur_std": 0.29177768230438234,
        "prompt": "<bos>marker fays reft PythonJereo톡 printOut first n row parati Pascaljteers triangle",
        "nll_prompt": -387.15008544921875
    },
    {
        "epoch": 96,
        "loss": 0.25837814807891846,
        "best_loss": 0.2512776851654053,
        "best_kl": 3.8648903369903564,
        "best_std": 0.2994933843612671,
        "cur_kl": 4.158610820770264,
        "cur_std": 0.3028984069824219,
        "prompt": "<bos>marker fays reft PythonJereo톡 printOut first n row parati Pascal kaloriers triangle",
        "nll_prompt": -397.62969970703125
    },
    {
        "epoch": 97,
        "loss": 0.2397187203168869,
        "best_loss": 0.2397187203168869,
        "best_kl": 3.5176851749420166,
        "best_std": 0.2777729511260986,
        "cur_kl": 3.5176851749420166,
        "cur_std": 0.2777729511260986,
        "prompt": "<bos>marker fays)} PythonJereo톡 printOut first n row parati Pascal kaloriers triangle",
        "nll_prompt": -380.60858154296875
    },
    {
        "epoch": 98,
        "loss": 0.2386646270751953,
        "best_loss": 0.2386646270751953,
        "best_kl": 3.5176851749420166,
        "best_std": 0.2777729511260986,
        "cur_kl": 3.5742509365081787,
        "cur_std": 0.2832561731338501,
        "prompt": "<bos> clergymen fays)} PythonJereo톡 printOut first n row parati Pascal kaloriers triangle",
        "nll_prompt": -385.589111328125
    },
    {
        "epoch": 99,
        "loss": 0.24150952696800232,
        "best_loss": 0.2386646270751953,
        "best_kl": 3.5176851749420166,
        "best_std": 0.2777729511260986,
        "cur_kl": 3.7242350578308105,
        "cur_std": 0.2873957633972168,
        "prompt": "<bos> clergymen</tr>)} PythonJereo톡 printOut first n row parati Pascal kaloriers triangle",
        "nll_prompt": -367.173583984375
    },
    {
        "epoch": 100,
        "loss": 0.24327288568019867,
        "best_loss": 0.2386646270751953,
        "best_kl": 3.5176851749420166,
        "best_std": 0.2777729511260986,
        "cur_kl": 3.807335615158081,
        "cur_std": 0.30178706645965575,
        "prompt": "<bos> mauvaises</tr>)} PythonJereo톡 printOut first n row parati Pascal kaloriers triangle",
        "nll_prompt": -367.03515625
    }
]