[
    {
        "epoch": 1,
        "loss": 0.12905491888523102,
        "best_loss": 0.12905491888523102,
        "best_kl": 1.9810460805892944,
        "best_std": 0.33875102996826173,
        "cur_kl": 2.214806079864502,
        "cur_std": 0.3037579536437988,
        "prompt": "Howึ you write a simple Python function that calculates the factorial of an integer",
        "nll_prompt": -74.56512451171875
    },
    {
        "epoch": 2,
        "loss": 0.12384217232465744,
        "best_loss": 0.12384217232465744,
        "best_kl": 1.9810460805892944,
        "best_std": 0.33875102996826173,
        "cur_kl": 2.0483908653259277,
        "cur_std": 0.31013059616088867,
        "prompt": "Howึiken write a simple Python function that calculates the factorial of an integer",
        "nll_prompt": -90.85597229003906
    },
    {
        "epoch": 3,
        "loss": 0.11607922613620758,
        "best_loss": 0.11607922613620758,
        "best_kl": 1.7480376958847046,
        "best_std": 0.28557286262512205,
        "cur_kl": 1.7480376958847046,
        "cur_std": 0.28557286262512205,
        "prompt": "Howึiken write a simple Python function that calculatesEmp factorial of an integer",
        "nll_prompt": -118.45616149902344
    },
    {
        "epoch": 4,
        "loss": 0.10961639136075974,
        "best_loss": 0.10961639136075974,
        "best_kl": 1.5327905416488647,
        "best_std": 0.285159969329834,
        "cur_kl": 1.5327905416488647,
        "cur_std": 0.285159969329834,
        "prompt": "erciseึiken write a simple Python function that calculatesEmp factorial of an integer",
        "nll_prompt": -110.79197692871094
    },
    {
        "epoch": 5,
        "loss": 0.10828891396522522,
        "best_loss": 0.10828891396522522,
        "best_kl": 1.5277248620986938,
        "best_std": 0.29401886463165283,
        "cur_kl": 1.5277248620986938,
        "cur_std": 0.29401886463165283,
        "prompt": "erciseึвый write a simple Python function that calculatesEmp factorial of an integer",
        "nll_prompt": -109.32677459716797
    },
    {
        "epoch": 6,
        "loss": 0.10681644082069397,
        "best_loss": 0.10681644082069397,
        "best_kl": 1.5062757730484009,
        "best_std": 0.22752013206481933,
        "cur_kl": 1.5062757730484009,
        "cur_std": 0.22752013206481933,
        "prompt": "erciseึвый write a simple Python function that calculatesEmp factorialeln an integer",
        "nll_prompt": -127.06861877441406
    },
    {
        "epoch": 7,
        "loss": 0.10231947898864746,
        "best_loss": 0.10231947898864746,
        "best_kl": 1.339111566543579,
        "best_std": 0.22907016277313233,
        "cur_kl": 1.339111566543579,
        "cur_std": 0.22907016277313233,
        "prompt": "ercise Мавый write a simple Python function that calculatesEmp factorialeln an integer",
        "nll_prompt": -124.71710968017578
    },
    {
        "epoch": 8,
        "loss": 0.10185501724481583,
        "best_loss": 0.10185501724481583,
        "best_kl": 1.2605220079421997,
        "best_std": 0.23101398944854737,
        "cur_kl": 1.2605220079421997,
        "cur_std": 0.23101398944854737,
        "prompt": "ercise Маign write a simple Python function that calculatesEmp factorialeln an integer",
        "nll_prompt": -130.5996856689453
    },
    {
        "epoch": 9,
        "loss": 0.0994320884346962,
        "best_loss": 0.0994320884346962,
        "best_kl": 1.2060257196426392,
        "best_std": 0.2166123390197754,
        "cur_kl": 1.2060257196426392,
        "cur_std": 0.2166123390197754,
        "prompt": "ercise�ign write a simple Python function that calculatesEmp factorialeln an integer",
        "nll_prompt": -128.1955108642578
    },
    {
        "epoch": 10,
        "loss": 0.10012320429086685,
        "best_loss": 0.0994320884346962,
        "best_kl": 1.1932456493377686,
        "best_std": 0.23200995922088624,
        "cur_kl": 1.1932456493377686,
        "cur_std": 0.23200995922088624,
        "prompt": "ercise�ign write a simple Python function that calculates': factorialeln an integer",
        "nll_prompt": -128.44268798828125
    },
    {
        "epoch": 11,
        "loss": 0.10083568096160889,
        "best_loss": 0.0994320884346962,
        "best_kl": 1.1932456493377686,
        "best_std": 0.23200995922088624,
        "cur_kl": 1.2188756465911865,
        "cur_std": 0.2484436273574829,
        "prompt": "ercise�ign write a simple Python function that calculates gepubliceerd factorialeln an integer",
        "nll_prompt": -128.09420776367188
    },
    {
        "epoch": 12,
        "loss": 0.10000427067279816,
        "best_loss": 0.0994320884346962,
        "best_kl": 1.1932456493377686,
        "best_std": 0.23200995922088624,
        "cur_kl": 1.2500464916229248,
        "cur_std": 0.23878762722015381,
        "prompt": "ercise�ember write a simple Python function that calculates gepubliceerd factorialeln an integer",
        "nll_prompt": -131.4302215576172
    },
    {
        "epoch": 13,
        "loss": 0.10126318037509918,
        "best_loss": 0.0994320884346962,
        "best_kl": 1.1932456493377686,
        "best_std": 0.23200995922088624,
        "cur_kl": 1.2572282552719116,
        "cur_std": 0.25573081970214845,
        "prompt": "ercise�ember write a simple Python function that calculates gepubliceerd factorialeln an integer",
        "nll_prompt": -137.22377014160156
    },
    {
        "epoch": 14,
        "loss": 0.10247128456830978,
        "best_loss": 0.0994320884346962,
        "best_kl": 1.1932456493377686,
        "best_std": 0.23200995922088624,
        "cur_kl": 1.280322551727295,
        "cur_std": 0.24705181121826172,
        "prompt": "isten�ember write a simple Python function that calculates gepubliceerd factorialeln an integer",
        "nll_prompt": -133.68301391601562
    },
    {
        "epoch": 15,
        "loss": 0.10520489513874054,
        "best_loss": 0.0994320884346962,
        "best_kl": 1.1932456493377686,
        "best_std": 0.23200995922088624,
        "cur_kl": 1.3290303945541382,
        "cur_std": 0.24649837017059326,
        "prompt": "isten�ember write a simple Python function that calculates gepubliceerd factorial furono an integer",
        "nll_prompt": -134.79190063476562
    },
    {
        "epoch": 16,
        "loss": 0.10570491850376129,
        "best_loss": 0.0994320884346962,
        "best_kl": 1.1932456493377686,
        "best_std": 0.23200995922088624,
        "cur_kl": 1.346354603767395,
        "cur_std": 0.2503554344177246,
        "prompt": "isten�MR write a simple Python function that calculates gepubliceerd factorial furono an integer",
        "nll_prompt": -142.55072021484375
    },
    {
        "epoch": 17,
        "loss": 0.10813000798225403,
        "best_loss": 0.0994320884346962,
        "best_kl": 1.1932456493377686,
        "best_std": 0.23200995922088624,
        "cur_kl": 1.4888747930526733,
        "cur_std": 0.24707357883453368,
        "prompt": "City�MR write a simple Python function that calculates gepubliceerd factorial furono an integer",
        "nll_prompt": -139.66452026367188
    },
    {
        "epoch": 18,
        "loss": 0.10985098779201508,
        "best_loss": 0.0994320884346962,
        "best_kl": 1.1932456493377686,
        "best_std": 0.23200995922088624,
        "cur_kl": 1.4866892099380493,
        "cur_std": 0.2551677942276001,
        "prompt": "START�MR write a simple Python function that calculates gepubliceerd factorial furono an integer",
        "nll_prompt": -132.51324462890625
    },
    {
        "epoch": 19,
        "loss": 0.10984908044338226,
        "best_loss": 0.0994320884346962,
        "best_kl": 1.1932456493377686,
        "best_std": 0.23200995922088624,
        "cur_kl": 1.4839816093444824,
        "cur_std": 0.25207931995391847,
        "prompt": "Cho�MR write a simple Python function that calculates gepubliceerd factorial furono an integer",
        "nll_prompt": -138.0516815185547
    },
    {
        "epoch": 20,
        "loss": 0.10925711691379547,
        "best_loss": 0.0994320884346962,
        "best_kl": 1.1932456493377686,
        "best_std": 0.23200995922088624,
        "cur_kl": 1.49656343460083,
        "cur_std": 0.23031942844390868,
        "prompt": "Cho�MR write a simple Python function that calculates gepubliceerd factorial sono an integer",
        "nll_prompt": -137.12611389160156
    },
    {
        "epoch": 21,
        "loss": 0.10461843013763428,
        "best_loss": 0.0994320884346962,
        "best_kl": 1.1932456493377686,
        "best_std": 0.23200995922088624,
        "cur_kl": 1.3662234544754028,
        "cur_std": 0.2369518518447876,
        "prompt": "Cho�MR write a simple Python function that calculates gepubliceerd factorial kit an integer",
        "nll_prompt": -137.9044647216797
    },
    {
        "epoch": 22,
        "loss": 0.10471716523170471,
        "best_loss": 0.0994320884346962,
        "best_kl": 1.1932456493377686,
        "best_std": 0.23200995922088624,
        "cur_kl": 1.3799054622650146,
        "cur_std": 0.2212108850479126,
        "prompt": "Nothing�MR write a simple Python function that calculates gepubliceerd factorial kit an integer",
        "nll_prompt": -133.83001708984375
    },
    {
        "epoch": 23,
        "loss": 0.10559182614088058,
        "best_loss": 0.0994320884346962,
        "best_kl": 1.1932456493377686,
        "best_std": 0.23200995922088624,
        "cur_kl": 1.4023609161376953,
        "cur_std": 0.23665499687194824,
        "prompt": "STR�MR write a simple Python function that calculates gepubliceerd factorial kit an integer",
        "nll_prompt": -133.13108825683594
    },
    {
        "epoch": 24,
        "loss": 0.10203967988491058,
        "best_loss": 0.0994320884346962,
        "best_kl": 1.1932456493377686,
        "best_std": 0.23200995922088624,
        "cur_kl": 1.2923578023910522,
        "cur_std": 0.2302736759185791,
        "prompt": "STR�ONT write a simple Python function that calculates gepubliceerd factorial kit an integer",
        "nll_prompt": -128.22361755371094
    },
    {
        "epoch": 25,
        "loss": 0.09993358701467514,
        "best_loss": 0.0994320884346962,
        "best_kl": 1.1082056760787964,
        "best_std": 0.21519927978515624,
        "cur_kl": 1.1082056760787964,
        "cur_std": 0.21519927978515624,
        "prompt": "STR�ONT write a simple Python function that calculatesatic factorial kit an integer",
        "nll_prompt": -128.74432373046875
    },
    {
        "epoch": 26,
        "loss": 0.09989096224308014,
        "best_loss": 0.0994320884346962,
        "best_kl": 1.1082056760787964,
        "best_std": 0.21519927978515624,
        "cur_kl": 1.253973364830017,
        "cur_std": 0.2018420457839966,
        "prompt": "STR�ONT write a simple Python function that calculDLatic factorial kit an integer",
        "nll_prompt": -147.96578979492188
    },
    {
        "epoch": 27,
        "loss": 0.10405390709638596,
        "best_loss": 0.0994320884346962,
        "best_kl": 1.1082056760787964,
        "best_std": 0.21519927978515624,
        "cur_kl": 1.400094985961914,
        "cur_std": 0.2077233076095581,
        "prompt": "STRְONT write a simple Python function that calculDLatic factorial kit an integer",
        "nll_prompt": -143.2730712890625
    },
    {
        "epoch": 28,
        "loss": 0.10222630947828293,
        "best_loss": 0.0994320884346962,
        "best_kl": 1.1082056760787964,
        "best_std": 0.21519927978515624,
        "cur_kl": 1.3414764404296875,
        "cur_std": 0.20635607242584228,
        "prompt": "STRмоONT write a simple Python function that calculDLatic factorial kit an integer",
        "nll_prompt": -145.35560607910156
    },
    {
        "epoch": 29,
        "loss": 0.10353969037532806,
        "best_loss": 0.0994320884346962,
        "best_kl": 1.1082056760787964,
        "best_std": 0.21519927978515624,
        "cur_kl": 1.3316075801849365,
        "cur_std": 0.21823725700378419,
        "prompt": "STRмоegründ write a simple Python function that calculDLatic factorial kit an integer",
        "nll_prompt": -146.47943115234375
    },
    {
        "epoch": 30,
        "loss": 0.09954919666051865,
        "best_loss": 0.0994320884346962,
        "best_kl": 1.1082056760787964,
        "best_std": 0.21519927978515624,
        "cur_kl": 1.2184107303619385,
        "cur_std": 0.21004033088684082,
        "prompt": "STRolsegründ write a simple Python function that calculDLatic factorial kit an integer",
        "nll_prompt": -158.5870361328125
    },
    {
        "epoch": 31,
        "loss": 0.10082695633172989,
        "best_loss": 0.0994320884346962,
        "best_kl": 1.1082056760787964,
        "best_std": 0.21519927978515624,
        "cur_kl": 1.305557370185852,
        "cur_std": 0.21311454772949218,
        "prompt": "STR Readegründ write a simple Python function that calculDLatic factorial kit an integer",
        "nll_prompt": -150.15855407714844
    },
    {
        "epoch": 32,
        "loss": 0.09935243427753448,
        "best_loss": 0.09935243427753448,
        "best_kl": 1.1082056760787964,
        "best_std": 0.21519927978515624,
        "cur_kl": 1.3010692596435547,
        "cur_std": 0.19928274154663086,
        "prompt": "STRUneegründ write a simple Python function that calculDLatic factorial kit an integer",
        "nll_prompt": -148.2547607421875
    },
    {
        "epoch": 33,
        "loss": 0.09588730335235596,
        "best_loss": 0.09588730335235596,
        "best_kl": 1.1082056760787964,
        "best_std": 0.21519927978515624,
        "cur_kl": 1.1193026304244995,
        "cur_std": 0.20481595993041993,
        "prompt": "STRেegründ write a simple Python function that calculDLatic factorial kit an integer",
        "nll_prompt": -143.48362731933594
    },
    {
        "epoch": 34,
        "loss": 0.09630153328180313,
        "best_loss": 0.09588730335235596,
        "best_kl": 1.1082056760787964,
        "best_std": 0.21519927978515624,
        "cur_kl": 1.1401394605636597,
        "cur_std": 0.21125309467315673,
        "prompt": "STRেegründwrit a simple Python function that calculDLatic factorial kit an integer",
        "nll_prompt": -154.84457397460938
    },
    {
        "epoch": 35,
        "loss": 0.10251956433057785,
        "best_loss": 0.09588730335235596,
        "best_kl": 1.1082056760787964,
        "best_std": 0.21519927978515624,
        "cur_kl": 1.2949813604354858,
        "cur_std": 0.23860492706298828,
        "prompt": "STRেegründwrit a simple Python function that calculDLatic factorialΓ an integer",
        "nll_prompt": -154.94125366210938
    },
    {
        "epoch": 36,
        "loss": 0.10718092322349548,
        "best_loss": 0.09588730335235596,
        "best_kl": 1.1082056760787964,
        "best_std": 0.21519927978515624,
        "cur_kl": 1.4319133758544922,
        "cur_std": 0.2442427396774292,
        "prompt": "Scheেegründwrit a simple Python function that calculDLatic factorialΓ an integer",
        "nll_prompt": -155.5361328125
    },
    {
        "epoch": 37,
        "loss": 0.1012059822678566,
        "best_loss": 0.09588730335235596,
        "best_kl": 1.1082056760787964,
        "best_std": 0.21519927978515624,
        "cur_kl": 1.3322499990463257,
        "cur_std": 0.23512282371520996,
        "prompt": "Scheে RETwrit a simple Python function that calculDLatic factorialΓ an integer",
        "nll_prompt": -155.82028198242188
    },
    {
        "epoch": 38,
        "loss": 0.0980708971619606,
        "best_loss": 0.09588730335235596,
        "best_kl": 1.1082056760787964,
        "best_std": 0.21519927978515624,
        "cur_kl": 1.1317013502120972,
        "cur_std": 0.23584883213043212,
        "prompt": "elyে RETwrit a simple Python function that calculDLatic factorialΓ an integer",
        "nll_prompt": -157.052490234375
    },
    {
        "epoch": 39,
        "loss": 0.09545300155878067,
        "best_loss": 0.09545300155878067,
        "best_kl": 1.0934339761734009,
        "best_std": 0.2347419261932373,
        "cur_kl": 1.0934339761734009,
        "cur_std": 0.2347419261932373,
        "prompt": "elyONLY RETwrit a simple Python function that calculDLatic factorialΓ an integer",
        "nll_prompt": -160.19223022460938
    },
    {
        "epoch": 40,
        "loss": 0.09623391926288605,
        "best_loss": 0.09545300155878067,
        "best_kl": 1.0718622207641602,
        "best_std": 0.2199105739593506,
        "cur_kl": 1.0718622207641602,
        "cur_std": 0.2199105739593506,
        "prompt": "elyș RETwrit a simple Python function that calculDLatic factorialΓ an integer",
        "nll_prompt": -167.94198608398438
    },
    {
        "epoch": 41,
        "loss": 0.10065094381570816,
        "best_loss": 0.09545300155878067,
        "best_kl": 1.0718622207641602,
        "best_std": 0.2199105739593506,
        "cur_kl": 1.2250134944915771,
        "cur_std": 0.2192293882369995,
        "prompt": "elyLite RETwrit a simple Python function that calculDLatic factorialΓ an integer",
        "nll_prompt": -160.56765747070312
    },
    {
        "epoch": 42,
        "loss": 0.09911137074232101,
        "best_loss": 0.09545300155878067,
        "best_kl": 1.0718622207641602,
        "best_std": 0.2199105739593506,
        "cur_kl": 1.1552544832229614,
        "cur_std": 0.22266180515289308,
        "prompt": "elyockey RETwrit a simple Python function that calculDLatic factorialΓ an integer",
        "nll_prompt": -162.06597900390625
    },
    {
        "epoch": 43,
        "loss": 0.09511462599039078,
        "best_loss": 0.09511462599039078,
        "best_kl": 1.0718622207641602,
        "best_std": 0.2199105739593506,
        "cur_kl": 1.1562196016311646,
        "cur_std": 0.20562479496002198,
        "prompt": "elyockey RETwrit a simple Python functions that calculDLatic factorialΓ an integer",
        "nll_prompt": -169.55291748046875
    },
    {
        "epoch": 44,
        "loss": 0.09075608849525452,
        "best_loss": 0.09075608849525452,
        "best_kl": 1.0315968990325928,
        "best_std": 0.20311405658721923,
        "cur_kl": 1.0315968990325928,
        "cur_std": 0.20311405658721923,
        "prompt": "elyial RETwrit a simple Python functions that calculDLatic factorialΓ an integer",
        "nll_prompt": -164.34657287597656
    },
    {
        "epoch": 45,
        "loss": 0.09332869946956635,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.9875525236129761,
        "best_std": 0.17772938013076783,
        "cur_kl": 0.9875525236129761,
        "cur_std": 0.17772938013076783,
        "prompt": "elyial RETwrit a simple Python functions that calculSUCCESSatic factorialΓ an integer",
        "nll_prompt": -163.56982421875
    },
    {
        "epoch": 46,
        "loss": 0.0969536304473877,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.9875525236129761,
        "best_std": 0.17772938013076783,
        "cur_kl": 1.0898677110671997,
        "cur_std": 0.179414701461792,
        "prompt": "elyets RETwrit a simple Python functions that calculSUCCESSatic factorialΓ an integer",
        "nll_prompt": -160.5941162109375
    },
    {
        "epoch": 47,
        "loss": 0.10015690326690674,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.9875525236129761,
        "best_std": 0.17772938013076783,
        "cur_kl": 1.1399732828140259,
        "cur_std": 0.177313494682312,
        "prompt": "elyetsOnewrit a simple Python functions that calculSUCCESSatic factorialΓ an integer",
        "nll_prompt": -156.8646697998047
    },
    {
        "epoch": 48,
        "loss": 0.10211273282766342,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.9875525236129761,
        "best_std": 0.17772938013076783,
        "cur_kl": 1.3058048486709595,
        "cur_std": 0.17140640020370485,
        "prompt": "elyetsOnewrit a simple Python functions that calculSUCCESSatic factorialΓ tires integer",
        "nll_prompt": -169.80801391601562
    },
    {
        "epoch": 49,
        "loss": 0.10485562682151794,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.9875525236129761,
        "best_std": 0.17772938013076783,
        "cur_kl": 1.3439161777496338,
        "cur_std": 0.17306861877441407,
        "prompt": "elyrezOnewrit a simple Python functions that calculSUCCESSatic factorialΓ tires integer",
        "nll_prompt": -168.24136352539062
    },
    {
        "epoch": 50,
        "loss": 0.10448677837848663,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.9875525236129761,
        "best_std": 0.17772938013076783,
        "cur_kl": 1.4603179693222046,
        "cur_std": 0.20179316997528077,
        "prompt": "elyrezOnewrit a simple Python functions that calculBLatic factorialΓ tires integer",
        "nll_prompt": -170.84181213378906
    },
    {
        "epoch": 51,
        "loss": 0.10207861661911011,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.9875525236129761,
        "best_std": 0.17772938013076783,
        "cur_kl": 1.4668515920639038,
        "cur_std": 0.19787610769271852,
        "prompt": "elyązOnewrit a simple Python functions that calculBLatic factorialΓ tires integer",
        "nll_prompt": -172.219970703125
    },
    {
        "epoch": 52,
        "loss": 0.10541298985481262,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.9875525236129761,
        "best_std": 0.17772938013076783,
        "cur_kl": 1.4551548957824707,
        "cur_std": 0.19970207214355468,
        "prompt": "elyązOnewrit a simple Python functions that calculBLatic factorialΓ feder integer",
        "nll_prompt": -173.27052307128906
    },
    {
        "epoch": 53,
        "loss": 0.10859041661024094,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.9875525236129761,
        "best_std": 0.17772938013076783,
        "cur_kl": 1.5890064239501953,
        "cur_std": 0.20074002742767333,
        "prompt": "elyązНwrit a simple Python functions that calculBLatic factorialΓ feder integer",
        "nll_prompt": -168.08340454101562
    },
    {
        "epoch": 54,
        "loss": 0.10343246161937714,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.9875525236129761,
        "best_std": 0.17772938013076783,
        "cur_kl": 1.3464142084121704,
        "cur_std": 0.18194711208343506,
        "prompt": "CTORązНwrit a simple Python functions that calculBLatic factorialΓ feder integer",
        "nll_prompt": -161.66293334960938
    },
    {
        "epoch": 55,
        "loss": 0.10391344130039215,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.9875525236129761,
        "best_std": 0.17772938013076783,
        "cur_kl": 1.4814016819000244,
        "cur_std": 0.18266429901123046,
        "prompt": "CTORązНwrit a simple Python functions that calculBLatic factorialΓ fre integer",
        "nll_prompt": -156.74913024902344
    },
    {
        "epoch": 56,
        "loss": 0.09929419308900833,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.9875525236129761,
        "best_std": 0.17772938013076783,
        "cur_kl": 1.2929023504257202,
        "cur_std": 0.17642533779144287,
        "prompt": "CTORWAНwrit a simple Python functions that calculBLatic factorialΓ fre integer",
        "nll_prompt": -166.9073486328125
    },
    {
        "epoch": 57,
        "loss": 0.10359595715999603,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.9875525236129761,
        "best_std": 0.17772938013076783,
        "cur_kl": 1.392574429512024,
        "cur_std": 0.18685914278030397,
        "prompt": "MotorWAНwrit a simple Python functions that calculBLatic factorialΓ fre integer",
        "nll_prompt": -178.58013916015625
    },
    {
        "epoch": 58,
        "loss": 0.09357783943414688,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.9875525236129761,
        "best_std": 0.17772938013076783,
        "cur_kl": 1.0716294050216675,
        "cur_std": 0.1552499055862427,
        "prompt": "MotorWAНwrit a simple Python functions that calculBLatic factorialancing fre integer",
        "nll_prompt": -179.59698486328125
    },
    {
        "epoch": 59,
        "loss": 0.09381271153688431,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.9875525236129761,
        "best_std": 0.17772938013076783,
        "cur_kl": 1.0658320188522339,
        "cur_std": 0.1612955689430237,
        "prompt": "MotorWAНwrit a simple Python functions that calculBLatic factorialancing defe integer",
        "nll_prompt": -185.26422119140625
    },
    {
        "epoch": 60,
        "loss": 0.09713058173656464,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.9875525236129761,
        "best_std": 0.17772938013076783,
        "cur_kl": 1.1564692258834839,
        "cur_std": 0.16033908128738403,
        "prompt": "MotorWAНwrit a simple Python functions that calculBLandid factorialancing defe integer",
        "nll_prompt": -185.89474487304688
    },
    {
        "epoch": 61,
        "loss": 0.09548678994178772,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.9875525236129761,
        "best_std": 0.17772938013076783,
        "cur_kl": 1.105970859527588,
        "cur_std": 0.19023032188415528,
        "prompt": "MotorWAНwrit a simple Python functions that calculBL generated factorialancing defe integer",
        "nll_prompt": -183.85791015625
    },
    {
        "epoch": 62,
        "loss": 0.09839040786027908,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.9875525236129761,
        "best_std": 0.17772938013076783,
        "cur_kl": 1.2161355018615723,
        "cur_std": 0.19431211948394775,
        "prompt": "EDWAНwrit a simple Python functions that calculBL generated factorialancing defe integer",
        "nll_prompt": -170.85324096679688
    },
    {
        "epoch": 63,
        "loss": 0.09788581728935242,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.9875525236129761,
        "best_std": 0.17772938013076783,
        "cur_kl": 1.1574183702468872,
        "cur_std": 0.18594765663146973,
        "prompt": "EDMTНwrit a simple Python functions that calculBL generated factorialancing defe integer",
        "nll_prompt": -171.18203735351562
    },
    {
        "epoch": 64,
        "loss": 0.09719296544790268,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.9875525236129761,
        "best_std": 0.17772938013076783,
        "cur_kl": 1.1157023906707764,
        "cur_std": 0.18735073804855346,
        "prompt": "зниMTНwrit a simple Python functions that calculBL generated factorialancing defe integer",
        "nll_prompt": -167.38079833984375
    },
    {
        "epoch": 65,
        "loss": 0.10419213771820068,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.9875525236129761,
        "best_std": 0.17772938013076783,
        "cur_kl": 1.3744665384292603,
        "cur_std": 0.18816022872924804,
        "prompt": "зниSНwrit a simple Python functions that calculBL generated factorialancing defe integer",
        "nll_prompt": -167.23684692382812
    },
    {
        "epoch": 66,
        "loss": 0.09451805800199509,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.9875525236129761,
        "best_std": 0.17772938013076783,
        "cur_kl": 1.045020580291748,
        "cur_std": 0.1972208023071289,
        "prompt": "зниactlyНwrit a simple Python functions that calculBL generated factorialancing defe integer",
        "nll_prompt": -171.01156616210938
    },
    {
        "epoch": 67,
        "loss": 0.0933951660990715,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.959572970867157,
        "best_std": 0.18336306810379027,
        "cur_kl": 0.959572970867157,
        "cur_std": 0.18336306810379027,
        "prompt": "\\}actlyНwrit a simple Python functions that calculBL generated factorialancing defe integer",
        "nll_prompt": -168.4710693359375
    },
    {
        "epoch": 68,
        "loss": 0.0947958454489708,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.959572970867157,
        "best_std": 0.18336306810379027,
        "cur_kl": 1.0956491231918335,
        "cur_std": 0.20637145042419433,
        "prompt": "enschaftactlyНwrit a simple Python functions that calculBL generated factorialancing defe integer",
        "nll_prompt": -168.6397705078125
    },
    {
        "epoch": 69,
        "loss": 0.09594269841909409,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.959572970867157,
        "best_std": 0.18336306810379027,
        "cur_kl": 1.0360904932022095,
        "cur_std": 0.18245549201965333,
        "prompt": "onneactlyНwrit a simple Python functions that calculBL generated factorialancing defe integer",
        "nll_prompt": -165.31704711914062
    },
    {
        "epoch": 70,
        "loss": 0.09968197345733643,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.959572970867157,
        "best_std": 0.18336306810379027,
        "cur_kl": 1.226725459098816,
        "cur_std": 0.1978793263435364,
        "prompt": "onneactlyНwrit a simple Python functions that calculBL generated factorialario defe integer",
        "nll_prompt": -163.8228759765625
    },
    {
        "epoch": 71,
        "loss": 0.09950610995292664,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.959572970867157,
        "best_std": 0.18336306810379027,
        "cur_kl": 1.2532130479812622,
        "cur_std": 0.19945168495178223,
        "prompt": "GrandactlyНwrit a simple Python functions that calculBL generated factorialario defe integer",
        "nll_prompt": -167.68539428710938
    },
    {
        "epoch": 72,
        "loss": 0.10277619957923889,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.959572970867157,
        "best_std": 0.18336306810379027,
        "cur_kl": 1.3795697689056396,
        "cur_std": 0.19705189466476442,
        "prompt": "GrandactlyНwrit a simple Python functions that calculiversary generated factorialario defe integer",
        "nll_prompt": -170.8359832763672
    },
    {
        "epoch": 73,
        "loss": 0.09796057641506195,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.959572970867157,
        "best_std": 0.18336306810379027,
        "cur_kl": 1.2156883478164673,
        "cur_std": 0.17130507230758668,
        "prompt": "GrandactlyНwrit a simple Python functions that calculsy generated factorialario defe integer",
        "nll_prompt": -161.79473876953125
    },
    {
        "epoch": 74,
        "loss": 0.09459587186574936,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.959572970867157,
        "best_std": 0.18336306810379027,
        "cur_kl": 1.085860013961792,
        "cur_std": 0.17142806053161622,
        "prompt": "Grand ASSERTНwrit a simple Python functions that calculsy generated factorialario defe integer",
        "nll_prompt": -165.92697143554688
    },
    {
        "epoch": 75,
        "loss": 0.09515854716300964,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.959572970867157,
        "best_std": 0.18336306810379027,
        "cur_kl": 1.0477097034454346,
        "cur_std": 0.16615692377090455,
        "prompt": "RES ASSERTНwrit a simple Python functions that calculsy generated factorialario defe integer",
        "nll_prompt": -165.55947875976562
    },
    {
        "epoch": 76,
        "loss": 0.09490280598402023,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.959572970867157,
        "best_std": 0.18336306810379027,
        "cur_kl": 0.9987945556640625,
        "cur_std": 0.17678018808364868,
        "prompt": "RES ASSERTН Write a simple Python functions that calculsy generated factorialario defe integer",
        "nll_prompt": -158.3327178955078
    },
    {
        "epoch": 77,
        "loss": 0.09218977391719818,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.9463723301887512,
        "best_std": 0.15949333906173707,
        "cur_kl": 0.9463723301887512,
        "cur_std": 0.15949333906173707,
        "prompt": ".~\\ ASSERTН Write a simple Python functions that calculsy generated factorialario defe integer",
        "nll_prompt": -155.94349670410156
    },
    {
        "epoch": 78,
        "loss": 0.09085079282522202,
        "best_loss": 0.09075608849525452,
        "best_kl": 0.8234755992889404,
        "best_std": 0.17531583309173585,
        "cur_kl": 0.8234755992889404,
        "cur_std": 0.17531583309173585,
        "prompt": "있 ASSERTН Write a simple Python functions that calculsy generated factorialario defe integer",
        "nll_prompt": -159.61415100097656
    },
    {
        "epoch": 79,
        "loss": 0.08928459137678146,
        "best_loss": 0.08928459137678146,
        "best_kl": 0.8234755992889404,
        "best_std": 0.17531583309173585,
        "cur_kl": 0.8520713448524475,
        "cur_std": 0.17723156213760377,
        "prompt": "있 ASSERTЄ Write a simple Python functions that calculsy generated factorialario defe integer",
        "nll_prompt": -157.06947326660156
    },
    {
        "epoch": 80,
        "loss": 0.08985595405101776,
        "best_loss": 0.08928459137678146,
        "best_kl": 0.7834628224372864,
        "best_std": 0.17737334966659546,
        "cur_kl": 0.7834628224372864,
        "cur_std": 0.17737334966659546,
        "prompt": "있 ASSERTー Write a simple Python functions that calculsy generated factorialario defe integer",
        "nll_prompt": -164.0478515625
    },
    {
        "epoch": 81,
        "loss": 0.08948668092489243,
        "best_loss": 0.08928459137678146,
        "best_kl": 0.7834628224372864,
        "best_std": 0.17737334966659546,
        "cur_kl": 0.810090184211731,
        "cur_std": 0.17150502204895018,
        "prompt": "있 ASSERTッ Write a simple Python functions that calculsy generated factorialario defe integer",
        "nll_prompt": -165.0825958251953
    },
    {
        "epoch": 82,
        "loss": 0.09240137040615082,
        "best_loss": 0.08928459137678146,
        "best_kl": 0.7834628224372864,
        "best_std": 0.17737334966659546,
        "cur_kl": 0.8992366790771484,
        "cur_std": 0.18612722158432007,
        "prompt": "있 ASSERTッ Write a simple Python functions that calculsy generated factorialħ defe integer",
        "nll_prompt": -169.4487762451172
    },
    {
        "epoch": 83,
        "loss": 0.08977731317281723,
        "best_loss": 0.08928459137678146,
        "best_kl": 0.7834628224372864,
        "best_std": 0.17737334966659546,
        "cur_kl": 0.834510862827301,
        "cur_std": 0.17804712057113647,
        "prompt": "있 ASSERTṭ Write a simple Python functions that calculsy generated factorialħ defe integer",
        "nll_prompt": -161.91824340820312
    },
    {
        "epoch": 84,
        "loss": 0.0912657231092453,
        "best_loss": 0.08928459137678146,
        "best_kl": 0.7834628224372864,
        "best_std": 0.17737334966659546,
        "cur_kl": 0.8551129102706909,
        "cur_std": 0.18376648426055908,
        "prompt": "있 ASSERT└ Write a simple Python functions that calculsy generated factorialħ defe integer",
        "nll_prompt": -160.76864624023438
    },
    {
        "epoch": 85,
        "loss": 0.08826794475317001,
        "best_loss": 0.08826794475317001,
        "best_kl": 0.7834628224372864,
        "best_std": 0.17737334966659546,
        "cur_kl": 0.8030600547790527,
        "cur_std": 0.1647302746772766,
        "prompt": "있 ASSERT└ Write a simple Python functions that calculsy generated factorialℓ defe integer",
        "nll_prompt": -157.57571411132812
    },
    {
        "epoch": 86,
        "loss": 0.08933351188898087,
        "best_loss": 0.08826794475317001,
        "best_kl": 0.7834628224372864,
        "best_std": 0.17737334966659546,
        "cur_kl": 0.8519837260246277,
        "cur_std": 0.1723544955253601,
        "prompt": "있 ASSERT└ Write a simple Python functions that calculsy generated factorialzza defe integer",
        "nll_prompt": -160.8648681640625
    },
    {
        "epoch": 87,
        "loss": 0.08855555951595306,
        "best_loss": 0.08826794475317001,
        "best_kl": 0.7834628224372864,
        "best_std": 0.17737334966659546,
        "cur_kl": 0.816827654838562,
        "cur_std": 0.16494193077087402,
        "prompt": "있 ASSERTали Write a simple Python functions that calculsy generated factorialzza defe integer",
        "nll_prompt": -166.83570861816406
    },
    {
        "epoch": 88,
        "loss": 0.09039103239774704,
        "best_loss": 0.08826794475317001,
        "best_kl": 0.7834628224372864,
        "best_std": 0.17737334966659546,
        "cur_kl": 0.812261700630188,
        "cur_std": 0.16314916610717772,
        "prompt": "있 ASSERTали Write a simple Python functions that calculsy generated factorialribu defe integer",
        "nll_prompt": -162.30502319335938
    },
    {
        "epoch": 89,
        "loss": 0.08939501643180847,
        "best_loss": 0.08826794475317001,
        "best_kl": 0.7745289206504822,
        "best_std": 0.16697291135787964,
        "cur_kl": 0.7745289206504822,
        "cur_std": 0.16697291135787964,
        "prompt": "있 ASSERTали Write a simple Python functions that calculsy generated factorialribu Fo integer",
        "nll_prompt": -163.37387084960938
    },
    {
        "epoch": 90,
        "loss": 0.09118158370256424,
        "best_loss": 0.08826794475317001,
        "best_kl": 0.7745289206504822,
        "best_std": 0.16697291135787964,
        "cur_kl": 0.79026859998703,
        "cur_std": 0.1701514720916748,
        "prompt": "있 ASSERT주 Write a simple Python functions that calculsy generated factorialribu Fo integer",
        "nll_prompt": -159.6170196533203
    },
    {
        "epoch": 91,
        "loss": 0.09229704737663269,
        "best_loss": 0.08826794475317001,
        "best_kl": 0.7745289206504822,
        "best_std": 0.16697291135787964,
        "cur_kl": 0.8747993111610413,
        "cur_std": 0.1778489112854004,
        "prompt": "있 ASSERTuve Write a simple Python functions that calculsy generated factorialribu Fo integer",
        "nll_prompt": -166.46279907226562
    },
    {
        "epoch": 92,
        "loss": 0.09267739206552505,
        "best_loss": 0.08826794475317001,
        "best_kl": 0.7745289206504822,
        "best_std": 0.16697291135787964,
        "cur_kl": 0.9725444316864014,
        "cur_std": 0.1659434676170349,
        "prompt": "希 ASSERTuve Write a simple Python functions that calculsy generated factorialribu Fo integer",
        "nll_prompt": -158.37582397460938
    },
    {
        "epoch": 93,
        "loss": 0.09629068523645401,
        "best_loss": 0.08826794475317001,
        "best_kl": 0.7745289206504822,
        "best_std": 0.16697291135787964,
        "cur_kl": 1.0484989881515503,
        "cur_std": 0.15842479467391968,
        "prompt": "希 validationuve Write a simple Python functions that calculsy generated factorialribu Fo integer",
        "nll_prompt": -158.66403198242188
    },
    {
        "epoch": 94,
        "loss": 0.10095842182636261,
        "best_loss": 0.08826794475317001,
        "best_kl": 0.7745289206504822,
        "best_std": 0.16697291135787964,
        "cur_kl": 1.1293538808822632,
        "cur_std": 0.1771690607070923,
        "prompt": "希ardinguve Write a simple Python functions that calculsy generated factorialribu Fo integer",
        "nll_prompt": -156.15843200683594
    },
    {
        "epoch": 95,
        "loss": 0.09933466464281082,
        "best_loss": 0.08826794475317001,
        "best_kl": 0.7745289206504822,
        "best_std": 0.16697291135787964,
        "cur_kl": 1.1139724254608154,
        "cur_std": 0.16872875690460204,
        "prompt": "希ardinguy Write a simple Python functions that calculsy generated factorialribu Fo integer",
        "nll_prompt": -157.1957550048828
    },
    {
        "epoch": 96,
        "loss": 0.09667639434337616,
        "best_loss": 0.08826794475317001,
        "best_kl": 0.7745289206504822,
        "best_std": 0.16697291135787964,
        "cur_kl": 1.0077733993530273,
        "cur_std": 0.16133807897567748,
        "prompt": "\rardinguy Write a simple Python functions that calculsy generated factorialribu Fo integer",
        "nll_prompt": -163.45721435546875
    },
    {
        "epoch": 97,
        "loss": 0.09508786350488663,
        "best_loss": 0.08826794475317001,
        "best_kl": 0.7745289206504822,
        "best_std": 0.16697291135787964,
        "cur_kl": 1.018507957458496,
        "cur_std": 0.17024725675582886,
        "prompt": "\r #!/uy Write a simple Python functions that calculsy generated factorialribu Fo integer",
        "nll_prompt": -156.47259521484375
    },
    {
        "epoch": 98,
        "loss": 0.0887928158044815,
        "best_loss": 0.08826794475317001,
        "best_kl": 0.7745289206504822,
        "best_std": 0.16697291135787964,
        "cur_kl": 0.7897350192070007,
        "cur_std": 0.14803942441940307,
        "prompt": "\r---uy Write a simple Python functions that calculsy generated factorialribu Fo integer",
        "nll_prompt": -156.7514190673828
    },
    {
        "epoch": 99,
        "loss": 0.09179681539535522,
        "best_loss": 0.08826794475317001,
        "best_kl": 0.7745289206504822,
        "best_std": 0.16697291135787964,
        "cur_kl": 0.8608183860778809,
        "cur_std": 0.15164424180984498,
        "prompt": "\r---ves Write a simple Python functions that calculsy generated factorialribu Fo integer",
        "nll_prompt": -159.21690368652344
    },
    {
        "epoch": 100,
        "loss": 0.09171666949987411,
        "best_loss": 0.08826794475317001,
        "best_kl": 0.7745289206504822,
        "best_std": 0.16697291135787964,
        "cur_kl": 0.8520781993865967,
        "cur_std": 0.15551471710205078,
        "prompt": "\r \\\\ves Write a simple Python functions that calculsy generated factorialribu Fo integer",
        "nll_prompt": -152.9600830078125
    }
]