[
    {
        "epoch": 1,
        "loss": 1.1056994199752808,
        "best_loss": 1.1056994199752808,
        "best_kl": 9.132608413696289,
        "best_std": 0.39134442806243896,
        "cur_kl": 9.132608413696289,
        "cur_std": 0.39134442806243896,
        "prompt": "Write a Python function that finds the longest common subsequence between two strings8",
        "nll_prompt": -2.3420560359954834
    },
    {
        "epoch": 2,
        "loss": 0.8865354657173157,
        "best_loss": 0.8865354657173157,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 7.6058220863342285,
        "cur_std": 0.3747695446014404,
        "prompt": " feud a Python function that finds the longest common subsequence between two strings8",
        "nll_prompt": -3.53690767288208
    },
    {
        "epoch": 3,
        "loss": 0.9270777702331543,
        "best_loss": 0.8865354657173157,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 7.703562259674072,
        "cur_std": 0.3943942070007324,
        "prompt": "EGIN a Python function that finds the longest common subsequence between two strings8",
        "nll_prompt": -3.4094479084014893
    },
    {
        "epoch": 4,
        "loss": 0.9503295421600342,
        "best_loss": 0.8865354657173157,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 9.273133277893066,
        "cur_std": 0.4182590007781982,
        "prompt": "EGIN a Python function that finds the longest common subsequencee two strings8",
        "nll_prompt": -4.883031845092773
    },
    {
        "epoch": 5,
        "loss": 0.9290581345558167,
        "best_loss": 0.8865354657173157,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 8.734824180603027,
        "cur_std": 0.40287461280822756,
        "prompt": "EGIN a Python function that finds the longest common subsequence on two strings8",
        "nll_prompt": -3.994662046432495
    },
    {
        "epoch": 6,
        "loss": 0.8811607956886292,
        "best_loss": 0.8811607956886292,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 9.405693054199219,
        "cur_std": 0.4248931884765625,
        "prompt": "EGIN a Python function that finds the longest common subsequence teacher two strings8",
        "nll_prompt": -5.143863201141357
    },
    {
        "epoch": 7,
        "loss": 0.9317402243614197,
        "best_loss": 0.8811607956886292,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 8.994478225708008,
        "cur_std": 0.37298760414123533,
        "prompt": " activism a Python function that finds the longest common subsequence teacher two strings8",
        "nll_prompt": -5.345180511474609
    },
    {
        "epoch": 8,
        "loss": 0.9637846350669861,
        "best_loss": 0.8811607956886292,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 8.373623847961426,
        "cur_std": 0.4143700122833252,
        "prompt": " Dear a Python function that finds the longest common subsequence teacher two strings8",
        "nll_prompt": -5.757814884185791
    },
    {
        "epoch": 9,
        "loss": 0.8529564738273621,
        "best_loss": 0.8529564738273621,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 8.56014347076416,
        "cur_std": 0.4113434314727783,
        "prompt": " Dear a Python function that finds the longest common subsequence any two strings8",
        "nll_prompt": -4.909976005554199
    },
    {
        "epoch": 10,
        "loss": 0.7616369724273682,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 8.948067665100098,
        "cur_std": 0.42167205810546876,
        "prompt": " Dear a Python function that finds the longest common subsequ landlord any two strings8",
        "nll_prompt": -6.195580959320068
    },
    {
        "epoch": 11,
        "loss": 0.890903890132904,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 11.964983940124512,
        "cur_std": 0.4589665412902832,
        "prompt": " Dear a Python function that finds the longest Wil subsequ landlord any two strings8",
        "nll_prompt": -8.647167205810547
    },
    {
        "epoch": 12,
        "loss": 1.0189781188964844,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 13.70389461517334,
        "cur_std": 0.48615403175354005,
        "prompt": " Dear a one function that finds the longest Wil subsequ landlord any two strings8",
        "nll_prompt": -9.027911186218262
    },
    {
        "epoch": 13,
        "loss": 1.0112923383712769,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 13.149883270263672,
        "cur_std": 0.4850307464599609,
        "prompt": " Dear a shared function that finds the longest Wil subsequ landlord any two strings8",
        "nll_prompt": -9.04218864440918
    },
    {
        "epoch": 14,
        "loss": 1.0546070337295532,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 15.009760856628418,
        "cur_std": 0.5210590362548828,
        "prompt": " Dear a shared function that finds the longest Wil subsequ landlordamboo two strings8",
        "nll_prompt": -9.9639892578125
    },
    {
        "epoch": 15,
        "loss": 1.0525965690612793,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 13.847776412963867,
        "cur_std": 0.4995237350463867,
        "prompt": " Dear a shared function that finds the longest Wil subsequ armamboo two strings8",
        "nll_prompt": -9.826624870300293
    },
    {
        "epoch": 16,
        "loss": 1.0359880924224854,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.513175964355469,
        "cur_std": 0.506184434890747,
        "prompt": " Dear a shared function that finds the longest Wil subsequ armamboo two strings27",
        "nll_prompt": -10.021832466125488
    },
    {
        "epoch": 17,
        "loss": 1.1387263536453247,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 15.275053024291992,
        "cur_std": 0.5058792114257813,
        "prompt": " Dear a shared function that finds the longest borders subsequ armamboo two strings27",
        "nll_prompt": -9.753308296203613
    },
    {
        "epoch": 18,
        "loss": 1.155985951423645,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 17.701244354248047,
        "cur_std": 0.4853955268859863,
        "prompt": " Dear a shared function that finds the longest borders subsequ armamboo two strings other",
        "nll_prompt": -9.171557426452637
    },
    {
        "epoch": 19,
        "loss": 1.1747101545333862,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 17.553300857543945,
        "cur_std": 0.49089536666870115,
        "prompt": " Dear a way function that finds the longest borders subsequ armamboo two strings other",
        "nll_prompt": -8.933155059814453
    },
    {
        "epoch": 20,
        "loss": 1.1084645986557007,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 16.621549606323242,
        "cur_std": 0.48883810043334963,
        "prompt": " Dear a way function that finds the longest borders subsequ arm hidden two strings other",
        "nll_prompt": -8.839805603027344
    },
    {
        "epoch": 21,
        "loss": 1.0510525703430176,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.720158576965332,
        "cur_std": 0.5230646133422852,
        "prompt": " Dear a way function that finds the longest borders subsequ arm hidden two strings outdoors",
        "nll_prompt": -9.26725959777832
    },
    {
        "epoch": 22,
        "loss": 1.171035647392273,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.98175048828125,
        "cur_std": 0.5425321102142334,
        "prompt": " Dear a their function that finds the longest borders subsequ arm hidden two strings outdoors",
        "nll_prompt": -9.599425315856934
    },
    {
        "epoch": 23,
        "loss": 1.1659599542617798,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 15.081256866455078,
        "cur_std": 0.5267798900604248,
        "prompt": " Dear a their function that finds the longest borders subsequ arm Th two strings outdoors",
        "nll_prompt": -9.932158470153809
    },
    {
        "epoch": 24,
        "loss": 1.093414306640625,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 15.451961517333984,
        "cur_std": 0.5026120185852051,
        "prompt": " Dear a their function that findsie longest borders subsequ arm Th two strings outdoors",
        "nll_prompt": -11.17200756072998
    },
    {
        "epoch": 25,
        "loss": 1.101986050605774,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 16.80975914001465,
        "cur_std": 0.5325971603393554,
        "prompt": " Dear a their function that findsie longest borders subsequ arm Th two strings nature",
        "nll_prompt": -11.052213668823242
    },
    {
        "epoch": 26,
        "loss": 1.2239346504211426,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 16.47160530090332,
        "cur_std": 0.5275177001953125,
        "prompt": " Dear Tu their function that findsie longest borders subsequ arm Th two strings nature",
        "nll_prompt": -11.280827522277832
    },
    {
        "epoch": 27,
        "loss": 1.04013192653656,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 15.566503524780273,
        "cur_std": 0.5189752578735352,
        "prompt": " Dear Tu their function that finds prost longest borders subsequ arm Th two strings nature",
        "nll_prompt": -11.39582347869873
    },
    {
        "epoch": 28,
        "loss": 1.1764694452285767,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 15.61435604095459,
        "cur_std": 0.4883247375488281,
        "prompt": " Dear Tu their function that finds prost longest borders subsequ arm Th two strings consistent",
        "nll_prompt": -11.328858375549316
    },
    {
        "epoch": 29,
        "loss": 1.1558164358139038,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.858230590820312,
        "cur_std": 0.5293395042419433,
        "prompt": " Dear inquiries their function that finds prost longest borders subsequ arm Th two strings consistent",
        "nll_prompt": -11.56888484954834
    },
    {
        "epoch": 30,
        "loss": 1.115879774093628,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.682870864868164,
        "cur_std": 0.5408641338348389,
        "prompt": " Dear inquiries their function that finds join longest borders subsequ arm Th two strings consistent",
        "nll_prompt": -10.889850616455078
    },
    {
        "epoch": 31,
        "loss": 1.0969563722610474,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.038858413696289,
        "cur_std": 0.5234371185302734,
        "prompt": " Dear inquiries their function that finds join longest� subsequ arm Th two strings consistent",
        "nll_prompt": -10.816327095031738
    },
    {
        "epoch": 32,
        "loss": 1.1370277404785156,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 15.928203582763672,
        "cur_std": 0.5343991279602051,
        "prompt": " Dear inquiries evidence function that finds join longest� subsequ arm Th two strings consistent",
        "nll_prompt": -11.072954177856445
    },
    {
        "epoch": 33,
        "loss": 1.1360169649124146,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 15.84780502319336,
        "cur_std": 0.5345560073852539,
        "prompt": " Dear inquiries evidence function that finds join longest� subsequ arm Th two strings lines",
        "nll_prompt": -11.005988121032715
    },
    {
        "epoch": 34,
        "loss": 1.1492971181869507,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.4159517288208,
        "cur_std": 0.5021926879882812,
        "prompt": " Dear Provide evidence function that finds join longest� subsequ arm Th two strings lines",
        "nll_prompt": -10.721537590026855
    },
    {
        "epoch": 35,
        "loss": 1.1421666145324707,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 15.094399452209473,
        "cur_std": 0.5226054668426514,
        "prompt": " Dear Provide evidence function that finds join longest only subsequ arm Th two strings lines",
        "nll_prompt": -10.582202911376953
    },
    {
        "epoch": 36,
        "loss": 1.0237208604812622,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.73275089263916,
        "cur_std": 0.5478697299957276,
        "prompt": " Dear Provide evidence function that achieve join longest only subsequ arm Th two strings lines",
        "nll_prompt": -10.847233772277832
    },
    {
        "epoch": 37,
        "loss": 1.1313672065734863,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 13.9081392288208,
        "cur_std": 0.5169741630554199,
        "prompt": " whims Provide evidence function that achieve join longest only subsequ arm Th two strings lines",
        "nll_prompt": -10.705371856689453
    },
    {
        "epoch": 38,
        "loss": 0.9823093414306641,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 12.75930118560791,
        "cur_std": 0.48042945861816405,
        "prompt": " whims Provide evidence function that achieve join longestin subsequ arm Th two strings lines",
        "nll_prompt": -10.791468620300293
    },
    {
        "epoch": 39,
        "loss": 1.0514124631881714,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 12.336880683898926,
        "cur_std": 0.4931620121002197,
        "prompt": " whims Provide evidence function that achieve join longestin subsequ arm book two strings lines",
        "nll_prompt": -10.540112495422363
    },
    {
        "epoch": 40,
        "loss": 1.020576000213623,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 12.82341194152832,
        "cur_std": 0.5027845859527588,
        "prompt": " whims Provide evidence function that achieve join longestin subsequ arm Benef two strings lines",
        "nll_prompt": -11.364097595214844
    },
    {
        "epoch": 41,
        "loss": 1.0516222715377808,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 12.97096061706543,
        "cur_std": 0.5290467262268066,
        "prompt": " whims Provide evidence function that achieve join longestin subsequ arm之 two strings lines",
        "nll_prompt": -10.801197052001953
    },
    {
        "epoch": 42,
        "loss": 1.0275554656982422,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 11.974836349487305,
        "cur_std": 0.49448285102844236,
        "prompt": " whims Provide evidence function that achieve join longestin subsequ armial two strings lines",
        "nll_prompt": -10.06789493560791
    },
    {
        "epoch": 43,
        "loss": 1.0944453477859497,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 11.422330856323242,
        "cur_std": 0.4576276779174805,
        "prompt": " whims Provide evidence function that achieve join longestin subsequ armial two strings functions",
        "nll_prompt": -9.86476993560791
    },
    {
        "epoch": 44,
        "loss": 1.0931570529937744,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 12.679557800292969,
        "cur_std": 0.4914304256439209,
        "prompt": " whims Provide evidence function that achieve join longestin subsequ armial'? strings functions",
        "nll_prompt": -11.255955696105957
    },
    {
        "epoch": 45,
        "loss": 1.1025694608688354,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 15.176044464111328,
        "cur_std": 0.5130510330200195,
        "prompt": " whims Provide evidence functionBS achieve join longestin subsequ armial'? strings functions",
        "nll_prompt": -12.47230052947998
    },
    {
        "epoch": 46,
        "loss": 1.1954066753387451,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 15.14311695098877,
        "cur_std": 0.4965984344482422,
        "prompt": " whims Provide evidence function; achieve join longestin subsequ armial'? strings functions",
        "nll_prompt": -11.320116996765137
    },
    {
        "epoch": 47,
        "loss": 1.146185040473938,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.370247840881348,
        "cur_std": 0.4833897590637207,
        "prompt": " whims Provide evidence function; achievelling longestin subsequ armial'? strings functions",
        "nll_prompt": -11.528002738952637
    },
    {
        "epoch": 48,
        "loss": 1.159977674484253,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 15.040327072143555,
        "cur_std": 0.535075044631958,
        "prompt": " whims Provide evidence function; achievelling longestin subsequ bookingial'? strings functions",
        "nll_prompt": -12.115204811096191
    },
    {
        "epoch": 49,
        "loss": 0.9936213493347168,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.724681854248047,
        "cur_std": 0.5135651588439941,
        "prompt": " whims Provide evidence functionP achievelling longestin subsequ bookingial'? strings functions",
        "nll_prompt": -12.64545726776123
    },
    {
        "epoch": 50,
        "loss": 1.0557372570037842,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.040435791015625,
        "cur_std": 0.4876535892486572,
        "prompt": " whims Provide defining functionP achievelling longestin subsequ bookingial'? strings functions",
        "nll_prompt": -12.609556198120117
    },
    {
        "epoch": 51,
        "loss": 1.1305348873138428,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.537919998168945,
        "cur_std": 0.5101971626281738,
        "prompt": " whims Provide defining functionP achievelling longestin subsequ monumentsial'? strings functions",
        "nll_prompt": -12.16468620300293
    },
    {
        "epoch": 52,
        "loss": 1.0052342414855957,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.051383972167969,
        "cur_std": 0.5405413627624511,
        "prompt": " whims Provide defining functionl achievelling longestin subsequ monumentsial'? strings functions",
        "nll_prompt": -12.159076690673828
    },
    {
        "epoch": 53,
        "loss": 1.1562384366989136,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 13.808442115783691,
        "cur_std": 0.5063901424407959,
        "prompt": " whims Provide defining functionl achievelling longest sharing subsequ monumentsial'? strings functions",
        "nll_prompt": -12.25260066986084
    },
    {
        "epoch": 54,
        "loss": 1.0636448860168457,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.076666831970215,
        "cur_std": 0.5034842014312744,
        "prompt": " whims Provide defining functionl achieve person longest sharing subsequ monumentsial'? strings functions",
        "nll_prompt": -12.44071102142334
    },
    {
        "epoch": 55,
        "loss": 1.0569868087768555,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.452316284179688,
        "cur_std": 0.5673225402832032,
        "prompt": " whims Provide defining functionl achieve person longest poem subsequ monumentsial'? strings functions",
        "nll_prompt": -12.371073722839355
    },
    {
        "epoch": 56,
        "loss": 1.1019843816757202,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.2921142578125,
        "cur_std": 0.5757858753204346,
        "prompt": " whims Provide defining functionl achieve person longest poem subsequ monuments sent'? strings functions",
        "nll_prompt": -12.513599395751953
    },
    {
        "epoch": 57,
        "loss": 1.1664073467254639,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 13.608128547668457,
        "cur_std": 0.5359220981597901,
        "prompt": " whims Provide defining functionl achieve person longest poem subsequ One sent'? strings functions",
        "nll_prompt": -12.372907638549805
    },
    {
        "epoch": 58,
        "loss": 1.0637452602386475,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 13.785062789916992,
        "cur_std": 0.5542518138885498,
        "prompt": " whims Provide defining functionl achieve � longest poem subsequ One sent'? strings functions",
        "nll_prompt": -13.186868667602539
    },
    {
        "epoch": 59,
        "loss": 1.0565762519836426,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.41231918334961,
        "cur_std": 0.5295797348022461,
        "prompt": " whims Provide defining�l achieve � longest poem subsequ One sent'? strings functions",
        "nll_prompt": -13.521421432495117
    },
    {
        "epoch": 60,
        "loss": 1.0594985485076904,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.086400985717773,
        "cur_std": 0.5565073490142822,
        "prompt": " whims Provide defining� lowest achieve � longest poem subsequ One sent'? strings functions",
        "nll_prompt": -14.03324031829834
    },
    {
        "epoch": 61,
        "loss": 1.0002949237823486,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 15.556109428405762,
        "cur_std": 0.5765827655792236,
        "prompt": " whims Provide defining�=== achieve � longest poem subsequ One sent'? strings functions",
        "nll_prompt": -13.99173641204834
    },
    {
        "epoch": 62,
        "loss": 1.0896415710449219,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 13.96042251586914,
        "cur_std": 0.5855714321136475,
        "prompt": " whims Provide defining� missing achieve � longest poem subsequ One sent'? strings functions",
        "nll_prompt": -13.766782760620117
    },
    {
        "epoch": 63,
        "loss": 1.1615509986877441,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.835346221923828,
        "cur_std": 0.5905556201934814,
        "prompt": " whims Provide definingj missing achieve � longest poem subsequ One sent'? strings functions",
        "nll_prompt": -13.673545837402344
    },
    {
        "epoch": 64,
        "loss": 1.018720030784607,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.131376266479492,
        "cur_std": 0.6014887809753418,
        "prompt": " whims Provide linej missing achieve � longest poem subsequ One sent'? strings functions",
        "nll_prompt": -13.27187442779541
    },
    {
        "epoch": 65,
        "loss": 0.999383807182312,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.41983413696289,
        "cur_std": 0.6046791076660156,
        "prompt": " whims Provide linej missing achieve Brief longest poem subsequ One sent'? strings functions",
        "nll_prompt": -12.77631950378418
    },
    {
        "epoch": 66,
        "loss": 1.0698975324630737,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.603753089904785,
        "cur_std": 0.5726090908050537,
        "prompt": " whims Provide linej missing achieve Brief longest poem subsequ OneArch'? strings functions",
        "nll_prompt": -13.145901679992676
    },
    {
        "epoch": 67,
        "loss": 1.1256163120269775,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 15.041010856628418,
        "cur_std": 0.5657369136810303,
        "prompt": " whims Providearrayj missing achieve Brief longest poem subsequ OneArch'? strings functions",
        "nll_prompt": -13.599462509155273
    },
    {
        "epoch": 68,
        "loss": 1.0448992252349854,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.63195514678955,
        "cur_std": 0.5808805465698242,
        "prompt": " whims Providearrayj missing achieve Brief longest poem subsequ One middle'? strings functions",
        "nll_prompt": -13.159988403320312
    },
    {
        "epoch": 69,
        "loss": 1.083967924118042,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.081887245178223,
        "cur_std": 0.5775251865386963,
        "prompt": " whims Providearrayj missing achieve Brief longest poem subsequost middle'? strings functions",
        "nll_prompt": -12.83881664276123
    },
    {
        "epoch": 70,
        "loss": 1.103135585784912,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 13.491735458374023,
        "cur_std": 0.5743167400360107,
        "prompt": " whims Provide 2j missing achieve Brief longest poem subsequost middle'? strings functions",
        "nll_prompt": -12.372172355651855
    },
    {
        "epoch": 71,
        "loss": 1.119612216949463,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 13.330103874206543,
        "cur_std": 0.5722419738769531,
        "prompt": " whims Provide 2j missing achieve Brief longest poem subsequ ones middle'? strings functions",
        "nll_prompt": -12.44564151763916
    },
    {
        "epoch": 72,
        "loss": 1.1941821575164795,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.882121086120605,
        "cur_std": 0.5470604419708252,
        "prompt": " whims Provide 2 at missing achieve Brief longest poem subsequ ones middle'? strings functions",
        "nll_prompt": -12.409424781799316
    },
    {
        "epoch": 73,
        "loss": 1.013512134552002,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.754239082336426,
        "cur_std": 0.5856365203857422,
        "prompt": " whims Provide 2Water missing achieve Brief longest poem subsequ ones middle'? strings functions",
        "nll_prompt": -12.818949699401855
    },
    {
        "epoch": 74,
        "loss": 1.1566814184188843,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 15.843234062194824,
        "cur_std": 0.5380674839019776,
        "prompt": " whims Provide 2Water be achieve Brief longest poem subsequ ones middle'? strings functions",
        "nll_prompt": -12.982178688049316
    },
    {
        "epoch": 75,
        "loss": 1.0487325191497803,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 13.749650955200195,
        "cur_std": 0.5136734008789062,
        "prompt": " whims Provide 2 logic be achieve Brief longest poem subsequ ones middle'? strings functions",
        "nll_prompt": -12.365901947021484
    },
    {
        "epoch": 76,
        "loss": 1.0074504613876343,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 13.094260215759277,
        "cur_std": 0.5267308235168457,
        "prompt": " whims Provide 2 logic be achieve Brief longest poem subsequ ones mor'? strings functions",
        "nll_prompt": -12.442249298095703
    },
    {
        "epoch": 77,
        "loss": 1.1662746667861938,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.551186561584473,
        "cur_std": 0.4952384471893311,
        "prompt": " whims Provide 2 logic be achieve Brief longest720 subsequ ones mor'? strings functions",
        "nll_prompt": -12.54549503326416
    },
    {
        "epoch": 78,
        "loss": 1.0839909315109253,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 15.107975959777832,
        "cur_std": 0.485899829864502,
        "prompt": " whims Provide 2 logic be achieve Brief longest720 subsequ ones journey'? strings functions",
        "nll_prompt": -12.697606086730957
    },
    {
        "epoch": 79,
        "loss": 1.1314682960510254,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 15.82030963897705,
        "cur_std": 0.5339537143707276,
        "prompt": " whims Provide 2 logic be achieve Brief longest720 subsequ ones journey� strings functions",
        "nll_prompt": -12.66126823425293
    },
    {
        "epoch": 80,
        "loss": 1.131929874420166,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.71580982208252,
        "cur_std": 0.5135933876037597,
        "prompt": " whims Provide 2 logic be achieve Brief longest720 subsequ something journey� strings functions",
        "nll_prompt": -12.405192375183105
    },
    {
        "epoch": 81,
        "loss": 1.0865744352340698,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 13.514932632446289,
        "cur_std": 0.524797010421753,
        "prompt": " whims Provide 2 logic be achieve Brief longest cartoon subsequ something journey� strings functions",
        "nll_prompt": -12.672447204589844
    },
    {
        "epoch": 82,
        "loss": 1.0510106086730957,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 13.83759593963623,
        "cur_std": 0.5249405860900879,
        "prompt": " whims Provide 2 logic be achieve Brief longest cartoon subsequ something journey� strings functions",
        "nll_prompt": -13.124873161315918
    },
    {
        "epoch": 83,
        "loss": 1.1186171770095825,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 12.354191780090332,
        "cur_std": 0.50431227684021,
        "prompt": " whims Provide 2 logic be achieve Brief longest cartoon subsequ something journey both strings functions",
        "nll_prompt": -12.095128059387207
    },
    {
        "epoch": 84,
        "loss": 1.072013258934021,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 14.040850639343262,
        "cur_std": 0.49588351249694823,
        "prompt": " whims Provide 2 logic be achieve Brief longest cartoon subsequ something journey both strings right",
        "nll_prompt": -12.057181358337402
    },
    {
        "epoch": 85,
        "loss": 1.1364136934280396,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 12.895397186279297,
        "cur_std": 0.5048941612243653,
        "prompt": " whims Provide 2 logic be achieve Brief longest cartoon subsequ something journey both strings comparisons",
        "nll_prompt": -12.240217208862305
    },
    {
        "epoch": 86,
        "loss": 1.076123595237732,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 12.981224060058594,
        "cur_std": 0.5266107082366943,
        "prompt": " whims Provide 2 logic be achieve Brief longest cartoon subsequorn journey both strings comparisons",
        "nll_prompt": -12.29371452331543
    },
    {
        "epoch": 87,
        "loss": 1.011260747909546,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 13.706871032714844,
        "cur_std": 0.517793846130371,
        "prompt": " whims Provide 2 logic be achieve Brief longest cartoon subsequ Elvis journey both strings comparisons",
        "nll_prompt": -12.637250900268555
    },
    {
        "epoch": 88,
        "loss": 1.1501342058181763,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 13.570849418640137,
        "cur_std": 0.5021040439605713,
        "prompt": " whims Provide 2 logic be achieve Brief longest cartoon subsequ � journey both strings comparisons",
        "nll_prompt": -12.94350528717041
    },
    {
        "epoch": 89,
        "loss": 1.0663020610809326,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 12.961105346679688,
        "cur_std": 0.5399399280548096,
        "prompt": " whims Provide 2 logic be achieve Brief longest cartoon subsequtake journey both strings comparisons",
        "nll_prompt": -12.347715377807617
    },
    {
        "epoch": 90,
        "loss": 0.9250308275222778,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 12.916743278503418,
        "cur_std": 0.4740598201751709,
        "prompt": " whims Provide 2 logic be achieve Brief longest layer subsequtake journey both strings comparisons",
        "nll_prompt": -11.771122932434082
    },
    {
        "epoch": 91,
        "loss": 0.9707794785499573,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 12.958537101745605,
        "cur_std": 0.4952865123748779,
        "prompt": " whims Provide 2 logic be achieve Brief longest layer subsequtake journey both strings enhancements",
        "nll_prompt": -12.21699333190918
    },
    {
        "epoch": 92,
        "loss": 1.058337926864624,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 13.285683631896973,
        "cur_std": 0.4976829528808594,
        "prompt": " whims Provide 2 logic be achieve Brief longest layer subsequtake journey both strings application",
        "nll_prompt": -11.934070587158203
    },
    {
        "epoch": 93,
        "loss": 1.0940372943878174,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 12.416156768798828,
        "cur_std": 0.4871086120605469,
        "prompt": " whims Provide 2 logic be achieve Brief longest layer subsequtake journey both strings solution",
        "nll_prompt": -11.570231437683105
    },
    {
        "epoch": 94,
        "loss": 1.036612868309021,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 12.963924407958984,
        "cur_std": 0.48612251281738283,
        "prompt": " whims Provide 2 logic be achieve Brief longest layer subsequtaketer both strings solution",
        "nll_prompt": -11.71147346496582
    },
    {
        "epoch": 95,
        "loss": 1.1256808042526245,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 11.573176383972168,
        "cur_std": 0.43027677536010744,
        "prompt": " whims Provide 2 logic be achieve Brief longest layer subsequtaketer both strings?\"",
        "nll_prompt": -11.666828155517578
    },
    {
        "epoch": 96,
        "loss": 0.9371194243431091,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 11.574650764465332,
        "cur_std": 0.4461807727813721,
        "prompt": " whims Provide 2 logic be achieve Brief longest Paraly subsequtaketer both strings?\"",
        "nll_prompt": -12.49125862121582
    },
    {
        "epoch": 97,
        "loss": 1.0337448120117188,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 12.30194091796875,
        "cur_std": 0.4440279006958008,
        "prompt": " whims Provide� logic be achieve Brief longest Paraly subsequtaketer both strings?\"",
        "nll_prompt": -12.581478118896484
    },
    {
        "epoch": 98,
        "loss": 1.0539343357086182,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 11.733139038085938,
        "cur_std": 0.45647659301757815,
        "prompt": " whims Provide suitable logic be achieve Brief longest Paraly subsequtaketer both strings?\"",
        "nll_prompt": -12.292163848876953
    },
    {
        "epoch": 99,
        "loss": 0.9831750988960266,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 11.18593978881836,
        "cur_std": 0.4042031288146973,
        "prompt": " whims Provide suitable logic be achieve Brief longestc subsequtaketer both strings?\"",
        "nll_prompt": -11.275556564331055
    },
    {
        "epoch": 100,
        "loss": 1.0307577848434448,
        "best_loss": 0.7616369724273682,
        "best_kl": 7.6058220863342285,
        "best_std": 0.3747695446014404,
        "cur_kl": 11.525724411010742,
        "cur_std": 0.4236313819885254,
        "prompt": " whims Provide while logic be achieve Brief longestc subsequtaketer both strings?\"",
        "nll_prompt": -11.109589576721191
    }
]