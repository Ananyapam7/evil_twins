[
    {
        "epoch": 1,
        "loss": 1.4225504398345947,
        "best_loss": 1.4225504398345947,
        "best_kl": 26.379892349243164,
        "best_std": 0.7803657054901123,
        "cur_kl": 26.379892349243164,
        "cur_std": 0.7803657054901123,
        "prompt": "You are an assistant that helps people write code. tear a Python solution for",
        "nll_prompt": -5.720463275909424
    },
    {
        "epoch": 2,
        "loss": 1.4929081201553345,
        "best_loss": 1.4225504398345947,
        "best_kl": 24.963783264160156,
        "best_std": 0.7697495937347412,
        "cur_kl": 24.963783264160156,
        "cur_std": 0.7697495937347412,
        "prompt": "You are an assistant that helps read write code. tear a Python solution for",
        "nll_prompt": -6.6259942054748535
    },
    {
        "epoch": 3,
        "loss": 1.3336608409881592,
        "best_loss": 1.3336608409881592,
        "best_kl": 20.25875473022461,
        "best_std": 0.8125566482543946,
        "cur_kl": 20.25875473022461,
        "cur_std": 0.8125566482543946,
        "prompt": "You are an assistant that helps read write code. tear a Python solution`",
        "nll_prompt": -7.050099849700928
    },
    {
        "epoch": 4,
        "loss": 1.164724588394165,
        "best_loss": 1.164724588394165,
        "best_kl": 19.83871078491211,
        "best_std": 0.7806392192840577,
        "cur_kl": 19.83871078491211,
        "cur_std": 0.7806392192840577,
        "prompt": "You are an is that helps read write code. tear a Python solution`",
        "nll_prompt": -7.698374271392822
    },
    {
        "epoch": 5,
        "loss": 1.198912501335144,
        "best_loss": 1.164724588394165,
        "best_kl": 18.047679901123047,
        "best_std": 0.8020402908325195,
        "cur_kl": 18.047679901123047,
        "cur_std": 0.8020402908325195,
        "prompt": "You are an ball that helps read write code. tear a Python solution`",
        "nll_prompt": -7.793910503387451
    },
    {
        "epoch": 6,
        "loss": 1.2102394104003906,
        "best_loss": 1.164724588394165,
        "best_kl": 18.047679901123047,
        "best_std": 0.8020402908325195,
        "cur_kl": 19.073444366455078,
        "cur_std": 0.8254575729370117,
        "prompt": "You arenot ball that helps read write code. tear a Python solution`",
        "nll_prompt": -8.627735137939453
    },
    {
        "epoch": 7,
        "loss": 1.3028289079666138,
        "best_loss": 1.164724588394165,
        "best_kl": 18.047679901123047,
        "best_std": 0.8020402908325195,
        "cur_kl": 19.32406234741211,
        "cur_std": 0.8633655548095703,
        "prompt": "You arenotmol that helps read write code. tear a Python solution`",
        "nll_prompt": -8.596972465515137
    },
    {
        "epoch": 8,
        "loss": 1.1279983520507812,
        "best_loss": 1.1279983520507812,
        "best_kl": 18.047679901123047,
        "best_std": 0.8020402908325195,
        "cur_kl": 19.252824783325195,
        "cur_std": 0.8388886451721191,
        "prompt": "You are wishesmol that helps read write code. tear a Python solution`",
        "nll_prompt": -9.026752471923828
    },
    {
        "epoch": 9,
        "loss": 1.183146357536316,
        "best_loss": 1.1279983520507812,
        "best_kl": 18.047679901123047,
        "best_std": 0.8020402908325195,
        "cur_kl": 19.439640045166016,
        "cur_std": 0.8686630249023437,
        "prompt": "You are wishesmol Too helps read write code. tear a Python solution`",
        "nll_prompt": -9.677544593811035
    },
    {
        "epoch": 10,
        "loss": 1.2931181192398071,
        "best_loss": 1.1279983520507812,
        "best_kl": 18.047679901123047,
        "best_std": 0.8020402908325195,
        "cur_kl": 18.881643295288086,
        "cur_std": 0.8905705451965332,
        "prompt": "You are wishesmol Too helps read write code.al a Python solution`",
        "nll_prompt": -9.583388328552246
    },
    {
        "epoch": 11,
        "loss": 1.2349638938903809,
        "best_loss": 1.1279983520507812,
        "best_kl": 17.987878799438477,
        "best_std": 0.8693510055541992,
        "cur_kl": 17.987878799438477,
        "cur_std": 0.8693510055541992,
        "prompt": " Mer are wishesmol Too helps read write code.al a Python solution`",
        "nll_prompt": -10.119040489196777
    },
    {
        "epoch": 12,
        "loss": 1.3315503597259521,
        "best_loss": 1.1279983520507812,
        "best_kl": 17.987878799438477,
        "best_std": 0.8693510055541992,
        "cur_kl": 18.180423736572266,
        "cur_std": 0.8780081748962403,
        "prompt": " Mer are wishesmol Too helps read write code_.al a Python solution`",
        "nll_prompt": -10.982389450073242
    },
    {
        "epoch": 13,
        "loss": 1.279065728187561,
        "best_loss": 1.1279983520507812,
        "best_kl": 17.973493576049805,
        "best_std": 0.8895214080810547,
        "cur_kl": 17.973493576049805,
        "cur_std": 0.8895214080810547,
        "prompt": " Mer are wishesmol Too helps read write remaining_.al a Python solution`",
        "nll_prompt": -11.30196475982666
    },
    {
        "epoch": 14,
        "loss": 1.2905514240264893,
        "best_loss": 1.1279983520507812,
        "best_kl": 17.662595748901367,
        "best_std": 0.8327022552490234,
        "cur_kl": 17.662595748901367,
        "cur_std": 0.8327022552490234,
        "prompt": " Mer are wishesmol Too helps read write rightful_.al a Python solution`",
        "nll_prompt": -11.523411750793457
    },
    {
        "epoch": 15,
        "loss": 1.0862512588500977,
        "best_loss": 1.0862512588500977,
        "best_kl": 16.982534408569336,
        "best_std": 0.8322658538818359,
        "cur_kl": 16.982534408569336,
        "cur_std": 0.8322658538818359,
        "prompt": " Mer are wishesmol Too helps read write rightfulehal a Python solution`",
        "nll_prompt": -11.17127799987793
    },
    {
        "epoch": 16,
        "loss": 1.184450387954712,
        "best_loss": 1.0862512588500977,
        "best_kl": 16.426910400390625,
        "best_std": 0.8395092010498046,
        "cur_kl": 16.426910400390625,
        "cur_std": 0.8395092010498046,
        "prompt": " Mer are Lemol Too helps read write rightfulehal a Python solution`",
        "nll_prompt": -11.605494499206543
    },
    {
        "epoch": 17,
        "loss": 1.2119196653366089,
        "best_loss": 1.0862512588500977,
        "best_kl": 16.426910400390625,
        "best_std": 0.8395092010498046,
        "cur_kl": 17.144508361816406,
        "cur_std": 0.8173923492431641,
        "prompt": " Mer are Le action Too helps read write rightfulehal a Python solution`",
        "nll_prompt": -11.423603057861328
    },
    {
        "epoch": 18,
        "loss": 1.1849822998046875,
        "best_loss": 1.0862512588500977,
        "best_kl": 16.426910400390625,
        "best_std": 0.8395092010498046,
        "cur_kl": 17.122032165527344,
        "cur_std": 0.7495490550994873,
        "prompt": " Mer are Le action Too rear read write rightfulehal a Python solution`",
        "nll_prompt": -11.88851261138916
    },
    {
        "epoch": 19,
        "loss": 1.210822582244873,
        "best_loss": 1.0862512588500977,
        "best_kl": 16.426910400390625,
        "best_std": 0.8395092010498046,
        "cur_kl": 16.857221603393555,
        "cur_std": 0.7885671615600586,
        "prompt": " Mer are Le action Too rear read write rightfulehalae Python solution`",
        "nll_prompt": -11.974750518798828
    },
    {
        "epoch": 20,
        "loss": 1.1626505851745605,
        "best_loss": 1.0862512588500977,
        "best_kl": 15.848276138305664,
        "best_std": 0.8200974464416504,
        "cur_kl": 15.848276138305664,
        "cur_std": 0.8200974464416504,
        "prompt": " Mer are Le Ant Too rear read write rightfulehalae Python solution`",
        "nll_prompt": -11.665576934814453
    },
    {
        "epoch": 21,
        "loss": 1.1245683431625366,
        "best_loss": 1.0862512588500977,
        "best_kl": 15.848276138305664,
        "best_std": 0.8200974464416504,
        "cur_kl": 16.530651092529297,
        "cur_std": 0.9058395385742187,
        "prompt": " Mer are Le Ant Too rear read write Aminehalae Python solution`",
        "nll_prompt": -11.41429328918457
    },
    {
        "epoch": 22,
        "loss": 1.1913865804672241,
        "best_loss": 1.0862512588500977,
        "best_kl": 15.848276138305664,
        "best_std": 0.8200974464416504,
        "cur_kl": 17.2550048828125,
        "cur_std": 0.8126532554626464,
        "prompt": " Mer are Le Ant Too rear read write Aminehalae placeholder solution`",
        "nll_prompt": -11.646489143371582
    },
    {
        "epoch": 23,
        "loss": 1.1718517541885376,
        "best_loss": 1.0862512588500977,
        "best_kl": 15.848276138305664,
        "best_std": 0.8200974464416504,
        "cur_kl": 16.367408752441406,
        "cur_std": 0.7952153205871582,
        "prompt": " Mer are Le Ant Too rear read writeompehalae placeholder solution`",
        "nll_prompt": -12.018400192260742
    },
    {
        "epoch": 24,
        "loss": 1.2409213781356812,
        "best_loss": 1.0862512588500977,
        "best_kl": 15.848276138305664,
        "best_std": 0.8200974464416504,
        "cur_kl": 16.499004364013672,
        "cur_std": 0.8469720840454101,
        "prompt": " Mer Hill Le Ant Too rear read writeompehalae placeholder solution`",
        "nll_prompt": -11.529905319213867
    },
    {
        "epoch": 25,
        "loss": 1.246675729751587,
        "best_loss": 1.0862512588500977,
        "best_kl": 15.848276138305664,
        "best_std": 0.8200974464416504,
        "cur_kl": 17.279924392700195,
        "cur_std": 0.748688793182373,
        "prompt": " Mer Hill Le Ant Too rear read writeompehalae placeholder.'\"`",
        "nll_prompt": -11.825071334838867
    },
    {
        "epoch": 26,
        "loss": 1.3100788593292236,
        "best_loss": 1.0862512588500977,
        "best_kl": 15.848276138305664,
        "best_std": 0.8200974464416504,
        "cur_kl": 16.616178512573242,
        "cur_std": 0.7302029609680176,
        "prompt": " Merw Le Ant Too rear read writeompehalae placeholder.'\"`",
        "nll_prompt": -11.548462867736816
    },
    {
        "epoch": 27,
        "loss": 1.226863145828247,
        "best_loss": 1.0862512588500977,
        "best_kl": 15.848276138305664,
        "best_std": 0.8200974464416504,
        "cur_kl": 16.538406372070312,
        "cur_std": 0.7408888816833497,
        "prompt": " Merw Le Ant Too rear read writeompehalLE placeholder.'\"`",
        "nll_prompt": -11.808484077453613
    },
    {
        "epoch": 28,
        "loss": 1.1760756969451904,
        "best_loss": 1.0862512588500977,
        "best_kl": 15.848276138305664,
        "best_std": 0.8200974464416504,
        "cur_kl": 16.66790199279785,
        "cur_std": 0.7306345939636231,
        "prompt": " Merw Le bot Too rear read writeompehalLE placeholder.'\"`",
        "nll_prompt": -11.429950714111328
    },
    {
        "epoch": 29,
        "loss": 1.1835322380065918,
        "best_loss": 1.0862512588500977,
        "best_kl": 14.91159725189209,
        "best_std": 0.7023706436157227,
        "cur_kl": 14.91159725189209,
        "cur_std": 0.7023706436157227,
        "prompt": " Merw Le bot Too rear read writeomperialalLE placeholder.'\"`",
        "nll_prompt": -11.354703903198242
    },
    {
        "epoch": 30,
        "loss": 1.1728850603103638,
        "best_loss": 1.0862512588500977,
        "best_kl": 14.34324836730957,
        "best_std": 0.6864148139953613,
        "cur_kl": 14.34324836730957,
        "cur_std": 0.6864148139953613,
        "prompt": " Merw Le bot Too rear read writeomperialalLE toy.'\"`",
        "nll_prompt": -11.025547981262207
    },
    {
        "epoch": 31,
        "loss": 1.0201760530471802,
        "best_loss": 1.0201760530471802,
        "best_kl": 13.686976432800293,
        "best_std": 0.71219801902771,
        "cur_kl": 13.686976432800293,
        "cur_std": 0.71219801902771,
        "prompt": " Merw Le First Too rear read writeomperialalLE toy.'\"`",
        "nll_prompt": -11.136284828186035
    },
    {
        "epoch": 32,
        "loss": 1.0616410970687866,
        "best_loss": 1.0201760530471802,
        "best_kl": 13.686976432800293,
        "best_std": 0.71219801902771,
        "cur_kl": 13.93942928314209,
        "cur_std": 0.6745089054107666,
        "prompt": " Merw Le First Too rear read writeomperialalLE toy-.`",
        "nll_prompt": -11.019681930541992
    },
    {
        "epoch": 33,
        "loss": 1.1816365718841553,
        "best_loss": 1.0201760530471802,
        "best_kl": 13.686976432800293,
        "best_std": 0.71219801902771,
        "cur_kl": 14.295703887939453,
        "cur_std": 0.6468122959136963,
        "prompt": " Merw Le First Too rear read writeomperialal 20 toy-.`",
        "nll_prompt": -11.078526496887207
    },
    {
        "epoch": 34,
        "loss": 1.11933434009552,
        "best_loss": 1.0201760530471802,
        "best_kl": 11.725762367248535,
        "best_std": 0.5841634273529053,
        "cur_kl": 11.725762367248535,
        "cur_std": 0.5841634273529053,
        "prompt": " Merw Le First Too rear read writeomperialal trees toy-.`",
        "nll_prompt": -11.250541687011719
    },
    {
        "epoch": 35,
        "loss": 1.0460164546966553,
        "best_loss": 1.0201760530471802,
        "best_kl": 11.725762367248535,
        "best_std": 0.5841634273529053,
        "cur_kl": 11.819303512573242,
        "cur_std": 0.5846283435821533,
        "prompt": " Merw Le First Too rear read writeomperialpled trees toy-.`",
        "nll_prompt": -11.66736888885498
    },
    {
        "epoch": 36,
        "loss": 1.100672960281372,
        "best_loss": 1.0201760530471802,
        "best_kl": 11.725762367248535,
        "best_std": 0.5841634273529053,
        "cur_kl": 12.427106857299805,
        "cur_std": 0.5431221961975098,
        "prompt": " Merw Le First cozy rear read writeomperialpled trees toy-.`",
        "nll_prompt": -11.81571102142334
    },
    {
        "epoch": 37,
        "loss": 1.0349483489990234,
        "best_loss": 1.0201760530471802,
        "best_kl": 11.725762367248535,
        "best_std": 0.5841634273529053,
        "cur_kl": 12.04308795928955,
        "cur_std": 0.5890820503234864,
        "prompt": " Merw Le First4 rear read writeomperialpled trees toy-.`",
        "nll_prompt": -11.81623363494873
    },
    {
        "epoch": 38,
        "loss": 0.9833093285560608,
        "best_loss": 0.9833093285560608,
        "best_kl": 11.725762367248535,
        "best_std": 0.5841634273529053,
        "cur_kl": 12.333661079406738,
        "cur_std": 0.5745080471038818,
        "prompt": " Merw Le First Outs rear read writeomperialpled trees toy-.`",
        "nll_prompt": -11.883865356445312
    },
    {
        "epoch": 39,
        "loss": 1.0602437257766724,
        "best_loss": 0.9833093285560608,
        "best_kl": 11.725762367248535,
        "best_std": 0.5841634273529053,
        "cur_kl": 12.016258239746094,
        "cur_std": 0.5677992820739746,
        "prompt": " Merw Le First Outs rear read writeomperial reverse trees toy-.`",
        "nll_prompt": -11.167272567749023
    },
    {
        "epoch": 40,
        "loss": 1.0425515174865723,
        "best_loss": 0.9833093285560608,
        "best_kl": 11.725762367248535,
        "best_std": 0.5841634273529053,
        "cur_kl": 12.44233226776123,
        "cur_std": 0.5749689102172851,
        "prompt": " Merw Le First Outs rear read writeomperiality trees toy-.`",
        "nll_prompt": -11.197503089904785
    },
    {
        "epoch": 41,
        "loss": 1.150342583656311,
        "best_loss": 0.9833093285560608,
        "best_kl": 11.725762367248535,
        "best_std": 0.5841634273529053,
        "cur_kl": 11.780853271484375,
        "cur_std": 0.5979655742645263,
        "prompt": " Merw Le First value rear read writeomperiality trees toy-.`",
        "nll_prompt": -10.929871559143066
    },
    {
        "epoch": 42,
        "loss": 1.096103310585022,
        "best_loss": 0.9833093285560608,
        "best_kl": 11.398364067077637,
        "best_std": 0.6112972736358643,
        "cur_kl": 11.398364067077637,
        "cur_std": 0.6112972736358643,
        "prompt": " Mer be Le First value rear read writeomperiality trees toy-.`",
        "nll_prompt": -11.536551475524902
    },
    {
        "epoch": 43,
        "loss": 1.0300003290176392,
        "best_loss": 0.9833093285560608,
        "best_kl": 11.398364067077637,
        "best_std": 0.6112972736358643,
        "cur_kl": 11.745071411132812,
        "cur_std": 0.6150514125823975,
        "prompt": " Mer be Le First As rear read writeomperiality trees toy-.`",
        "nll_prompt": -11.459983825683594
    },
    {
        "epoch": 44,
        "loss": 1.0427401065826416,
        "best_loss": 0.9833093285560608,
        "best_kl": 11.398364067077637,
        "best_std": 0.6112972736358643,
        "cur_kl": 11.731633186340332,
        "cur_std": 0.5881272315979004,
        "prompt": " Mer be Le comparative As rear read writeomperiality trees toy-.`",
        "nll_prompt": -11.561786651611328
    },
    {
        "epoch": 45,
        "loss": 0.9877788424491882,
        "best_loss": 0.9833093285560608,
        "best_kl": 11.398364067077637,
        "best_std": 0.6112972736358643,
        "cur_kl": 11.490461349487305,
        "cur_std": 0.5986831188201904,
        "prompt": " Mer be Le comparative As rear read writeomperialval trees toy-.`",
        "nll_prompt": -11.987471580505371
    },
    {
        "epoch": 46,
        "loss": 1.155195713043213,
        "best_loss": 0.9833093285560608,
        "best_kl": 11.398364067077637,
        "best_std": 0.6112972736358643,
        "cur_kl": 11.538277626037598,
        "cur_std": 0.6062013626098632,
        "prompt": " Mer be Le comparativeY rear read writeomperialval trees toy-.`",
        "nll_prompt": -12.208353996276855
    },
    {
        "epoch": 47,
        "loss": 1.0849041938781738,
        "best_loss": 0.9833093285560608,
        "best_kl": 11.398364067077637,
        "best_std": 0.6112972736358643,
        "cur_kl": 11.74887466430664,
        "cur_std": 0.5938799381256104,
        "prompt": " Mer be Le comparativeY rear read writeomperialval trees apprentice-.`",
        "nll_prompt": -12.328410148620605
    },
    {
        "epoch": 48,
        "loss": 1.062591552734375,
        "best_loss": 0.9833093285560608,
        "best_kl": 11.297338485717773,
        "best_std": 0.5630337238311768,
        "cur_kl": 11.297338485717773,
        "cur_std": 0.5630337238311768,
        "prompt": " Mer be Le comparativeY rear read write binaryerialval trees apprentice-.`",
        "nll_prompt": -11.82907772064209
    },
    {
        "epoch": 49,
        "loss": 0.9841282367706299,
        "best_loss": 0.9833093285560608,
        "best_kl": 11.297338485717773,
        "best_std": 0.5630337238311768,
        "cur_kl": 12.144511222839355,
        "cur_std": 0.5783608913421631,
        "prompt": " Mer be Le comparativeY rear Dat write binaryerialval trees apprentice-.`",
        "nll_prompt": -12.840002059936523
    },
    {
        "epoch": 50,
        "loss": 0.9905046820640564,
        "best_loss": 0.9833093285560608,
        "best_kl": 11.297338485717773,
        "best_std": 0.5630337238311768,
        "cur_kl": 11.422869682312012,
        "cur_std": 0.587507963180542,
        "prompt": " Mer be Le comparative Th rear Dat write binaryerialval trees apprentice-.`",
        "nll_prompt": -12.984128952026367
    },
    {
        "epoch": 51,
        "loss": 1.1531791687011719,
        "best_loss": 0.9833093285560608,
        "best_kl": 11.282628059387207,
        "best_std": 0.5880385875701905,
        "cur_kl": 11.282628059387207,
        "cur_std": 0.5880385875701905,
        "prompt": " Mer be Le comparative Kor rear Dat write binaryerialval trees apprentice-.`",
        "nll_prompt": -13.066468238830566
    },
    {
        "epoch": 52,
        "loss": 1.1293329000473022,
        "best_loss": 0.9833093285560608,
        "best_kl": 11.282628059387207,
        "best_std": 0.5880385875701905,
        "cur_kl": 11.676193237304688,
        "cur_std": 0.5680140972137451,
        "prompt": " Mer be Le comparative Whitman rear Dat write binaryerialval trees apprentice-.`",
        "nll_prompt": -12.909090042114258
    },
    {
        "epoch": 53,
        "loss": 1.0221588611602783,
        "best_loss": 0.9833093285560608,
        "best_kl": 11.282628059387207,
        "best_std": 0.5880385875701905,
        "cur_kl": 12.087750434875488,
        "cur_std": 0.5699164390563964,
        "prompt": " Mer be Le comparative Whitman rear father write binaryerialval trees apprentice-.`",
        "nll_prompt": -12.589475631713867
    },
    {
        "epoch": 54,
        "loss": 0.9471043348312378,
        "best_loss": 0.9471043348312378,
        "best_kl": 11.282628059387207,
        "best_std": 0.5880385875701905,
        "cur_kl": 11.632822036743164,
        "cur_std": 0.569590711593628,
        "prompt": " Mer be Le comparative Fal rear father write binaryerialval trees apprentice-.`",
        "nll_prompt": -12.527436256408691
    },
    {
        "epoch": 55,
        "loss": 0.9753252863883972,
        "best_loss": 0.9471043348312378,
        "best_kl": 11.282628059387207,
        "best_std": 0.5880385875701905,
        "cur_kl": 11.583114624023438,
        "cur_std": 0.5818269729614258,
        "prompt": " Mer be Le comparative Fal rear father write binaryerialed trees apprentice-.`",
        "nll_prompt": -12.08438777923584
    },
    {
        "epoch": 56,
        "loss": 0.995299220085144,
        "best_loss": 0.9471043348312378,
        "best_kl": 11.282628059387207,
        "best_std": 0.5880385875701905,
        "cur_kl": 11.595617294311523,
        "cur_std": 0.591681432723999,
        "prompt": " Mer be Le comparative less rear father write binaryerialed trees apprentice-.`",
        "nll_prompt": -11.383060455322266
    },
    {
        "epoch": 57,
        "loss": 1.0758557319641113,
        "best_loss": 0.9471043348312378,
        "best_kl": 11.282628059387207,
        "best_std": 0.5880385875701905,
        "cur_kl": 11.970380783081055,
        "cur_std": 0.6597010135650635,
        "prompt": " Mer be Le comparative less rear--> write binaryerialed trees apprentice-.`",
        "nll_prompt": -11.909894943237305
    },
    {
        "epoch": 58,
        "loss": 0.9906314015388489,
        "best_loss": 0.9471043348312378,
        "best_kl": 11.282628059387207,
        "best_std": 0.5880385875701905,
        "cur_kl": 11.895956993103027,
        "cur_std": 0.6430315971374512,
        "prompt": " Mer be Le comparative programs rear--> write binaryerialed trees apprentice-.`",
        "nll_prompt": -12.057194709777832
    },
    {
        "epoch": 59,
        "loss": 1.1030665636062622,
        "best_loss": 0.9471043348312378,
        "best_kl": 11.17668628692627,
        "best_std": 0.5820390701293945,
        "cur_kl": 11.17668628692627,
        "cur_std": 0.5820390701293945,
        "prompt": " Mer be Le comparative programs rear--> write binaryerial Brown trees apprentice-.`",
        "nll_prompt": -12.69005012512207
    },
    {
        "epoch": 60,
        "loss": 0.9931962490081787,
        "best_loss": 0.9471043348312378,
        "best_kl": 11.17668628692627,
        "best_std": 0.5820390701293945,
        "cur_kl": 13.13182544708252,
        "cur_std": 0.7274593830108642,
        "prompt": " Mer be Le comparative programs rear--> write binaryerial Brown trees apprentice statements`",
        "nll_prompt": -12.81751537322998
    },
    {
        "epoch": 61,
        "loss": 1.1210535764694214,
        "best_loss": 0.9471043348312378,
        "best_kl": 11.17668628692627,
        "best_std": 0.5820390701293945,
        "cur_kl": 13.685361862182617,
        "cur_std": 0.7144933700561523,
        "prompt": " Mer be Le comparative programs rearl write binaryerial Brown trees apprentice statements`",
        "nll_prompt": -12.432758331298828
    },
    {
        "epoch": 62,
        "loss": 1.0171631574630737,
        "best_loss": 0.9471043348312378,
        "best_kl": 11.17668628692627,
        "best_std": 0.5820390701293945,
        "cur_kl": 12.84311294555664,
        "cur_std": 0.6976070880889893,
        "prompt": " Mer be Le comparativel rearl write binaryerial Brown trees apprentice statements`",
        "nll_prompt": -12.333389282226562
    },
    {
        "epoch": 63,
        "loss": 1.065963625907898,
        "best_loss": 0.9471043348312378,
        "best_kl": 11.17668628692627,
        "best_std": 0.5820390701293945,
        "cur_kl": 11.595803260803223,
        "cur_std": 0.6198406219482422,
        "prompt": " Mer be Le comparativel rearl write binaryerial Brown trees apprentice._`",
        "nll_prompt": -12.014472007751465
    },
    {
        "epoch": 64,
        "loss": 0.8651782870292664,
        "best_loss": 0.8651782870292664,
        "best_kl": 11.17668628692627,
        "best_std": 0.5820390701293945,
        "cur_kl": 11.505467414855957,
        "cur_std": 0.6090756416320801,
        "prompt": " Mer be LePl rearl write binaryerial Brown trees apprentice._`",
        "nll_prompt": -11.907999992370605
    },
    {
        "epoch": 65,
        "loss": 0.93205326795578,
        "best_loss": 0.8651782870292664,
        "best_kl": 11.17668628692627,
        "best_std": 0.5820390701293945,
        "cur_kl": 11.565186500549316,
        "cur_std": 0.5959127426147461,
        "prompt": " Mer be LePl rearl write binary O Brown trees apprentice._`",
        "nll_prompt": -11.553202629089355
    },
    {
        "epoch": 66,
        "loss": 1.0435785055160522,
        "best_loss": 0.8651782870292664,
        "best_kl": 11.17668628692627,
        "best_std": 0.5820390701293945,
        "cur_kl": 11.206256866455078,
        "cur_std": 0.6105548858642578,
        "prompt": " Mer be LePl Serel write binary O Brown trees apprentice._`",
        "nll_prompt": -11.602753639221191
    },
    {
        "epoch": 67,
        "loss": 1.1202285289764404,
        "best_loss": 0.8651782870292664,
        "best_kl": 11.17668628692627,
        "best_std": 0.5820390701293945,
        "cur_kl": 12.12973690032959,
        "cur_std": 0.6615338325500488,
        "prompt": " Mer be LePl Serel write binary O 3 trees apprentice._`",
        "nll_prompt": -11.294596672058105
    },
    {
        "epoch": 68,
        "loss": 1.0715277194976807,
        "best_loss": 0.8651782870292664,
        "best_kl": 11.17668628692627,
        "best_std": 0.5820390701293945,
        "cur_kl": 12.003862380981445,
        "cur_std": 0.6290101051330567,
        "prompt": " Mer be Le pompl Serel write binary O 3 trees apprentice._`",
        "nll_prompt": -11.812061309814453
    },
    {
        "epoch": 69,
        "loss": 0.8575541377067566,
        "best_loss": 0.8575541377067566,
        "best_kl": 11.17668628692627,
        "best_std": 0.5820390701293945,
        "cur_kl": 11.524650573730469,
        "cur_std": 0.6147973537445068,
        "prompt": " Mer be Le pompl Serel write binary O 3 trees APIs._`",
        "nll_prompt": -11.837848663330078
    },
    {
        "epoch": 70,
        "loss": 1.05160653591156,
        "best_loss": 0.8575541377067566,
        "best_kl": 11.17668628692627,
        "best_std": 0.5820390701293945,
        "cur_kl": 11.262235641479492,
        "cur_std": 0.5998447418212891,
        "prompt": " Les be Le pompl Serel write binary O 3 trees APIs._`",
        "nll_prompt": -11.786151885986328
    },
    {
        "epoch": 71,
        "loss": 1.010816216468811,
        "best_loss": 0.8575541377067566,
        "best_kl": 11.17668628692627,
        "best_std": 0.5820390701293945,
        "cur_kl": 11.193482398986816,
        "cur_std": 0.6033791065216064,
        "prompt": " Les be Le performl Serel write binary O 3 trees APIs._`",
        "nll_prompt": -11.234650611877441
    },
    {
        "epoch": 72,
        "loss": 0.988318920135498,
        "best_loss": 0.8575541377067566,
        "best_kl": 11.002004623413086,
        "best_std": 0.6089059352874756,
        "cur_kl": 11.002004623413086,
        "cur_std": 0.6089059352874756,
        "prompt": " Les be Leoghl Serel write binary O 3 trees APIs._`",
        "nll_prompt": -11.24485969543457
    },
    {
        "epoch": 73,
        "loss": 1.0077862739562988,
        "best_loss": 0.8575541377067566,
        "best_kl": 11.002004623413086,
        "best_std": 0.6089059352874756,
        "cur_kl": 11.258797645568848,
        "cur_std": 0.6236037731170654,
        "prompt": " Les be nominatedoghl Serel write binary O 3 trees APIs._`",
        "nll_prompt": -11.255719184875488
    },
    {
        "epoch": 74,
        "loss": 1.0059401988983154,
        "best_loss": 0.8575541377067566,
        "best_kl": 11.002004623413086,
        "best_std": 0.6089059352874756,
        "cur_kl": 11.788169860839844,
        "cur_std": 0.6378227233886719,
        "prompt": " Les be nominatedoghifying Serel write binary O 3 trees APIs._`",
        "nll_prompt": -11.766022682189941
    },
    {
        "epoch": 75,
        "loss": 1.0403707027435303,
        "best_loss": 0.8575541377067566,
        "best_kl": 11.002004623413086,
        "best_std": 0.6089059352874756,
        "cur_kl": 11.947962760925293,
        "cur_std": 0.6664772987365722,
        "prompt": " Les be nominatedoghifying Serel Using binary O 3 trees APIs._`",
        "nll_prompt": -11.519801139831543
    },
    {
        "epoch": 76,
        "loss": 0.9665241837501526,
        "best_loss": 0.8575541377067566,
        "best_kl": 11.002004623413086,
        "best_std": 0.6089059352874756,
        "cur_kl": 12.237832069396973,
        "cur_std": 0.6698539733886719,
        "prompt": " Les be nominated emotifying Serel Using binary O 3 trees APIs._`",
        "nll_prompt": -11.086902618408203
    },
    {
        "epoch": 77,
        "loss": 1.062912106513977,
        "best_loss": 0.8575541377067566,
        "best_kl": 11.002004623413086,
        "best_std": 0.6089059352874756,
        "cur_kl": 11.952603340148926,
        "cur_std": 0.6575213432312011,
        "prompt": " Les be nominated emot achieve Serel Using binary O 3 trees APIs._`",
        "nll_prompt": -11.425463676452637
    },
    {
        "epoch": 78,
        "loss": 1.1033854484558105,
        "best_loss": 0.8575541377067566,
        "best_kl": 11.002004623413086,
        "best_std": 0.6089059352874756,
        "cur_kl": 12.22552490234375,
        "cur_std": 0.6233145713806152,
        "prompt": " Les be nominated emot 42 Serel Using binary O 3 trees APIs._`",
        "nll_prompt": -11.135313034057617
    },
    {
        "epoch": 79,
        "loss": 1.0848884582519531,
        "best_loss": 0.8575541377067566,
        "best_kl": 11.002004623413086,
        "best_std": 0.6089059352874756,
        "cur_kl": 11.923989295959473,
        "cur_std": 0.6101498603820801,
        "prompt": " Les be nominated emot� Serel Using binary O 3 trees APIs._`",
        "nll_prompt": -11.546653747558594
    },
    {
        "epoch": 80,
        "loss": 1.0425944328308105,
        "best_loss": 0.8575541377067566,
        "best_kl": 11.002004623413086,
        "best_std": 0.6089059352874756,
        "cur_kl": 12.10021686553955,
        "cur_std": 0.6383449554443359,
        "prompt": " Les be nominatedating� Serel Using binary O 3 trees APIs._`",
        "nll_prompt": -11.861164093017578
    },
    {
        "epoch": 81,
        "loss": 1.1281205415725708,
        "best_loss": 0.8575541377067566,
        "best_kl": 11.002004623413086,
        "best_std": 0.6089059352874756,
        "cur_kl": 12.499943733215332,
        "cur_std": 0.6465441703796386,
        "prompt": " Les be nominatedating� Sere catchy Using binary O 3 trees APIs._`",
        "nll_prompt": -12.371745109558105
    },
    {
        "epoch": 82,
        "loss": 0.9489790797233582,
        "best_loss": 0.8575541377067566,
        "best_kl": 11.002004623413086,
        "best_std": 0.6089059352874756,
        "cur_kl": 12.235148429870605,
        "cur_std": 0.6494928359985351,
        "prompt": " Les be nominatedating� exploring catchy Using binary O 3 trees APIs._`",
        "nll_prompt": -12.28534984588623
    },
    {
        "epoch": 83,
        "loss": 1.0304241180419922,
        "best_loss": 0.8575541377067566,
        "best_kl": 11.002004623413086,
        "best_std": 0.6089059352874756,
        "cur_kl": 11.694746017456055,
        "cur_std": 0.6466499328613281,
        "prompt": " Les be nominatedatingera exploring catchy Using binary O 3 trees APIs._`",
        "nll_prompt": -12.076648712158203
    },
    {
        "epoch": 84,
        "loss": 1.0433987379074097,
        "best_loss": 0.8575541377067566,
        "best_kl": 11.002004623413086,
        "best_std": 0.6089059352874756,
        "cur_kl": 11.745453834533691,
        "cur_std": 0.6440179824829102,
        "prompt": " Les be nominated creamyera exploring catchy Using binary O 3 trees APIs._`",
        "nll_prompt": -12.012486457824707
    },
    {
        "epoch": 85,
        "loss": 0.9872123599052429,
        "best_loss": 0.8575541377067566,
        "best_kl": 11.002004623413086,
        "best_std": 0.6089059352874756,
        "cur_kl": 11.588560104370117,
        "cur_std": 0.569464921951294,
        "prompt": " Les be nominated creamyera exploring catchy Using binary O 3 trees APIs._]).",
        "nll_prompt": -12.447754859924316
    },
    {
        "epoch": 86,
        "loss": 0.9664533734321594,
        "best_loss": 0.8575541377067566,
        "best_kl": 11.002004623413086,
        "best_std": 0.6089059352874756,
        "cur_kl": 11.203667640686035,
        "cur_std": 0.5326750755310059,
        "prompt": " Les be nominated creamyera exploringpy Using binary O 3 trees APIs._]).",
        "nll_prompt": -12.81037712097168
    },
    {
        "epoch": 87,
        "loss": 1.067455768585205,
        "best_loss": 0.8575541377067566,
        "best_kl": 11.002004623413086,
        "best_std": 0.6089059352874756,
        "cur_kl": 11.069059371948242,
        "cur_std": 0.5235384464263916,
        "prompt": " Les be nominated toera exploringpy Using binary O 3 trees APIs._]).",
        "nll_prompt": -12.38620662689209
    },
    {
        "epoch": 88,
        "loss": 1.0683653354644775,
        "best_loss": 0.8575541377067566,
        "best_kl": 11.002004623413086,
        "best_std": 0.6089059352874756,
        "cur_kl": 11.75204086303711,
        "cur_std": 0.5591423988342286,
        "prompt": " Les be nominated toera exploring Fitzgerald Using binary O 3 trees APIs._]).",
        "nll_prompt": -12.29951286315918
    },
    {
        "epoch": 89,
        "loss": 1.0541361570358276,
        "best_loss": 0.8575541377067566,
        "best_kl": 11.002004623413086,
        "best_std": 0.6089059352874756,
        "cur_kl": 11.75946044921875,
        "cur_std": 0.5622031688690186,
        "prompt": " Les be nominated tootta exploring Fitzgerald Using binary O 3 trees APIs._]).",
        "nll_prompt": -11.879657745361328
    },
    {
        "epoch": 90,
        "loss": 1.0438575744628906,
        "best_loss": 0.8575541377067566,
        "best_kl": 11.002004623413086,
        "best_std": 0.6089059352874756,
        "cur_kl": 11.539304733276367,
        "cur_std": 0.5643016815185546,
        "prompt": " facing be nominated tootta exploring Fitzgerald Using binary O 3 trees APIs._]).",
        "nll_prompt": -11.855814933776855
    },
    {
        "epoch": 91,
        "loss": 1.0270792245864868,
        "best_loss": 0.8575541377067566,
        "best_kl": 11.002004623413086,
        "best_std": 0.6089059352874756,
        "cur_kl": 11.145991325378418,
        "cur_std": 0.5539974689483642,
        "prompt": " facing be underscores tootta exploring Fitzgerald Using binary O 3 trees APIs._]).",
        "nll_prompt": -12.289402961730957
    },
    {
        "epoch": 92,
        "loss": 0.9920455813407898,
        "best_loss": 0.8575541377067566,
        "best_kl": 10.918317794799805,
        "best_std": 0.5298836708068848,
        "cur_kl": 10.918317794799805,
        "cur_std": 0.5298836708068848,
        "prompt": " facing be underscores tootta exploring Fitzgerald Using binaryched 3 trees APIs._]).",
        "nll_prompt": -12.557523727416992
    },
    {
        "epoch": 93,
        "loss": 1.0057542324066162,
        "best_loss": 0.8575541377067566,
        "best_kl": 10.704052925109863,
        "best_std": 0.5543243885040283,
        "cur_kl": 10.704052925109863,
        "cur_std": 0.5543243885040283,
        "prompt": " facing be underscores to reflect exploring Fitzgerald Using binaryched 3 trees APIs._]).",
        "nll_prompt": -11.504584312438965
    },
    {
        "epoch": 94,
        "loss": 1.0321024656295776,
        "best_loss": 0.8575541377067566,
        "best_kl": 10.628288269042969,
        "best_std": 0.5484060287475586,
        "cur_kl": 10.628288269042969,
        "cur_std": 0.5484060287475586,
        "prompt": " facing resemble underscores to reflect exploring Fitzgerald Using binaryched 3 trees APIs._]).",
        "nll_prompt": -11.884919166564941
    },
    {
        "epoch": 95,
        "loss": 0.9954646229743958,
        "best_loss": 0.8575541377067566,
        "best_kl": 10.40076732635498,
        "best_std": 0.5218542575836181,
        "cur_kl": 10.40076732635498,
        "cur_std": 0.5218542575836181,
        "prompt": " facing resemble underscores to reflect exploringque Using binaryched 3 trees APIs._]).",
        "nll_prompt": -11.838690757751465
    },
    {
        "epoch": 96,
        "loss": 1.0489106178283691,
        "best_loss": 0.8575541377067566,
        "best_kl": 10.21762466430664,
        "best_std": 0.5356626987457276,
        "cur_kl": 10.21762466430664,
        "cur_std": 0.5356626987457276,
        "prompt": "pressure resemble underscores to reflect exploringque Using binaryched 3 trees APIs._]).",
        "nll_prompt": -12.173465728759766
    },
    {
        "epoch": 97,
        "loss": 1.0365760326385498,
        "best_loss": 0.8575541377067566,
        "best_kl": 10.21762466430664,
        "best_std": 0.5356626987457276,
        "cur_kl": 10.440730094909668,
        "cur_std": 0.5479900360107421,
        "prompt": "pressure resemble underscores to Arthur exploringque Using binaryched 3 trees APIs._]).",
        "nll_prompt": -12.95926570892334
    },
    {
        "epoch": 98,
        "loss": 0.9577836394309998,
        "best_loss": 0.8575541377067566,
        "best_kl": 10.21762466430664,
        "best_std": 0.5356626987457276,
        "cur_kl": 10.325661659240723,
        "cur_std": 0.5376328468322754,
        "prompt": " hesitate resemble underscores to Arthur exploringque Using binaryched 3 trees APIs._]).",
        "nll_prompt": -13.332026481628418
    },
    {
        "epoch": 99,
        "loss": 1.067603349685669,
        "best_loss": 0.8575541377067566,
        "best_kl": 10.21762466430664,
        "best_std": 0.5356626987457276,
        "cur_kl": 10.335871696472168,
        "cur_std": 0.549962043762207,
        "prompt": " arguments resemble underscores to Arthur exploringque Using binaryched 3 trees APIs._]).",
        "nll_prompt": -12.638919830322266
    },
    {
        "epoch": 100,
        "loss": 1.0158789157867432,
        "best_loss": 0.8575541377067566,
        "best_kl": 10.21762466430664,
        "best_std": 0.5356626987457276,
        "cur_kl": 10.428424835205078,
        "cur_std": 0.5819094181060791,
        "prompt": " arguments resemble Booth to Arthur exploringque Using binaryched 3 trees APIs._]).",
        "nll_prompt": -12.651878356933594
    }
]