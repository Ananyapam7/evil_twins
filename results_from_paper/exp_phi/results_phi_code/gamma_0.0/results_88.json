[
    {
        "epoch": 1,
        "loss": 1.298359751701355,
        "best_loss": 1.298359751701355,
        "best_kl": 13.962099075317383,
        "best_std": 0.4472948551177979,
        "cur_kl": 13.962099075317383,
        "cur_std": 0.4472948551177979,
        "prompt": "Write a Python function to calculate the sum of all digits of a dogs",
        "nll_prompt": -3.0339465141296387
    },
    {
        "epoch": 2,
        "loss": 1.2856884002685547,
        "best_loss": 1.2856884002685547,
        "best_kl": 13.862946510314941,
        "best_std": 0.5168013095855712,
        "cur_kl": 13.862946510314941,
        "cur_std": 0.5168013095855712,
        "prompt": "Write a Python function to calculate the sum of all digits of a36",
        "nll_prompt": -2.6865904331207275
    },
    {
        "epoch": 3,
        "loss": 1.2184550762176514,
        "best_loss": 1.2184550762176514,
        "best_kl": 13.042497634887695,
        "best_std": 0.4206826210021973,
        "cur_kl": 13.042497634887695,
        "cur_std": 0.4206826210021973,
        "prompt": "Write a Python function to calculate the sum of all digits pop a36",
        "nll_prompt": -4.482168674468994
    },
    {
        "epoch": 4,
        "loss": 1.160547137260437,
        "best_loss": 1.160547137260437,
        "best_kl": 11.62535572052002,
        "best_std": 0.33058254718780516,
        "cur_kl": 11.62535572052002,
        "cur_std": 0.33058254718780516,
        "prompt": "Write a Python function to calculate the sum of all digitsAC a36",
        "nll_prompt": -4.216724395751953
    },
    {
        "epoch": 5,
        "loss": 1.109592318534851,
        "best_loss": 1.109592318534851,
        "best_kl": 9.196717262268066,
        "best_std": 0.32294628620147703,
        "cur_kl": 9.196717262268066,
        "cur_std": 0.32294628620147703,
        "prompt": "Write a Python function to calculate the sum of all digitsACset36",
        "nll_prompt": -4.371499538421631
    },
    {
        "epoch": 6,
        "loss": 1.1137752532958984,
        "best_loss": 1.109592318534851,
        "best_kl": 9.196717262268066,
        "best_std": 0.32294628620147703,
        "cur_kl": 9.208706855773926,
        "cur_std": 0.38420417308807375,
        "prompt": "Write a Python function to calculate the sum of all digits Solset36",
        "nll_prompt": -4.795193195343018
    },
    {
        "epoch": 7,
        "loss": 1.16777765750885,
        "best_loss": 1.109592318534851,
        "best_kl": 9.196717262268066,
        "best_std": 0.32294628620147703,
        "cur_kl": 9.886783599853516,
        "cur_std": 0.43582720756530763,
        "prompt": "iom a Python function to calculate the sum of all digits Solset36",
        "nll_prompt": -6.199855327606201
    },
    {
        "epoch": 8,
        "loss": 1.1349886655807495,
        "best_loss": 1.109592318534851,
        "best_kl": 9.196717262268066,
        "best_std": 0.32294628620147703,
        "cur_kl": 9.526286125183105,
        "cur_std": 0.4404322624206543,
        "prompt": "iom a Python function to calculate the sum of all digits unhset36",
        "nll_prompt": -6.103857517242432
    },
    {
        "epoch": 9,
        "loss": 1.1836353540420532,
        "best_loss": 1.109592318534851,
        "best_kl": 9.196717262268066,
        "best_std": 0.32294628620147703,
        "cur_kl": 10.550662994384766,
        "cur_std": 0.4006699562072754,
        "prompt": "iom a Python function to holding the sum of all digits unhset36",
        "nll_prompt": -7.419196128845215
    },
    {
        "epoch": 10,
        "loss": 1.1888405084609985,
        "best_loss": 1.109592318534851,
        "best_kl": 9.196717262268066,
        "best_std": 0.32294628620147703,
        "cur_kl": 11.359166145324707,
        "cur_std": 0.38961081504821776,
        "prompt": "iom a Python functionPersonal holding the sum of all digits unhset36",
        "nll_prompt": -8.790685653686523
    },
    {
        "epoch": 11,
        "loss": 1.1775317192077637,
        "best_loss": 1.109592318534851,
        "best_kl": 9.196717262268066,
        "best_std": 0.32294628620147703,
        "cur_kl": 11.611620903015137,
        "cur_std": 0.41272759437561035,
        "prompt": " wow a Python functionPersonal holding the sum of all digits unhset36",
        "nll_prompt": -8.925896644592285
    },
    {
        "epoch": 12,
        "loss": 1.1981827020645142,
        "best_loss": 1.109592318534851,
        "best_kl": 9.196717262268066,
        "best_std": 0.32294628620147703,
        "cur_kl": 11.346911430358887,
        "cur_std": 0.4586006164550781,
        "prompt": " wow a Python functioncy holding the sum of all digits unhset36",
        "nll_prompt": -8.22141170501709
    },
    {
        "epoch": 13,
        "loss": 1.1805185079574585,
        "best_loss": 1.109592318534851,
        "best_kl": 9.196717262268066,
        "best_std": 0.32294628620147703,
        "cur_kl": 10.798140525817871,
        "cur_std": 0.35417490005493163,
        "prompt": " wow a Python function' holding the sum of all digits unhset36",
        "nll_prompt": -8.039247512817383
    },
    {
        "epoch": 14,
        "loss": 1.1714606285095215,
        "best_loss": 1.109592318534851,
        "best_kl": 9.196717262268066,
        "best_std": 0.32294628620147703,
        "cur_kl": 11.35054874420166,
        "cur_std": 0.36556358337402345,
        "prompt": " wow a Python function' holding the sum of all digits unh�36",
        "nll_prompt": -8.62509822845459
    },
    {
        "epoch": 15,
        "loss": 1.1434000730514526,
        "best_loss": 1.109592318534851,
        "best_kl": 9.196717262268066,
        "best_std": 0.32294628620147703,
        "cur_kl": 10.999143600463867,
        "cur_std": 0.4849864959716797,
        "prompt": " wow a Python function' holding the sum of all digits unh� Body",
        "nll_prompt": -8.685796737670898
    },
    {
        "epoch": 16,
        "loss": 1.1866422891616821,
        "best_loss": 1.109592318534851,
        "best_kl": 9.196717262268066,
        "best_std": 0.32294628620147703,
        "cur_kl": 9.881303787231445,
        "cur_std": 0.42245969772338865,
        "prompt": " wow a Python function' holding the sum of all digits unh� assignments",
        "nll_prompt": -8.96524429321289
    },
    {
        "epoch": 17,
        "loss": 1.1714764833450317,
        "best_loss": 1.109592318534851,
        "best_kl": 9.196717262268066,
        "best_std": 0.32294628620147703,
        "cur_kl": 10.62511920928955,
        "cur_std": 0.4094428062438965,
        "prompt": " wow a Python function' holding the sum of all digits unh� state",
        "nll_prompt": -8.876901626586914
    },
    {
        "epoch": 18,
        "loss": 1.1674809455871582,
        "best_loss": 1.109592318534851,
        "best_kl": 9.196717262268066,
        "best_std": 0.32294628620147703,
        "cur_kl": 11.247150421142578,
        "cur_std": 0.48139033317565916,
        "prompt": " wow a Python function' holding* sum of all digits unh� state",
        "nll_prompt": -10.028363227844238
    },
    {
        "epoch": 19,
        "loss": 1.1684449911117554,
        "best_loss": 1.109592318534851,
        "best_kl": 9.196717262268066,
        "best_std": 0.32294628620147703,
        "cur_kl": 11.277924537658691,
        "cur_std": 0.45677890777587893,
        "prompt": " wow a Python function' holding* sum of all digits lifes� state",
        "nll_prompt": -9.937103271484375
    },
    {
        "epoch": 20,
        "loss": 1.1773114204406738,
        "best_loss": 1.109592318534851,
        "best_kl": 9.196717262268066,
        "best_std": 0.32294628620147703,
        "cur_kl": 9.636052131652832,
        "cur_std": 0.44307985305786135,
        "prompt": " wow a Python function' holding* sum of all digits lifes�#",
        "nll_prompt": -9.315107345581055
    },
    {
        "epoch": 21,
        "loss": 1.143131971359253,
        "best_loss": 1.109592318534851,
        "best_kl": 8.87923812866211,
        "best_std": 0.4024345397949219,
        "cur_kl": 8.87923812866211,
        "cur_std": 0.4024345397949219,
        "prompt": " wow a Python function' holding* sum of all digits lifes Usage#",
        "nll_prompt": -8.73806095123291
    },
    {
        "epoch": 22,
        "loss": 1.0871652364730835,
        "best_loss": 1.0871652364730835,
        "best_kl": 8.87923812866211,
        "best_std": 0.4024345397949219,
        "cur_kl": 9.341750144958496,
        "cur_std": 0.45029482841491697,
        "prompt": " wow a Python function buildings holding* sum of all digits lifes Usage#",
        "nll_prompt": -8.938329696655273
    },
    {
        "epoch": 23,
        "loss": 1.150262475013733,
        "best_loss": 1.0871652364730835,
        "best_kl": 8.87923812866211,
        "best_std": 0.4024345397949219,
        "cur_kl": 9.635147094726562,
        "cur_std": 0.4258744716644287,
        "prompt": " wow a Python function buildings reading* sum of all digits lifes Usage#",
        "nll_prompt": -8.876331329345703
    },
    {
        "epoch": 24,
        "loss": 1.171414852142334,
        "best_loss": 1.0871652364730835,
        "best_kl": 8.87923812866211,
        "best_std": 0.4024345397949219,
        "cur_kl": 10.608198165893555,
        "cur_std": 0.4119280815124512,
        "prompt": " wow a Python function buildings reading lower sum of all digits lifes Usage#",
        "nll_prompt": -9.426726341247559
    },
    {
        "epoch": 25,
        "loss": 1.0769492387771606,
        "best_loss": 1.0769492387771606,
        "best_kl": 8.87923812866211,
        "best_std": 0.4024345397949219,
        "cur_kl": 10.050176620483398,
        "cur_std": 0.43338704109191895,
        "prompt": " wow a Python function buildings less lower sum of all digits lifes Usage#",
        "nll_prompt": -9.27066421508789
    },
    {
        "epoch": 26,
        "loss": 1.1320701837539673,
        "best_loss": 1.0769492387771606,
        "best_kl": 8.87923812866211,
        "best_std": 0.4024345397949219,
        "cur_kl": 9.861738204956055,
        "cur_std": 0.4224240303039551,
        "prompt": " wow a Python function buildings less spelled sum of all digits lifes Usage#",
        "nll_prompt": -9.56943416595459
    },
    {
        "epoch": 27,
        "loss": 1.1162828207015991,
        "best_loss": 1.0769492387771606,
        "best_kl": 8.87923812866211,
        "best_std": 0.4024345397949219,
        "cur_kl": 9.616509437561035,
        "cur_std": 0.4414738655090332,
        "prompt": " wow a Python function buildings less burden sum of all digits lifes Usage#",
        "nll_prompt": -8.876349449157715
    },
    {
        "epoch": 28,
        "loss": 1.1807817220687866,
        "best_loss": 1.0769492387771606,
        "best_kl": 8.87923812866211,
        "best_std": 0.4024345397949219,
        "cur_kl": 9.647613525390625,
        "cur_std": 0.4380316734313965,
        "prompt": " wow a Python functionidal less burden sum of all digits lifes Usage#",
        "nll_prompt": -9.331901550292969
    },
    {
        "epoch": 29,
        "loss": 1.1603995561599731,
        "best_loss": 1.0769492387771606,
        "best_kl": 8.87923812866211,
        "best_std": 0.4024345397949219,
        "cur_kl": 9.355252265930176,
        "cur_std": 0.4064932823181152,
        "prompt": " wow a Python functionidal lessalt sum of all digits lifes Usage#",
        "nll_prompt": -9.791872024536133
    },
    {
        "epoch": 30,
        "loss": 1.1248396635055542,
        "best_loss": 1.0769492387771606,
        "best_kl": 8.87923812866211,
        "best_std": 0.4024345397949219,
        "cur_kl": 9.697535514831543,
        "cur_std": 0.41215667724609373,
        "prompt": " wow a Python functionidal lessrian sum of all digits lifes Usage#",
        "nll_prompt": -9.49282169342041
    },
    {
        "epoch": 31,
        "loss": 1.0889893770217896,
        "best_loss": 1.0769492387771606,
        "best_kl": 8.87923812866211,
        "best_std": 0.4024345397949219,
        "cur_kl": 10.203961372375488,
        "cur_std": 0.4185466766357422,
        "prompt": " wow a Python functionidal less market sum of all digits lifes Usage#",
        "nll_prompt": -9.72182559967041
    },
    {
        "epoch": 32,
        "loss": 1.1154594421386719,
        "best_loss": 1.0769492387771606,
        "best_kl": 8.87923812866211,
        "best_std": 0.4024345397949219,
        "cur_kl": 10.836027145385742,
        "cur_std": 0.45886950492858886,
        "prompt": " wow a Python functionidal well market sum of all digits lifes Usage#",
        "nll_prompt": -9.053979873657227
    },
    {
        "epoch": 33,
        "loss": 1.1215174198150635,
        "best_loss": 1.0769492387771606,
        "best_kl": 8.87923812866211,
        "best_std": 0.4024345397949219,
        "cur_kl": 9.755359649658203,
        "cur_std": 0.44576220512390136,
        "prompt": " wow a Python functionidal welland sum of all digits lifes Usage#",
        "nll_prompt": -9.19547176361084
    },
    {
        "epoch": 34,
        "loss": 1.158949375152588,
        "best_loss": 1.0769492387771606,
        "best_kl": 8.87923812866211,
        "best_std": 0.4024345397949219,
        "cur_kl": 9.963615417480469,
        "cur_std": 0.3792996644973755,
        "prompt": " wow'. Python functionidal welland sum of all digits lifes Usage#",
        "nll_prompt": -9.461989402770996
    },
    {
        "epoch": 35,
        "loss": 1.1204348802566528,
        "best_loss": 1.0769492387771606,
        "best_kl": 8.87923812866211,
        "best_std": 0.4024345397949219,
        "cur_kl": 9.290078163146973,
        "cur_std": 0.4027534008026123,
        "prompt": " wow'. Python functionidal zand sum of all digits lifes Usage#",
        "nll_prompt": -9.28756332397461
    },
    {
        "epoch": 36,
        "loss": 1.1375510692596436,
        "best_loss": 1.0769492387771606,
        "best_kl": 8.87923812866211,
        "best_std": 0.4024345397949219,
        "cur_kl": 9.035005569458008,
        "cur_std": 0.36705169677734373,
        "prompt": " wow'. Python functionumpy zand sum of all digits lifes Usage#",
        "nll_prompt": -9.04085922241211
    },
    {
        "epoch": 37,
        "loss": 1.1435189247131348,
        "best_loss": 1.0769492387771606,
        "best_kl": 8.87923812866211,
        "best_std": 0.4024345397949219,
        "cur_kl": 9.561840057373047,
        "cur_std": 0.380480432510376,
        "prompt": " wow'. Python functionumpy z market sum of all digits lifes Usage#",
        "nll_prompt": -9.620101928710938
    },
    {
        "epoch": 38,
        "loss": 1.0862810611724854,
        "best_loss": 1.0769492387771606,
        "best_kl": 8.87923812866211,
        "best_std": 0.4024345397949219,
        "cur_kl": 9.601859092712402,
        "cur_std": 0.3568495512008667,
        "prompt": " wow'. Python functionumpy z market sum of all digits discreet Usage#",
        "nll_prompt": -9.67275333404541
    },
    {
        "epoch": 39,
        "loss": 1.145027756690979,
        "best_loss": 1.0769492387771606,
        "best_kl": 8.87923812866211,
        "best_std": 0.4024345397949219,
        "cur_kl": 9.957542419433594,
        "cur_std": 0.3834649324417114,
        "prompt": " wow'. Python functionumpy development market sum of all digits discreet Usage#",
        "nll_prompt": -9.690505027770996
    },
    {
        "epoch": 40,
        "loss": 1.073623538017273,
        "best_loss": 1.073623538017273,
        "best_kl": 8.87923812866211,
        "best_std": 0.4024345397949219,
        "cur_kl": 10.055508613586426,
        "cur_std": 0.3986459493637085,
        "prompt": " wow'. Python functionumpy development market sum of all digits min Usage#",
        "nll_prompt": -9.116833686828613
    },
    {
        "epoch": 41,
        "loss": 1.143470048904419,
        "best_loss": 1.073623538017273,
        "best_kl": 8.87923812866211,
        "best_std": 0.4024345397949219,
        "cur_kl": 10.097856521606445,
        "cur_std": 0.3749702930450439,
        "prompt": " wow'. Python functionumpyome market sum of all digits min Usage#",
        "nll_prompt": -9.517407417297363
    },
    {
        "epoch": 42,
        "loss": 1.095096230506897,
        "best_loss": 1.073623538017273,
        "best_kl": 8.87923812866211,
        "best_std": 0.4024345397949219,
        "cur_kl": 9.338104248046875,
        "cur_std": 0.36090309619903566,
        "prompt": " wow'. Python functionumpyome Express sum of all digits min Usage#",
        "nll_prompt": -9.449615478515625
    },
    {
        "epoch": 43,
        "loss": 1.1622836589813232,
        "best_loss": 1.073623538017273,
        "best_kl": 8.87923812866211,
        "best_std": 0.4024345397949219,
        "cur_kl": 9.540376663208008,
        "cur_std": 0.38538074493408203,
        "prompt": " wow'. Python functionhmaome Express sum of all digits min Usage#",
        "nll_prompt": -9.777929306030273
    },
    {
        "epoch": 44,
        "loss": 1.156037449836731,
        "best_loss": 1.073623538017273,
        "best_kl": 8.688882827758789,
        "best_std": 0.38299360275268557,
        "cur_kl": 8.688882827758789,
        "cur_std": 0.38299360275268557,
        "prompt": " wow'. Python functioningome Express sum of all digits min Usage#",
        "nll_prompt": -9.397622108459473
    },
    {
        "epoch": 45,
        "loss": 1.123883843421936,
        "best_loss": 1.073623538017273,
        "best_kl": 8.688882827758789,
        "best_std": 0.38299360275268557,
        "cur_kl": 8.99639892578125,
        "cur_std": 0.39909868240356444,
        "prompt": " wow'. Python functioningomecing sum of all digits min Usage#",
        "nll_prompt": -9.398996353149414
    },
    {
        "epoch": 46,
        "loss": 1.0347387790679932,
        "best_loss": 1.0347387790679932,
        "best_kl": 8.688882827758789,
        "best_std": 0.38299360275268557,
        "cur_kl": 9.287715911865234,
        "cur_std": 0.39818060398101807,
        "prompt": " guidance'. Python functioningomecing sum of all digits min Usage#",
        "nll_prompt": -9.567070960998535
    },
    {
        "epoch": 47,
        "loss": 1.1584529876708984,
        "best_loss": 1.0347387790679932,
        "best_kl": 8.688882827758789,
        "best_std": 0.38299360275268557,
        "cur_kl": 9.818177223205566,
        "cur_std": 0.4621246814727783,
        "prompt": "Assistant'. Python functioningomecing sum of all digits min Usage#",
        "nll_prompt": -10.291313171386719
    },
    {
        "epoch": 48,
        "loss": 1.1720340251922607,
        "best_loss": 1.0347387790679932,
        "best_kl": 8.688882827758789,
        "best_std": 0.38299360275268557,
        "cur_kl": 9.722601890563965,
        "cur_std": 0.43231515884399413,
        "prompt": "Assistant'. Python functioningome fully sum of all digits min Usage#",
        "nll_prompt": -10.071898460388184
    },
    {
        "epoch": 49,
        "loss": 1.1634325981140137,
        "best_loss": 1.0347387790679932,
        "best_kl": 8.688882827758789,
        "best_std": 0.38299360275268557,
        "cur_kl": 9.642220497131348,
        "cur_std": 0.4459987163543701,
        "prompt": "Assistant'. Python functioningome fully sum of all digits positive Usage#",
        "nll_prompt": -10.038049697875977
    },
    {
        "epoch": 50,
        "loss": 1.1219862699508667,
        "best_loss": 1.0347387790679932,
        "best_kl": 8.688882827758789,
        "best_std": 0.38299360275268557,
        "cur_kl": 9.630961418151855,
        "cur_std": 0.46233434677124025,
        "prompt": "Assistant'. Python functioningome fully sum of all digits genital Usage#",
        "nll_prompt": -10.585034370422363
    },
    {
        "epoch": 51,
        "loss": 1.057884931564331,
        "best_loss": 1.0347387790679932,
        "best_kl": 8.688882827758789,
        "best_std": 0.38299360275268557,
        "cur_kl": 10.249406814575195,
        "cur_std": 0.48885278701782225,
        "prompt": "Assistant'. Python functioningers fully sum of all digits genital Usage#",
        "nll_prompt": -11.065265655517578
    },
    {
        "epoch": 52,
        "loss": 1.1285626888275146,
        "best_loss": 1.0347387790679932,
        "best_kl": 8.688882827758789,
        "best_std": 0.38299360275268557,
        "cur_kl": 9.733559608459473,
        "cur_std": 0.49199962615966797,
        "prompt": "Assistant'. Python functioning her fully sum of all digits genital Usage#",
        "nll_prompt": -10.107586860656738
    },
    {
        "epoch": 53,
        "loss": 1.1593496799468994,
        "best_loss": 1.0347387790679932,
        "best_kl": 8.688882827758789,
        "best_std": 0.38299360275268557,
        "cur_kl": 9.289498329162598,
        "cur_std": 0.47070860862731934,
        "prompt": "Assistant'. Python functioning her fully sum of all digits bland Usage#",
        "nll_prompt": -9.999602317810059
    },
    {
        "epoch": 54,
        "loss": 1.129048228263855,
        "best_loss": 1.0347387790679932,
        "best_kl": 8.688882827758789,
        "best_std": 0.38299360275268557,
        "cur_kl": 9.041443824768066,
        "cur_std": 0.4564343452453613,
        "prompt": "Assistant'. Python functioningimensional fully sum of all digits bland Usage#",
        "nll_prompt": -10.62164306640625
    },
    {
        "epoch": 55,
        "loss": 1.137474775314331,
        "best_loss": 1.0347387790679932,
        "best_kl": 8.688882827758789,
        "best_std": 0.38299360275268557,
        "cur_kl": 9.4078369140625,
        "cur_std": 0.45628671646118163,
        "prompt": "Assistant'. Python functioning Do fully sum of all digits bland Usage#",
        "nll_prompt": -10.580009460449219
    },
    {
        "epoch": 56,
        "loss": 1.106735110282898,
        "best_loss": 1.0347387790679932,
        "best_kl": 8.688882827758789,
        "best_std": 0.38299360275268557,
        "cur_kl": 9.719087600708008,
        "cur_std": 0.45769824981689455,
        "prompt": "Assistant'. Python functioning Do fully sum of all digits Est Usage#",
        "nll_prompt": -10.714295387268066
    },
    {
        "epoch": 57,
        "loss": 1.0879449844360352,
        "best_loss": 1.0347387790679932,
        "best_kl": 8.688882827758789,
        "best_std": 0.38299360275268557,
        "cur_kl": 9.490633010864258,
        "cur_std": 0.45247588157653806,
        "prompt": "Assistant'. Python functioning Do fully sum of all digits Oh Usage#",
        "nll_prompt": -10.457837104797363
    },
    {
        "epoch": 58,
        "loss": 1.151226282119751,
        "best_loss": 1.0347387790679932,
        "best_kl": 8.688882827758789,
        "best_std": 0.38299360275268557,
        "cur_kl": 9.365890502929688,
        "cur_std": 0.4477718353271484,
        "prompt": "Assistant'. Python functionbor Do fully sum of all digits Oh Usage#",
        "nll_prompt": -10.758110046386719
    },
    {
        "epoch": 59,
        "loss": 1.1499098539352417,
        "best_loss": 1.0347387790679932,
        "best_kl": 8.688882827758789,
        "best_std": 0.38299360275268557,
        "cur_kl": 9.515984535217285,
        "cur_std": 0.48467421531677246,
        "prompt": "Assistant'. Python functionbor Do thro sum of all digits Oh Usage#",
        "nll_prompt": -11.127378463745117
    },
    {
        "epoch": 60,
        "loss": 1.1712678670883179,
        "best_loss": 1.0347387790679932,
        "best_kl": 8.688882827758789,
        "best_std": 0.38299360275268557,
        "cur_kl": 9.598127365112305,
        "cur_std": 0.4645573139190674,
        "prompt": "Assistant'. Python functionbor Do thro sum of all digitsuly Usage#",
        "nll_prompt": -11.257219314575195
    },
    {
        "epoch": 61,
        "loss": 1.1192867755889893,
        "best_loss": 1.0347387790679932,
        "best_kl": 8.688882827758789,
        "best_std": 0.38299360275268557,
        "cur_kl": 9.68466854095459,
        "cur_std": 0.4472785472869873,
        "prompt": "Assistant'. Python functionbor Do68 sum of all digitsuly Usage#",
        "nll_prompt": -11.035834312438965
    },
    {
        "epoch": 62,
        "loss": 1.1640769243240356,
        "best_loss": 1.0347387790679932,
        "best_kl": 8.688882827758789,
        "best_std": 0.38299360275268557,
        "cur_kl": 9.666925430297852,
        "cur_std": 0.46514248847961426,
        "prompt": "Assistant'. Python functionbor Doai sum of all digitsuly Usage#",
        "nll_prompt": -10.815397262573242
    },
    {
        "epoch": 63,
        "loss": 1.012903094291687,
        "best_loss": 1.012903094291687,
        "best_kl": 8.688882827758789,
        "best_std": 0.38299360275268557,
        "cur_kl": 9.32753849029541,
        "cur_std": 0.4445048809051514,
        "prompt": "Assistant'. Python functionbor Doai sum of all digits sense Usage#",
        "nll_prompt": -10.524296760559082
    },
    {
        "epoch": 64,
        "loss": 1.10698664188385,
        "best_loss": 1.012903094291687,
        "best_kl": 8.688882827758789,
        "best_std": 0.38299360275268557,
        "cur_kl": 9.024836540222168,
        "cur_std": 0.4391326427459717,
        "prompt": "Assistant'. Python functionbor Dourrency sum of all digits sense Usage#",
        "nll_prompt": -10.974549293518066
    },
    {
        "epoch": 65,
        "loss": 1.0963367223739624,
        "best_loss": 1.012903094291687,
        "best_kl": 8.375062942504883,
        "best_std": 0.39196071624755857,
        "cur_kl": 8.375062942504883,
        "cur_std": 0.39196071624755857,
        "prompt": " libraries'. Python functionbor Dourrency sum of all digits sense Usage#",
        "nll_prompt": -10.041924476623535
    },
    {
        "epoch": 66,
        "loss": 1.1207281351089478,
        "best_loss": 1.012903094291687,
        "best_kl": 8.375062942504883,
        "best_std": 0.39196071624755857,
        "cur_kl": 8.588497161865234,
        "cur_std": 0.3873294353485107,
        "prompt": "Question'. Python functionbor Dourrency sum of all digits sense Usage#",
        "nll_prompt": -10.589238166809082
    },
    {
        "epoch": 67,
        "loss": 1.0919532775878906,
        "best_loss": 1.012903094291687,
        "best_kl": 8.375062942504883,
        "best_std": 0.39196071624755857,
        "cur_kl": 8.406988143920898,
        "cur_std": 0.38354954719543455,
        "prompt": " event'. Python functionbor Dourrency sum of all digits sense Usage#",
        "nll_prompt": -10.364433288574219
    },
    {
        "epoch": 68,
        "loss": 1.1195857524871826,
        "best_loss": 1.012903094291687,
        "best_kl": 8.375062942504883,
        "best_std": 0.39196071624755857,
        "cur_kl": 9.741480827331543,
        "cur_std": 0.3856640338897705,
        "prompt": " event'. Python functionbor **urrency sum of all digits sense Usage#",
        "nll_prompt": -10.504322052001953
    },
    {
        "epoch": 69,
        "loss": 1.057377576828003,
        "best_loss": 1.012903094291687,
        "best_kl": 8.375062942504883,
        "best_std": 0.39196071624755857,
        "cur_kl": 9.141215324401855,
        "cur_std": 0.3919452428817749,
        "prompt": " curious'. Python functionbor **urrency sum of all digits sense Usage#",
        "nll_prompt": -11.008801460266113
    },
    {
        "epoch": 70,
        "loss": 1.0386962890625,
        "best_loss": 1.012903094291687,
        "best_kl": 8.092001914978027,
        "best_std": 0.38352670669555666,
        "cur_kl": 8.092001914978027,
        "cur_std": 0.38352670669555666,
        "prompt": " curious'. Python functionborowurrency sum of all digits sense Usage#",
        "nll_prompt": -10.218487739562988
    },
    {
        "epoch": 71,
        "loss": 1.146340012550354,
        "best_loss": 1.012903094291687,
        "best_kl": 8.092001914978027,
        "best_std": 0.38352670669555666,
        "cur_kl": 8.43113899230957,
        "cur_std": 0.37600705623626707,
        "prompt": " curious'. Python functionbor cellarurrency sum of all digits sense Usage#",
        "nll_prompt": -10.98914623260498
    },
    {
        "epoch": 72,
        "loss": 1.1313499212265015,
        "best_loss": 1.012903094291687,
        "best_kl": 8.092001914978027,
        "best_std": 0.38352670669555666,
        "cur_kl": 9.101496696472168,
        "cur_std": 0.3772611141204834,
        "prompt": " curious'. Python functionbor cellarurrency sum of all digits significant Usage#",
        "nll_prompt": -10.703266143798828
    },
    {
        "epoch": 73,
        "loss": 1.1323214769363403,
        "best_loss": 1.012903094291687,
        "best_kl": 8.092001914978027,
        "best_std": 0.38352670669555666,
        "cur_kl": 9.393488883972168,
        "cur_std": 0.37853264808654785,
        "prompt": " curious'. Python functionbor cellarOO sum of all digits significant Usage#",
        "nll_prompt": -10.539152145385742
    },
    {
        "epoch": 74,
        "loss": 1.096540927886963,
        "best_loss": 1.012903094291687,
        "best_kl": 8.092001914978027,
        "best_std": 0.38352670669555666,
        "cur_kl": 9.100564002990723,
        "cur_std": 0.40093035697937013,
        "prompt": " curious'. Python functionbor cellarExample sum of all digits significant Usage#",
        "nll_prompt": -10.340313911437988
    },
    {
        "epoch": 75,
        "loss": 1.0723086595535278,
        "best_loss": 1.012903094291687,
        "best_kl": 8.092001914978027,
        "best_std": 0.38352670669555666,
        "cur_kl": 9.455405235290527,
        "cur_std": 0.3874253749847412,
        "prompt": " curious'. Python functionbor cellarExample sum of all digits limestone Usage#",
        "nll_prompt": -10.682304382324219
    },
    {
        "epoch": 76,
        "loss": 1.098228931427002,
        "best_loss": 1.012903094291687,
        "best_kl": 7.597466468811035,
        "best_std": 0.3472278594970703,
        "cur_kl": 7.597466468811035,
        "cur_std": 0.3472278594970703,
        "prompt": " curious'. Python functionbor cellarExample sum of all digits limestone Usage?",
        "nll_prompt": -10.463554382324219
    },
    {
        "epoch": 77,
        "loss": 0.9964184165000916,
        "best_loss": 0.9964184165000916,
        "best_kl": 6.338069915771484,
        "best_std": 0.31846482753753663,
        "cur_kl": 6.338069915771484,
        "cur_std": 0.31846482753753663,
        "prompt": " curious'. Python functionbor cellarExample sum of all digits Lak Usage?",
        "nll_prompt": -10.711078643798828
    },
    {
        "epoch": 78,
        "loss": 0.982690691947937,
        "best_loss": 0.982690691947937,
        "best_kl": 6.338069915771484,
        "best_std": 0.31846482753753663,
        "cur_kl": 6.660060882568359,
        "cur_std": 0.3320568323135376,
        "prompt": " curious'. Python functionbor cellar dioxide sum of all digits Lak Usage?",
        "nll_prompt": -10.755681037902832
    },
    {
        "epoch": 79,
        "loss": 1.069891095161438,
        "best_loss": 0.982690691947937,
        "best_kl": 6.338069915771484,
        "best_std": 0.31846482753753663,
        "cur_kl": 7.089321613311768,
        "cur_std": 0.33871819972991946,
        "prompt": " curious'. Python functionbor cellar dioxide sum of all digits Doe Usage?",
        "nll_prompt": -10.643674850463867
    },
    {
        "epoch": 80,
        "loss": 1.001722812652588,
        "best_loss": 0.982690691947937,
        "best_kl": 6.338069915771484,
        "best_std": 0.31846482753753663,
        "cur_kl": 6.66747522354126,
        "cur_std": 0.35616497993469237,
        "prompt": " curious'. Python functionhn cellar dioxide sum of all digits Doe Usage?",
        "nll_prompt": -11.514606475830078
    },
    {
        "epoch": 81,
        "loss": 0.9329795837402344,
        "best_loss": 0.9329795837402344,
        "best_kl": 6.295748233795166,
        "best_std": 0.34738831520080565,
        "cur_kl": 6.295748233795166,
        "cur_std": 0.34738831520080565,
        "prompt": " curious'. Python functionhn cellar push sum of all digits Doe Usage?",
        "nll_prompt": -11.275799751281738
    },
    {
        "epoch": 82,
        "loss": 1.0268570184707642,
        "best_loss": 0.9329795837402344,
        "best_kl": 6.295748233795166,
        "best_std": 0.34738831520080565,
        "cur_kl": 7.432016372680664,
        "cur_std": 0.39554147720336913,
        "prompt": " curious'. Python functionhn cellar push sum of Our digits Doe Usage?",
        "nll_prompt": -12.390143394470215
    },
    {
        "epoch": 83,
        "loss": 1.0976043939590454,
        "best_loss": 0.9329795837402344,
        "best_kl": 6.295748233795166,
        "best_std": 0.34738831520080565,
        "cur_kl": 7.585036277770996,
        "cur_std": 0.38804049491882325,
        "prompt": " curious'. Python functionhn cellar push sum of Our digits Doesie?",
        "nll_prompt": -12.653282165527344
    },
    {
        "epoch": 84,
        "loss": 1.0112723112106323,
        "best_loss": 0.9329795837402344,
        "best_kl": 6.295748233795166,
        "best_std": 0.34738831520080565,
        "cur_kl": 7.098602771759033,
        "cur_std": 0.4011789321899414,
        "prompt": " curious'. Python functionhn cellar push sum of yours digits Doesie?",
        "nll_prompt": -12.48920726776123
    },
    {
        "epoch": 85,
        "loss": 1.092268466949463,
        "best_loss": 0.9329795837402344,
        "best_kl": 6.295748233795166,
        "best_std": 0.34738831520080565,
        "cur_kl": 7.501945495605469,
        "cur_std": 0.3749983787536621,
        "prompt": " curious'. Python functionweeney cellar push sum of yours digits Doesie?",
        "nll_prompt": -11.737462043762207
    },
    {
        "epoch": 86,
        "loss": 1.034067153930664,
        "best_loss": 0.9329795837402344,
        "best_kl": 6.295748233795166,
        "best_std": 0.34738831520080565,
        "cur_kl": 7.786593437194824,
        "cur_std": 0.3943564653396606,
        "prompt": " curious'. Python functionweeney cellar push sum of yours digits Hilsie?",
        "nll_prompt": -11.936854362487793
    },
    {
        "epoch": 87,
        "loss": 1.077088475227356,
        "best_loss": 0.9329795837402344,
        "best_kl": 6.295748233795166,
        "best_std": 0.34738831520080565,
        "cur_kl": 7.249496936798096,
        "cur_std": 0.3768340826034546,
        "prompt": " curious'. Python functionai cellar push sum of yours digits Hilsie?",
        "nll_prompt": -11.874817848205566
    },
    {
        "epoch": 88,
        "loss": 1.0861103534698486,
        "best_loss": 0.9329795837402344,
        "best_kl": 6.295748233795166,
        "best_std": 0.34738831520080565,
        "cur_kl": 7.182436466217041,
        "cur_std": 0.3800214290618896,
        "prompt": " curious'. Python functionai cellar push sum of yours digits Hilelope?",
        "nll_prompt": -11.793248176574707
    },
    {
        "epoch": 89,
        "loss": 0.9789867997169495,
        "best_loss": 0.9329795837402344,
        "best_kl": 6.295748233795166,
        "best_std": 0.34738831520080565,
        "cur_kl": 7.672980785369873,
        "cur_std": 0.3695114850997925,
        "prompt": " cheerful'. Python functionai cellar push sum of yours digits Hilelope?",
        "nll_prompt": -11.467100143432617
    },
    {
        "epoch": 90,
        "loss": 1.0891058444976807,
        "best_loss": 0.9329795837402344,
        "best_kl": 6.295748233795166,
        "best_std": 0.34738831520080565,
        "cur_kl": 8.190058708190918,
        "cur_std": 0.3887923002243042,
        "prompt": " cheerful'. Python functionai cellar push sum of yours digits Ventelope?",
        "nll_prompt": -11.711987495422363
    },
    {
        "epoch": 91,
        "loss": 1.0582420825958252,
        "best_loss": 0.9329795837402344,
        "best_kl": 6.295748233795166,
        "best_std": 0.34738831520080565,
        "cur_kl": 7.935708045959473,
        "cur_std": 0.38095118999481203,
        "prompt": " cheerful'. Python functionai cellar push sum of yours digits Vent Manor?",
        "nll_prompt": -11.538050651550293
    },
    {
        "epoch": 92,
        "loss": 1.0773200988769531,
        "best_loss": 0.9329795837402344,
        "best_kl": 6.295748233795166,
        "best_std": 0.34738831520080565,
        "cur_kl": 7.51885461807251,
        "cur_std": 0.3760422468185425,
        "prompt": " cheerful'. Python functionai cellar push sum of yours digits Ventagram?",
        "nll_prompt": -11.229270935058594
    },
    {
        "epoch": 93,
        "loss": 1.1072452068328857,
        "best_loss": 0.9329795837402344,
        "best_kl": 6.295748233795166,
        "best_std": 0.34738831520080565,
        "cur_kl": 7.751529216766357,
        "cur_std": 0.40092830657958983,
        "prompt": " cheerful'. Python function learning cellar push sum of yours digits Ventagram?",
        "nll_prompt": -10.990574836730957
    },
    {
        "epoch": 94,
        "loss": 1.0789374113082886,
        "best_loss": 0.9329795837402344,
        "best_kl": 6.295748233795166,
        "best_std": 0.34738831520080565,
        "cur_kl": 8.358363151550293,
        "cur_std": 0.41324520111083984,
        "prompt": " cheerful'. Python function learning cellar push sum of yours digits Vent Triple?",
        "nll_prompt": -11.573051452636719
    },
    {
        "epoch": 95,
        "loss": 1.1093120574951172,
        "best_loss": 0.9329795837402344,
        "best_kl": 6.295748233795166,
        "best_std": 0.34738831520080565,
        "cur_kl": 7.835594177246094,
        "cur_std": 0.4226080417633057,
        "prompt": " cheerful'. Python function learning cellar push sum of yours digits Vent test?",
        "nll_prompt": -11.231372833251953
    },
    {
        "epoch": 96,
        "loss": 1.0969648361206055,
        "best_loss": 0.9329795837402344,
        "best_kl": 6.295748233795166,
        "best_std": 0.34738831520080565,
        "cur_kl": 7.766895771026611,
        "cur_std": 0.4355627536773682,
        "prompt": " cheerful'. Python function learning cellar developing sum of yours digits Vent test?",
        "nll_prompt": -11.257843971252441
    },
    {
        "epoch": 97,
        "loss": 1.0808796882629395,
        "best_loss": 0.9329795837402344,
        "best_kl": 6.295748233795166,
        "best_std": 0.34738831520080565,
        "cur_kl": 7.422446250915527,
        "cur_std": 0.42454824447631834,
        "prompt": " cheerful'. Python function learning cellar developing sum of yours digitsectar test?",
        "nll_prompt": -10.988121032714844
    },
    {
        "epoch": 98,
        "loss": 1.0753271579742432,
        "best_loss": 0.9329795837402344,
        "best_kl": 6.295748233795166,
        "best_std": 0.34738831520080565,
        "cur_kl": 6.839014053344727,
        "cur_std": 0.3804797649383545,
        "prompt": " chores'. Python function learning cellar developing sum of yours digitsectar test?",
        "nll_prompt": -10.880918502807617
    },
    {
        "epoch": 99,
        "loss": 1.0801750421524048,
        "best_loss": 0.9329795837402344,
        "best_kl": 6.295748233795166,
        "best_std": 0.34738831520080565,
        "cur_kl": 6.791994571685791,
        "cur_std": 0.3896726846694946,
        "prompt": " chores'. Python function learning cellars sum of yours digitsectar test?",
        "nll_prompt": -10.79655647277832
    },
    {
        "epoch": 100,
        "loss": 1.052858591079712,
        "best_loss": 0.9329795837402344,
        "best_kl": 6.295748233795166,
        "best_std": 0.34738831520080565,
        "cur_kl": 6.830419063568115,
        "cur_std": 0.38866918087005614,
        "prompt": " chores'. Python function learning cellars sum of yours digitsxton test?",
        "nll_prompt": -10.66983699798584
    }
]