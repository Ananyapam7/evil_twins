[
    {
        "epoch": 1,
        "loss": 1.303987741470337,
        "best_loss": 1.303987741470337,
        "best_kl": 20.508939743041992,
        "best_std": 0.621437931060791,
        "cur_kl": 20.508939743041992,
        "cur_std": 0.621437931060791,
        "prompt": "Write a Python function called count_vowels that ham a string as",
        "nll_prompt": -3.2259645462036133
    },
    {
        "epoch": 2,
        "loss": 1.0606719255447388,
        "best_loss": 1.0606719255447388,
        "best_kl": 15.683686256408691,
        "best_std": 0.5674513339996338,
        "cur_kl": 15.683686256408691,
        "cur_std": 0.5674513339996338,
        "prompt": "Write a Python function called count_vowels that ham a string frameworks",
        "nll_prompt": -4.700295925140381
    },
    {
        "epoch": 3,
        "loss": 0.9900038838386536,
        "best_loss": 0.9900038838386536,
        "best_kl": 15.683686256408691,
        "best_std": 0.5674513339996338,
        "cur_kl": 17.172279357910156,
        "cur_std": 0.599266242980957,
        "prompt": "Write a Python function called count_vowels that ham a or frameworks",
        "nll_prompt": -4.807284832000732
    },
    {
        "epoch": 4,
        "loss": 0.9840672612190247,
        "best_loss": 0.9840672612190247,
        "best_kl": 15.683686256408691,
        "best_std": 0.5674513339996338,
        "cur_kl": 16.63275909423828,
        "cur_std": 0.5722390651702881,
        "prompt": "Write a Python function called count_vowels that ham a or forwards",
        "nll_prompt": -4.766549110412598
    },
    {
        "epoch": 5,
        "loss": 0.9537638425827026,
        "best_loss": 0.9537638425827026,
        "best_kl": 15.683686256408691,
        "best_std": 0.5674513339996338,
        "cur_kl": 16.191593170166016,
        "cur_std": 0.5183234214782715,
        "prompt": "Write a Python function called count_vowels that ham 19 or forwards",
        "nll_prompt": -4.812472820281982
    },
    {
        "epoch": 6,
        "loss": 1.02426278591156,
        "best_loss": 0.9537638425827026,
        "best_kl": 13.671889305114746,
        "best_std": 0.47733473777770996,
        "cur_kl": 13.671889305114746,
        "cur_std": 0.47733473777770996,
        "prompt": " flower a Python function called count_vowels that ham 19 or forwards",
        "nll_prompt": -5.655856609344482
    },
    {
        "epoch": 7,
        "loss": 0.7501965761184692,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.94629955291748,
        "best_std": 0.5215147495269775,
        "cur_kl": 12.94629955291748,
        "cur_std": 0.5215147495269775,
        "prompt": " flower a Python function example count_vowels that ham 19 or forwards",
        "nll_prompt": -6.382994651794434
    },
    {
        "epoch": 8,
        "loss": 0.8395569920539856,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.94629955291748,
        "best_std": 0.5215147495269775,
        "cur_kl": 13.322175025939941,
        "cur_std": 0.5519492149353027,
        "prompt": " flower a Python function example count_vowels that hamgorith or forwards",
        "nll_prompt": -6.96580171585083
    },
    {
        "epoch": 9,
        "loss": 0.810745894908905,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.94629955291748,
        "best_std": 0.5215147495269775,
        "cur_kl": 13.141340255737305,
        "cur_std": 0.5662106990814209,
        "prompt": " flower a Python function example count_vowels that ham misguided or forwards",
        "nll_prompt": -6.571938514709473
    },
    {
        "epoch": 10,
        "loss": 0.9019810557365417,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.56277847290039,
        "best_std": 0.5412486076354981,
        "cur_kl": 12.56277847290039,
        "cur_std": 0.5412486076354981,
        "prompt": " flower On Python function example count_vowels that ham misguided or forwards",
        "nll_prompt": -8.325274467468262
    },
    {
        "epoch": 11,
        "loss": 0.9203038811683655,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.56277847290039,
        "best_std": 0.5412486076354981,
        "cur_kl": 13.084573745727539,
        "cur_std": 0.5699227809906006,
        "prompt": " flower On Python function example count_vowels that ham misguided orwang",
        "nll_prompt": -8.740453720092773
    },
    {
        "epoch": 12,
        "loss": 0.8125364780426025,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 12.285051345825195,
        "cur_std": 0.5824150085449219,
        "prompt": " flower On Python function example count_vowels that ham gravity orwang",
        "nll_prompt": -8.64669132232666
    },
    {
        "epoch": 13,
        "loss": 0.8225378394126892,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 12.86716079711914,
        "cur_std": 0.539995527267456,
        "prompt": " flower On Python function example count_vowels that ham unchanged orwang",
        "nll_prompt": -8.647693634033203
    },
    {
        "epoch": 14,
        "loss": 0.8609087467193604,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 13.135703086853027,
        "cur_std": 0.5855110645294189,
        "prompt": " flower On Python function example count_vowels that ham unchanged Multiplewang",
        "nll_prompt": -9.35507869720459
    },
    {
        "epoch": 15,
        "loss": 0.8963727951049805,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 13.736204147338867,
        "cur_std": 0.6129782676696778,
        "prompt": " flower On Python function example count_vowels Processing ham unchanged Multiplewang",
        "nll_prompt": -9.611916542053223
    },
    {
        "epoch": 16,
        "loss": 0.9381499290466309,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 13.003470420837402,
        "cur_std": 0.6071408271789551,
        "prompt": " flower On Python function example count_vowels Processing ham unchanged Alexwang",
        "nll_prompt": -9.561981201171875
    },
    {
        "epoch": 17,
        "loss": 0.793075442314148,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 13.565773963928223,
        "cur_std": 0.6478872299194336,
        "prompt": " flower On Python function example count becausevowels Processing ham unchanged Alexwang",
        "nll_prompt": -10.332287788391113
    },
    {
        "epoch": 18,
        "loss": 0.8239855766296387,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 13.89186954498291,
        "cur_std": 0.6357894897460937,
        "prompt": " flower On Python function example count becausevowels Processingimir unchanged Alexwang",
        "nll_prompt": -10.413548469543457
    },
    {
        "epoch": 19,
        "loss": 0.9018926620483398,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 14.923307418823242,
        "cur_std": 0.6494040966033936,
        "prompt": " flower On Python functionded count becausevowels Processingimir unchanged Alexwang",
        "nll_prompt": -11.48178768157959
    },
    {
        "epoch": 20,
        "loss": 0.9101279973983765,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 16.67147445678711,
        "cur_std": 0.6468234062194824,
        "prompt": " flower On Python functionded count becausevowels Processingimir Department Alexwang",
        "nll_prompt": -11.294739723205566
    },
    {
        "epoch": 21,
        "loss": 0.9935564994812012,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 16.48333168029785,
        "cur_std": 0.6244815826416016,
        "prompt": " flower On Python functionded count becausevowels Processingimir Thomas Alexwang",
        "nll_prompt": -10.861573219299316
    },
    {
        "epoch": 22,
        "loss": 0.968501091003418,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 15.197559356689453,
        "cur_std": 0.6020954132080079,
        "prompt": " flower On Python functionded count becausevowels thouimir Thomas Alexwang",
        "nll_prompt": -11.27700138092041
    },
    {
        "epoch": 23,
        "loss": 1.0060980319976807,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 14.458723068237305,
        "cur_std": 0.6470597743988037,
        "prompt": " flower On Python function Prot count becausevowels thouimir Thomas Alexwang",
        "nll_prompt": -11.067719459533691
    },
    {
        "epoch": 24,
        "loss": 0.9867535829544067,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 14.360368728637695,
        "cur_std": 0.6244469165802002,
        "prompt": " flower On Python function Prot count becausevowels thouimir Thomas Alex Robertson",
        "nll_prompt": -10.850645065307617
    },
    {
        "epoch": 25,
        "loss": 0.8826956748962402,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 12.89638900756836,
        "cur_std": 0.639060640335083,
        "prompt": " flower On Python function John count becausevowels thouimir Thomas Alex Robertson",
        "nll_prompt": -10.597623825073242
    },
    {
        "epoch": 26,
        "loss": 0.9452095627784729,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 15.680559158325195,
        "cur_std": 0.5668905735015869,
        "prompt": " flower On Python function John count becausevowels thouimir Thomas Alex since",
        "nll_prompt": -10.429100036621094
    },
    {
        "epoch": 27,
        "loss": 0.9263609647750854,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 16.38022232055664,
        "cur_std": 0.6301274776458741,
        "prompt": " flower On Python function John count becausevowels stampedimir Thomas Alex since",
        "nll_prompt": -10.494890213012695
    },
    {
        "epoch": 28,
        "loss": 1.0235750675201416,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 17.179967880249023,
        "cur_std": 0.6376794815063477,
        "prompt": " flower On Python function John count becausevowels stampedimir Thomas environment since",
        "nll_prompt": -10.490748405456543
    },
    {
        "epoch": 29,
        "loss": 0.9745837450027466,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 16.50459861755371,
        "cur_std": 0.63932785987854,
        "prompt": " flower On Python function John count becausevowels stampedimir go environment since",
        "nll_prompt": -10.477362632751465
    },
    {
        "epoch": 30,
        "loss": 0.944598376750946,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 14.229549407958984,
        "cur_std": 0.663846492767334,
        "prompt": " flower On Python function John count becausevowels stampedimir go environmention",
        "nll_prompt": -10.64588737487793
    },
    {
        "epoch": 31,
        "loss": 0.8684191107749939,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 14.497678756713867,
        "cur_std": 0.5762159824371338,
        "prompt": " flower On Python function John count becausevowels stampedimir go environment?\"",
        "nll_prompt": -10.359058380126953
    },
    {
        "epoch": 32,
        "loss": 0.8682482838630676,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 14.04839038848877,
        "cur_std": 0.5632217407226563,
        "prompt": " flower On Python function John count becausevowels weddingimir go environment?\"",
        "nll_prompt": -10.039337158203125
    },
    {
        "epoch": 33,
        "loss": 0.9476063847541809,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 13.76077651977539,
        "cur_std": 0.5554240226745606,
        "prompt": " flower On Python function John count becausevowels weddingimir goial?\"",
        "nll_prompt": -10.437052726745605
    },
    {
        "epoch": 34,
        "loss": 0.9210886359214783,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 12.9816255569458,
        "cur_std": 0.5578145503997802,
        "prompt": " flower On Python function John count becausevowelsodeimir goial?\"",
        "nll_prompt": -10.738359451293945
    },
    {
        "epoch": 35,
        "loss": 0.8328942060470581,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 12.719599723815918,
        "cur_std": 0.5468592166900634,
        "prompt": " flower On Python function John count becausevowels Stringimir goial?\"",
        "nll_prompt": -10.116008758544922
    },
    {
        "epoch": 36,
        "loss": 0.8548230528831482,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 13.308544158935547,
        "cur_std": 0.5018728256225586,
        "prompt": " flower On Python function John count becausevowelsˈimir goial?\"",
        "nll_prompt": -10.57205867767334
    },
    {
        "epoch": 37,
        "loss": 0.871483564376831,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 13.699893951416016,
        "cur_std": 0.5694527149200439,
        "prompt": " flower On Python function John count becausevowels rowimir goial?\"",
        "nll_prompt": -10.563206672668457
    },
    {
        "epoch": 38,
        "loss": 0.8939980864524841,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 13.342887878417969,
        "cur_std": 0.5677417278289795,
        "prompt": " flower On Python function John count becausevowels conserveimir goial?\"",
        "nll_prompt": -10.50177001953125
    },
    {
        "epoch": 39,
        "loss": 0.9437066316604614,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 12.92239761352539,
        "cur_std": 0.5773766994476318,
        "prompt": " flower On Python function John count becausevowels conserveimirerial?\"",
        "nll_prompt": -10.136236190795898
    },
    {
        "epoch": 40,
        "loss": 0.921479344367981,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 12.97320556640625,
        "cur_std": 0.5668912410736084,
        "prompt": " flower On Python function John count becausevowels siteimirerial?\"",
        "nll_prompt": -10.408698081970215
    },
    {
        "epoch": 41,
        "loss": 0.8700070977210999,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 12.846088409423828,
        "cur_std": 0.5476325988769531,
        "prompt": " flower On Python function John count becausevowels thenimirerial?\"",
        "nll_prompt": -9.863250732421875
    },
    {
        "epoch": 42,
        "loss": 0.8905680179595947,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 13.099374771118164,
        "cur_std": 0.5320075511932373,
        "prompt": " flower On Python function On count becausevowels thenimirerial?\"",
        "nll_prompt": -9.520971298217773
    },
    {
        "epoch": 43,
        "loss": 0.8932017087936401,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 13.664477348327637,
        "cur_std": 0.5652264595031739,
        "prompt": " flower On Python function On count becausevow visual thenimirerial?\"",
        "nll_prompt": -10.58267879486084
    },
    {
        "epoch": 44,
        "loss": 0.8029681444168091,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 13.713682174682617,
        "cur_std": 0.5705158233642578,
        "prompt": " flower On Python function On count becausevow divine thenimirerial?\"",
        "nll_prompt": -10.094256401062012
    },
    {
        "epoch": 45,
        "loss": 0.9873286485671997,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 15.301497459411621,
        "cur_std": 0.5654287815093995,
        "prompt": " flower On Python function On count becausevow divine thenimir Mial?\"",
        "nll_prompt": -10.722105026245117
    },
    {
        "epoch": 46,
        "loss": 1.0268352031707764,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 15.423232078552246,
        "cur_std": 0.5755288600921631,
        "prompt": " flower On Python function On count becausevow divine then Moses Mial?\"",
        "nll_prompt": -10.645054817199707
    },
    {
        "epoch": 47,
        "loss": 1.0256730318069458,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 14.812663078308105,
        "cur_std": 0.5699995517730713,
        "prompt": " flower On Python function On count becausevow divine then Moses loopial?\"",
        "nll_prompt": -10.59892463684082
    },
    {
        "epoch": 48,
        "loss": 0.8783186674118042,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 14.68021297454834,
        "cur_std": 0.5584569454193116,
        "prompt": " flower On Python function On count becausevow divine then Moses Checkial?\"",
        "nll_prompt": -11.041600227355957
    },
    {
        "epoch": 49,
        "loss": 0.9631739854812622,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 13.585993766784668,
        "cur_std": 0.5535472393035888,
        "prompt": " flower On Python function On count becausevowHello then Moses Checkial?\"",
        "nll_prompt": -11.111363410949707
    },
    {
        "epoch": 50,
        "loss": 0.9061744213104248,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 12.844618797302246,
        "cur_std": 0.5436236381530761,
        "prompt": " flower On Python function On count becausevowHello Va Moses Checkial?\"",
        "nll_prompt": -11.690275192260742
    },
    {
        "epoch": 51,
        "loss": 0.9124705791473389,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 13.494215965270996,
        "cur_std": 0.5558336257934571,
        "prompt": " flower On Python function for count becausevowHello Va Moses Checkial?\"",
        "nll_prompt": -11.361638069152832
    },
    {
        "epoch": 52,
        "loss": 0.9016907811164856,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 12.573908805847168,
        "cur_std": 0.5271999359130859,
        "prompt": " flower On Python function for count countingvowHello Va Moses Checkial?\"",
        "nll_prompt": -11.100852966308594
    },
    {
        "epoch": 53,
        "loss": 0.9299356341362,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 14.5706148147583,
        "cur_std": 0.5935799598693847,
        "prompt": " flower On Python functionlength count countingvowHello Va Moses Checkial?\"",
        "nll_prompt": -11.571775436401367
    },
    {
        "epoch": 54,
        "loss": 0.8359718322753906,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 13.613801956176758,
        "cur_std": 0.5613913536071777,
        "prompt": " flower On Python functionlength count countingvowHello Va Mosesensionial?\"",
        "nll_prompt": -11.49311637878418
    },
    {
        "epoch": 55,
        "loss": 0.8992507457733154,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 13.122211456298828,
        "cur_std": 0.5813002586364746,
        "prompt": " flower On Python functionlength count countingvowHello more Mosesensionial?\"",
        "nll_prompt": -11.117908477783203
    },
    {
        "epoch": 56,
        "loss": 0.9056554436683655,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 12.909923553466797,
        "cur_std": 0.5434971809387207,
        "prompt": " flower On Python function� count countingvowHello more Mosesensionial?\"",
        "nll_prompt": -11.352161407470703
    },
    {
        "epoch": 57,
        "loss": 0.9097747802734375,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 13.288522720336914,
        "cur_std": 0.5595396518707275,
        "prompt": " flower On Python function� count countingv forHello more Mosesensionial?\"",
        "nll_prompt": -12.174548149108887
    },
    {
        "epoch": 58,
        "loss": 0.810001790523529,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 13.212071418762207,
        "cur_std": 0.5521069526672363,
        "prompt": " flower On Python function� count countingv forHello more Mosesossibleial?\"",
        "nll_prompt": -12.560199737548828
    },
    {
        "epoch": 59,
        "loss": 1.0121254920959473,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 13.644379615783691,
        "cur_std": 0.5775381088256836,
        "prompt": " flower On Python function� count countingv forHello more Moses�ial?\"",
        "nll_prompt": -12.11406135559082
    },
    {
        "epoch": 60,
        "loss": 0.9112115502357483,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 14.85632038116455,
        "cur_std": 0.5894553661346436,
        "prompt": " flower On Python function experience count countingv forHello more Moses�ial?\"",
        "nll_prompt": -11.589503288269043
    },
    {
        "epoch": 61,
        "loss": 0.9590421915054321,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 14.722831726074219,
        "cur_std": 0.5835648059844971,
        "prompt": " flower On Python function experience count countingv forHello Wind Moses�ial?\"",
        "nll_prompt": -11.674046516418457
    },
    {
        "epoch": 62,
        "loss": 0.9554640054702759,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 16.05937385559082,
        "cur_std": 0.5759704113006592,
        "prompt": " flower On Python N experience count countingv forHello Wind Moses�ial?\"",
        "nll_prompt": -11.796360969543457
    },
    {
        "epoch": 63,
        "loss": 0.9790153503417969,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 16.484479904174805,
        "cur_std": 0.5635927677154541,
        "prompt": " flower On Python N experience count countingv forHello study Moses�ial?\"",
        "nll_prompt": -11.779071807861328
    },
    {
        "epoch": 64,
        "loss": 1.0716952085494995,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 17.642850875854492,
        "cur_std": 0.5906559944152832,
        "prompt": " flower On Python teaching experience count countingv forHello study Moses�ial?\"",
        "nll_prompt": -11.596381187438965
    },
    {
        "epoch": 65,
        "loss": 0.9765389561653137,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 16.427331924438477,
        "cur_std": 0.5775415420532226,
        "prompt": " flower On Python teachingode count countingv forHello study Moses�ial?\"",
        "nll_prompt": -12.276044845581055
    },
    {
        "epoch": 66,
        "loss": 1.0216755867004395,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 15.084699630737305,
        "cur_std": 0.5790251731872559,
        "prompt": " flower On Python teachingode count countingv forHello studyear�ial?\"",
        "nll_prompt": -12.007458686828613
    },
    {
        "epoch": 67,
        "loss": 0.9399580955505371,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 15.053170204162598,
        "cur_std": 0.5872951507568359,
        "prompt": " flower On Python sameode count countingv forHello studyear�ial?\"",
        "nll_prompt": -11.65867805480957
    },
    {
        "epoch": 68,
        "loss": 0.9550445079803467,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 14.925458908081055,
        "cur_std": 0.6080750465393067,
        "prompt": " flower On Python sameode count counting developed forHello studyear�ial?\"",
        "nll_prompt": -11.850955963134766
    },
    {
        "epoch": 69,
        "loss": 0.973966658115387,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 15.297014236450195,
        "cur_std": 0.5847738265991211,
        "prompt": " flower On Python sameode count countingud forHello studyear�ial?\"",
        "nll_prompt": -11.676689147949219
    },
    {
        "epoch": 70,
        "loss": 0.9361787438392639,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 15.485179901123047,
        "cur_std": 0.6100869655609131,
        "prompt": " flower On Python sameodeinct countingud forHello studyear�ial?\"",
        "nll_prompt": -12.374809265136719
    },
    {
        "epoch": 71,
        "loss": 0.9896197319030762,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 15.62297248840332,
        "cur_std": 0.58792142868042,
        "prompt": " flower On Python Doodeinct countingud forHello studyear�ial?\"",
        "nll_prompt": -12.501605987548828
    },
    {
        "epoch": 72,
        "loss": 0.9911268949508667,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 15.361443519592285,
        "cur_std": 0.6158730506896972,
        "prompt": " flower R Python Doodeinct countingud forHello studyear�ial?\"",
        "nll_prompt": -12.49903392791748
    },
    {
        "epoch": 73,
        "loss": 0.879399299621582,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 15.289616584777832,
        "cur_std": 0.6106795310974121,
        "prompt": " flower R Python Doodeinct countingud forHello studyFl�ial?\"",
        "nll_prompt": -12.602710723876953
    },
    {
        "epoch": 74,
        "loss": 0.9714644551277161,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 15.240588188171387,
        "cur_std": 0.5923188209533692,
        "prompt": " flower R Python Doodeinct counting antip forHello studyFl�ial?\"",
        "nll_prompt": -12.916624069213867
    },
    {
        "epoch": 75,
        "loss": 0.9575188755989075,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 14.918036460876465,
        "cur_std": 0.604625654220581,
        "prompt": " flower R Python Doodeinct counting antip forHello studyFlersonial?\"",
        "nll_prompt": -12.407645225524902
    },
    {
        "epoch": 76,
        "loss": 0.983049213886261,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 15.437748908996582,
        "cur_std": 0.6172504425048828,
        "prompt": " flower variety Python Doodeinct counting antip forHello studyFlersonial?\"",
        "nll_prompt": -12.094452857971191
    },
    {
        "epoch": 77,
        "loss": 0.9557550549507141,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 15.151755332946777,
        "cur_std": 0.6135312080383301,
        "prompt": " flower variety Python Doodeinct counting antip forHello secondFlersonial?\"",
        "nll_prompt": -12.171382904052734
    },
    {
        "epoch": 78,
        "loss": 1.000740885734558,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 15.28640079498291,
        "cur_std": 0.605240774154663,
        "prompt": " flower variety Python Doodeinct countingback forHello secondFlersonial?\"",
        "nll_prompt": -11.905997276306152
    },
    {
        "epoch": 79,
        "loss": 1.0216987133026123,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 15.319602012634277,
        "cur_std": 0.5993722438812256,
        "prompt": " flower variety Python Doodeinct counting almost forHello secondFlersonial?\"",
        "nll_prompt": -11.962699890136719
    },
    {
        "epoch": 80,
        "loss": 0.9142777323722839,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 15.498295783996582,
        "cur_std": 0.6018742084503174,
        "prompt": " flower variety Python Doodeinct countingista forHello secondFlersonial?\"",
        "nll_prompt": -11.75852108001709
    },
    {
        "epoch": 81,
        "loss": 0.9436343312263489,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 15.985855102539062,
        "cur_std": 0.5840500831604004,
        "prompt": " flower variety Python Doodeinct countingista forHello \"Flersonial?\"",
        "nll_prompt": -11.054383277893066
    },
    {
        "epoch": 82,
        "loss": 1.0155729055404663,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 15.308673858642578,
        "cur_std": 0.6013189792633057,
        "prompt": " flower variety Python widelyodeinct countingista forHello \"Flersonial?\"",
        "nll_prompt": -11.561284065246582
    },
    {
        "epoch": 83,
        "loss": 0.9854819178581238,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 15.407685279846191,
        "cur_std": 0.5961367130279541,
        "prompt": " flower variety Python widelyodeinct counting Brilliant forHello \"Flersonial?\"",
        "nll_prompt": -11.888463020324707
    },
    {
        "epoch": 84,
        "loss": 0.9320970177650452,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 14.724104881286621,
        "cur_std": 0.6424671173095703,
        "prompt": " flower variety Python widelyodeinct counting pineapple forHello \"Flersonial?\"",
        "nll_prompt": -11.87452507019043
    },
    {
        "epoch": 85,
        "loss": 0.9104337692260742,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 15.136453628540039,
        "cur_std": 0.6255670547485351,
        "prompt": " flower variety Python widelyodeinct countingobb forHello \"Flersonial?\"",
        "nll_prompt": -12.077232360839844
    },
    {
        "epoch": 86,
        "loss": 0.9759588241577148,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 14.704812049865723,
        "cur_std": 0.6461269378662109,
        "prompt": " flower variety Python widelyodeinct counting construct forHello \"Flersonial?\"",
        "nll_prompt": -11.305225372314453
    },
    {
        "epoch": 87,
        "loss": 0.9101397395133972,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 14.101945877075195,
        "cur_std": 0.6309187412261963,
        "prompt": " flower variety Python widely Estinct counting construct forHello \"Flersonial?\"",
        "nll_prompt": -10.699336051940918
    },
    {
        "epoch": 88,
        "loss": 0.799812912940979,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 14.552770614624023,
        "cur_std": 0.638752555847168,
        "prompt": " flower variety Python widely Fordinct counting construct forHello \"Flersonial?\"",
        "nll_prompt": -11.200493812561035
    },
    {
        "epoch": 89,
        "loss": 0.8653538823127747,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 13.965807914733887,
        "cur_std": 0.651447868347168,
        "prompt": " flower variety Python widely Fordeworthy counting construct forHello \"Flersonial?\"",
        "nll_prompt": -10.983701705932617
    },
    {
        "epoch": 90,
        "loss": 0.7807933688163757,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 14.231634140014648,
        "cur_std": 0.6503557205200196,
        "prompt": " flower variety Python widely Fordeworthy counting construct forHello \"FlPersonial?\"",
        "nll_prompt": -11.355518341064453
    },
    {
        "epoch": 91,
        "loss": 0.8774566650390625,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 14.756000518798828,
        "cur_std": 0.6669427394866944,
        "prompt": " flowerized Python widely Fordeworthy counting construct forHello \"FlPersonial?\"",
        "nll_prompt": -11.35819149017334
    },
    {
        "epoch": 92,
        "loss": 0.9401123523712158,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 15.0575590133667,
        "cur_std": 0.6663793563842774,
        "prompt": " flowerized Python widely Fordeworthy counting scenario forHello \"FlPersonial?\"",
        "nll_prompt": -11.21237850189209
    },
    {
        "epoch": 93,
        "loss": 0.9406249523162842,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 16.34258460998535,
        "cur_std": 0.6626893997192382,
        "prompt": " tabized Python widely Fordeworthy counting scenario forHello \"FlPersonial?\"",
        "nll_prompt": -11.155327796936035
    },
    {
        "epoch": 94,
        "loss": 0.9878146648406982,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 17.11919403076172,
        "cur_std": 0.6621417999267578,
        "prompt": " tabized Python widely Fordeworthy counting scenario MinHello \"FlPersonial?\"",
        "nll_prompt": -11.554224967956543
    },
    {
        "epoch": 95,
        "loss": 1.0184342861175537,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 17.06496238708496,
        "cur_std": 0.6308832168579102,
        "prompt": " tabized Pythonphony Fordeworthy counting scenario MinHello \"FlPersonial?\"",
        "nll_prompt": -11.75633430480957
    },
    {
        "epoch": 96,
        "loss": 0.8940011262893677,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 16.559118270874023,
        "cur_std": 0.6478653907775879,
        "prompt": " tab Engineers Pythonphony Fordeworthy counting scenario MinHello \"FlPersonial?\"",
        "nll_prompt": -12.031761169433594
    },
    {
        "epoch": 97,
        "loss": 1.003522515296936,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 16.543119430541992,
        "cur_std": 0.6353855133056641,
        "prompt": " gl Engineers Pythonphony Fordeworthy counting scenario MinHello \"FlPersonial?\"",
        "nll_prompt": -12.020709991455078
    },
    {
        "epoch": 98,
        "loss": 0.987616777420044,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 16.159372329711914,
        "cur_std": 0.6017777919769287,
        "prompt": " gl Engineers Pythonphony Fordeworthy counting scenario lengthHello \"FlPersonial?\"",
        "nll_prompt": -11.964109420776367
    },
    {
        "epoch": 99,
        "loss": 0.978455126285553,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 16.114328384399414,
        "cur_std": 0.6114390373229981,
        "prompt": " gl Engineers Pythonphony creativeeworthy counting scenario lengthHello \"FlPersonial?\"",
        "nll_prompt": -12.07804012298584
    },
    {
        "epoch": 100,
        "loss": 0.9659814238548279,
        "best_loss": 0.7501965761184692,
        "best_kl": 12.285051345825195,
        "best_std": 0.5824150085449219,
        "cur_kl": 16.69184684753418,
        "cur_std": 0.6265294075012207,
        "prompt": " gl Engineers Pythonphony creativeeworthy counting scenario lengthHello \"Flerial?\"",
        "nll_prompt": -11.56391429901123
    }
]