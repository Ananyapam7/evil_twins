[
    {
        "epoch": 1,
        "loss": 1.1311813592910767,
        "best_loss": 1.1311813592910767,
        "best_kl": 9.659676551818848,
        "best_std": 0.6485165119171142,
        "cur_kl": 9.659676551818848,
        "cur_std": 0.6485165119171142,
        "prompt": "\"Write a Python function to check if a given key exists in.). dictionary",
        "nll_prompt": -3.8662116527557373
    },
    {
        "epoch": 2,
        "loss": 1.1059943437576294,
        "best_loss": 1.1059943437576294,
        "best_kl": 9.659676551818848,
        "best_std": 0.6485165119171142,
        "cur_kl": 9.694794654846191,
        "cur_std": 0.5884820938110351,
        "prompt": "uckingWrite a Python function to check if a given key exists in.). dictionary",
        "nll_prompt": -4.796908855438232
    },
    {
        "epoch": 3,
        "loss": 1.1485440731048584,
        "best_loss": 1.1059943437576294,
        "best_kl": 9.659676551818848,
        "best_std": 0.6485165119171142,
        "cur_kl": 10.060306549072266,
        "cur_std": 0.6380368709564209,
        "prompt": "uckingWrite a Python function to check if a given key exists -.). dictionary",
        "nll_prompt": -5.465512752532959
    },
    {
        "epoch": 4,
        "loss": 1.085657000541687,
        "best_loss": 1.085657000541687,
        "best_kl": 9.659676551818848,
        "best_std": 0.6485165119171142,
        "cur_kl": 9.934392929077148,
        "cur_std": 0.7055851459503174,
        "prompt": "'Write a Python function to check if a given key exists -.). dictionary",
        "nll_prompt": -4.57466459274292
    },
    {
        "epoch": 5,
        "loss": 1.1109867095947266,
        "best_loss": 1.085657000541687,
        "best_kl": 9.659676551818848,
        "best_std": 0.6485165119171142,
        "cur_kl": 11.423246383666992,
        "cur_std": 0.6182292938232422,
        "prompt": "'Write a Python function to check if a given key exists -.). recl",
        "nll_prompt": -5.119307994842529
    },
    {
        "epoch": 6,
        "loss": 1.0896344184875488,
        "best_loss": 1.085657000541687,
        "best_kl": 7.816806316375732,
        "best_std": 0.4906418800354004,
        "cur_kl": 7.816806316375732,
        "cur_std": 0.4906418800354004,
        "prompt": "'Write a Python function to check if a given key exists -.)..)",
        "nll_prompt": -4.588057994842529
    },
    {
        "epoch": 7,
        "loss": 1.0668742656707764,
        "best_loss": 1.0668742656707764,
        "best_kl": 7.441904067993164,
        "best_std": 0.4168239593505859,
        "cur_kl": 7.441904067993164,
        "cur_std": 0.4168239593505859,
        "prompt": "' Sk a Python function to check if a given key exists -.)..)",
        "nll_prompt": -6.549226760864258
    },
    {
        "epoch": 8,
        "loss": 1.1090658903121948,
        "best_loss": 1.0668742656707764,
        "best_kl": 7.441904067993164,
        "best_std": 0.4168239593505859,
        "cur_kl": 8.928939819335938,
        "cur_std": 0.43070783615112307,
        "prompt": "' Sk a Python_ to check if a given key exists -.)..)",
        "nll_prompt": -7.723459243774414
    },
    {
        "epoch": 9,
        "loss": 1.0623408555984497,
        "best_loss": 1.0623408555984497,
        "best_kl": 7.441904067993164,
        "best_std": 0.4168239593505859,
        "cur_kl": 8.575507164001465,
        "cur_std": 0.539121675491333,
        "prompt": "' Sk a Python_ to check if a given key exists -####.)",
        "nll_prompt": -7.53938627243042
    },
    {
        "epoch": 10,
        "loss": 1.0699535608291626,
        "best_loss": 1.0623408555984497,
        "best_kl": 7.441904067993164,
        "best_std": 0.4168239593505859,
        "cur_kl": 7.501126766204834,
        "cur_std": 0.43673858642578123,
        "prompt": "' Sk a Python_ to check if a given key exists -####%.",
        "nll_prompt": -7.60969877243042
    },
    {
        "epoch": 11,
        "loss": 1.0541820526123047,
        "best_loss": 1.0541820526123047,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 7.16550874710083,
        "cur_std": 0.396302318572998,
        "prompt": " soda Sk a Python_ to check if a given key exists -####%.",
        "nll_prompt": -7.9064860343933105
    },
    {
        "epoch": 12,
        "loss": 1.0589096546173096,
        "best_loss": 1.0541820526123047,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 8.25052547454834,
        "cur_std": 0.41453237533569337,
        "prompt": " soda Sk a Python_ to check if a given key exists events####%.",
        "nll_prompt": -8.799333572387695
    },
    {
        "epoch": 13,
        "loss": 1.0576269626617432,
        "best_loss": 1.0541820526123047,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 8.35910701751709,
        "cur_std": 0.39965932369232177,
        "prompt": " soda Sk a Python_ to check if a given key exists most####%.",
        "nll_prompt": -8.478758811950684
    },
    {
        "epoch": 14,
        "loss": 1.0650324821472168,
        "best_loss": 1.0541820526123047,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 8.23966121673584,
        "cur_std": 0.40779681205749513,
        "prompt": " Use Sk a Python_ to check if a given key exists most####%.",
        "nll_prompt": -7.713053226470947
    },
    {
        "epoch": 15,
        "loss": 1.1163579225540161,
        "best_loss": 1.0541820526123047,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 8.606012344360352,
        "cur_std": 0.43135805130004884,
        "prompt": " Use Sk a Python_ to check if a given key exists most Fu%.",
        "nll_prompt": -7.965505123138428
    },
    {
        "epoch": 16,
        "loss": 1.1067688465118408,
        "best_loss": 1.0541820526123047,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 8.95145320892334,
        "cur_std": 0.42981276512145994,
        "prompt": " rash Sk a Python_ to check if a given key exists most Fu%.",
        "nll_prompt": -8.585075378417969
    },
    {
        "epoch": 17,
        "loss": 1.0866795778274536,
        "best_loss": 1.0541820526123047,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 8.777169227600098,
        "cur_std": 0.4504522800445557,
        "prompt": "Launch Sk a Python_ to check if a given key exists most Fu%.",
        "nll_prompt": -8.110159873962402
    },
    {
        "epoch": 18,
        "loss": 1.0003365278244019,
        "best_loss": 1.0003365278244019,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 8.812566757202148,
        "cur_std": 0.46001548767089845,
        "prompt": " Key Sk a Python_ to check if a given key exists most Fu%.",
        "nll_prompt": -8.140081405639648
    },
    {
        "epoch": 19,
        "loss": 1.1320178508758545,
        "best_loss": 1.0003365278244019,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 8.520920753479004,
        "cur_std": 0.45169939994812014,
        "prompt": "izes Sk a Python_ to check if a given key exists most Fu%.",
        "nll_prompt": -8.184926986694336
    },
    {
        "epoch": 20,
        "loss": 1.1231204271316528,
        "best_loss": 1.0003365278244019,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 9.240096092224121,
        "cur_std": 0.41439199447631836,
        "prompt": " atomic Sk a Python_ to check if a given key exists most Fu%.",
        "nll_prompt": -8.36291217803955
    },
    {
        "epoch": 21,
        "loss": 1.0055010318756104,
        "best_loss": 1.0003365278244019,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 8.212285995483398,
        "cur_std": 0.39995250701904295,
        "prompt": " atomic Sk a Python_ to check if a given key exists most Fu$.",
        "nll_prompt": -8.179876327514648
    },
    {
        "epoch": 22,
        "loss": 1.0399388074874878,
        "best_loss": 1.0003365278244019,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 8.356902122497559,
        "cur_std": 0.4058572292327881,
        "prompt": " atomic Sk a Python_** check if a given key exists most Fu$.",
        "nll_prompt": -8.579482078552246
    },
    {
        "epoch": 23,
        "loss": 1.0055122375488281,
        "best_loss": 1.0003365278244019,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 8.73006534576416,
        "cur_std": 0.4466607093811035,
        "prompt": " atomic SkChe Python_** check if a given key exists most Fu$.",
        "nll_prompt": -9.834850311279297
    },
    {
        "epoch": 24,
        "loss": 1.073016881942749,
        "best_loss": 1.0003365278244019,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 8.865971565246582,
        "cur_std": 0.4402520179748535,
        "prompt": " p SkChe Python_** check if a given key exists most Fu$.",
        "nll_prompt": -9.443412780761719
    },
    {
        "epoch": 25,
        "loss": 1.1358528137207031,
        "best_loss": 1.0003365278244019,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 8.795836448669434,
        "cur_std": 0.4231414794921875,
        "prompt": " p SkChe Python_** check if a given key exists X Fu$.",
        "nll_prompt": -9.352063179016113
    },
    {
        "epoch": 26,
        "loss": 0.9942630529403687,
        "best_loss": 0.9942630529403687,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 8.66734504699707,
        "cur_std": 0.42645063400268557,
        "prompt": " p Sk z Python_** check if a given key exists X Fu$.",
        "nll_prompt": -9.469438552856445
    },
    {
        "epoch": 27,
        "loss": 0.9850327968597412,
        "best_loss": 0.9850327968597412,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 7.910370826721191,
        "cur_std": 0.46285133361816405,
        "prompt": " p Sk z Python_** check if a given key exists Xogram$.",
        "nll_prompt": -9.251396179199219
    },
    {
        "epoch": 28,
        "loss": 1.0792925357818604,
        "best_loss": 0.9850327968597412,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 7.198509216308594,
        "cur_std": 0.4481663703918457,
        "prompt": " p Sk z Python_** check if a given key exists Xogram`.",
        "nll_prompt": -9.115234375
    },
    {
        "epoch": 29,
        "loss": 0.9753687977790833,
        "best_loss": 0.9753687977790833,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 8.206731796264648,
        "cur_std": 0.46254806518554686,
        "prompt": " p Only z Python_** check if a given key exists Xogram`.",
        "nll_prompt": -8.529845237731934
    },
    {
        "epoch": 30,
        "loss": 1.0329138040542603,
        "best_loss": 0.9753687977790833,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 8.013265609741211,
        "cur_std": 0.4348160743713379,
        "prompt": " p Only z Python_** check if a given key exists +ogram`.",
        "nll_prompt": -8.542675018310547
    },
    {
        "epoch": 31,
        "loss": 1.051056146621704,
        "best_loss": 0.9753687977790833,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 7.589870452880859,
        "cur_std": 0.432861852645874,
        "prompt": " p Only z Python\"?** check if a given key exists +ogram`.",
        "nll_prompt": -9.374420166015625
    },
    {
        "epoch": 32,
        "loss": 1.0341790914535522,
        "best_loss": 0.9753687977790833,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 8.187440872192383,
        "cur_std": 0.43289957046508787,
        "prompt": " p Only z Pythonbn** check if a given key exists +ogram`.",
        "nll_prompt": -9.052757263183594
    },
    {
        "epoch": 33,
        "loss": 1.0702847242355347,
        "best_loss": 0.9753687977790833,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 8.306140899658203,
        "cur_std": 0.4353782653808594,
        "prompt": " towards Only z Pythonbn** check if a given key exists +ogram`.",
        "nll_prompt": -9.27688980102539
    },
    {
        "epoch": 34,
        "loss": 1.0410478115081787,
        "best_loss": 0.9753687977790833,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 7.224544525146484,
        "cur_std": 0.4035197734832764,
        "prompt": " Under Only z Pythonbn** check if a given key exists +ogram`.",
        "nll_prompt": -8.759638786315918
    },
    {
        "epoch": 35,
        "loss": 1.0464305877685547,
        "best_loss": 0.9753687977790833,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 7.550764083862305,
        "cur_std": 0.4301715850830078,
        "prompt": " Under Based z Pythonbn** check if a given key exists +ogram`.",
        "nll_prompt": -8.926860809326172
    },
    {
        "epoch": 36,
        "loss": 1.0163309574127197,
        "best_loss": 0.9753687977790833,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 8.013190269470215,
        "cur_std": 0.4172647476196289,
        "prompt": " Under Based z Pythonbn** check if a given key exists +ine`.",
        "nll_prompt": -8.929792404174805
    },
    {
        "epoch": 37,
        "loss": 0.9469351172447205,
        "best_loss": 0.9469351172447205,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 7.698709487915039,
        "cur_std": 0.4120959758758545,
        "prompt": " Under Based z Pythonil** check if a given key exists +ine`.",
        "nll_prompt": -8.720294952392578
    },
    {
        "epoch": 38,
        "loss": 0.9918017983436584,
        "best_loss": 0.9469351172447205,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 7.549200057983398,
        "cur_std": 0.39385557174682617,
        "prompt": " Under Based z Pythonil** check if a given key exists + Alps`.",
        "nll_prompt": -8.709115982055664
    },
    {
        "epoch": 39,
        "loss": 1.0612729787826538,
        "best_loss": 0.9469351172447205,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 8.210329055786133,
        "cur_std": 0.43815054893493655,
        "prompt": "(): Based z Pythonil** check if a given key exists + Alps`.",
        "nll_prompt": -8.61790657043457
    },
    {
        "epoch": 40,
        "loss": 1.0027252435684204,
        "best_loss": 0.9469351172447205,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 9.0952730178833,
        "cur_std": 0.4413558006286621,
        "prompt": "(): Based z Pythonil** check if a given key exists +fal`.",
        "nll_prompt": -8.800897598266602
    },
    {
        "epoch": 41,
        "loss": 1.0638256072998047,
        "best_loss": 0.9469351172447205,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 8.186895370483398,
        "cur_std": 0.42245965003967284,
        "prompt": " customer Based z Pythonil** check if a given key exists +fal`.",
        "nll_prompt": -9.51694393157959
    },
    {
        "epoch": 42,
        "loss": 1.0967103242874146,
        "best_loss": 0.9469351172447205,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 8.938000679016113,
        "cur_std": 0.4480459690093994,
        "prompt": " customer Based z Pythonil** check if a given key exists +ocese`.",
        "nll_prompt": -9.418694496154785
    },
    {
        "epoch": 43,
        "loss": 1.0818212032318115,
        "best_loss": 0.9469351172447205,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 8.493783950805664,
        "cur_std": 0.4279178619384766,
        "prompt": " customer Based z Pythonocl** check if a given key exists +ocese`.",
        "nll_prompt": -9.904064178466797
    },
    {
        "epoch": 44,
        "loss": 1.10004723072052,
        "best_loss": 0.9469351172447205,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 7.68742036819458,
        "cur_std": 0.39663617610931395,
        "prompt": " customer Based z Pythonocl** check if a given key exists +OGR`.",
        "nll_prompt": -10.053191184997559
    },
    {
        "epoch": 45,
        "loss": 1.0345782041549683,
        "best_loss": 0.9469351172447205,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 8.49931812286377,
        "cur_std": 0.45075168609619143,
        "prompt": " customer Based z Pythonocl** check if a given key exists + forefront`.",
        "nll_prompt": -9.948601722717285
    },
    {
        "epoch": 46,
        "loss": 1.0615088939666748,
        "best_loss": 0.9469351172447205,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 8.030116081237793,
        "cur_std": 0.4390382766723633,
        "prompt": " Puerto Based z Pythonocl** check if a given key exists + forefront`.",
        "nll_prompt": -9.781469345092773
    },
    {
        "epoch": 47,
        "loss": 1.0407383441925049,
        "best_loss": 0.9469351172447205,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 7.817143440246582,
        "cur_std": 0.43107194900512696,
        "prompt": " Puerto Based z Python affection** check if a given key exists + forefront`.",
        "nll_prompt": -9.78152847290039
    },
    {
        "epoch": 48,
        "loss": 1.0541095733642578,
        "best_loss": 0.9469351172447205,
        "best_kl": 7.16550874710083,
        "best_std": 0.396302318572998,
        "cur_kl": 7.204265117645264,
        "cur_std": 0.3954981088638306,
        "prompt": " Puerto Based z Python affection** check if a given key existston forefront`.",
        "nll_prompt": -10.122699737548828
    },
    {
        "epoch": 49,
        "loss": 0.8882588148117065,
        "best_loss": 0.8882588148117065,
        "best_kl": 6.986385345458984,
        "best_std": 0.3907373666763306,
        "cur_kl": 6.986385345458984,
        "cur_std": 0.3907373666763306,
        "prompt": " Puerto Based z PythonAccess** check if a given key existston forefront`.",
        "nll_prompt": -9.8999605178833
    },
    {
        "epoch": 50,
        "loss": 1.006172776222229,
        "best_loss": 0.8882588148117065,
        "best_kl": 6.986385345458984,
        "best_std": 0.3907373666763306,
        "cur_kl": 6.988108158111572,
        "cur_std": 0.3971501350402832,
        "prompt": " Puerto Based z PythonAccess** check if a given key exists ILCS forefront`.",
        "nll_prompt": -10.28062629699707
    },
    {
        "epoch": 51,
        "loss": 1.025217890739441,
        "best_loss": 0.8882588148117065,
        "best_kl": 6.505700588226318,
        "best_std": 0.38666882514953616,
        "cur_kl": 6.505700588226318,
        "cur_std": 0.38666882514953616,
        "prompt": " Puerto Based z PythonAccess** check if a given key exists ILCS steadfast`.",
        "nll_prompt": -10.537132263183594
    },
    {
        "epoch": 52,
        "loss": 0.9278280138969421,
        "best_loss": 0.8882588148117065,
        "best_kl": 6.139196872711182,
        "best_std": 0.37086336612701415,
        "cur_kl": 6.139196872711182,
        "cur_std": 0.37086336612701415,
        "prompt": " Puerto Br z PythonAccess** check if a given key exists ILCS steadfast`.",
        "nll_prompt": -10.476935386657715
    },
    {
        "epoch": 53,
        "loss": 0.9537844061851501,
        "best_loss": 0.8882588148117065,
        "best_kl": 5.91591215133667,
        "best_std": 0.3676150798797607,
        "cur_kl": 5.91591215133667,
        "cur_std": 0.3676150798797607,
        "prompt": " Puerto Br queen PythonAccess** check if a given key exists ILCS steadfast`.",
        "nll_prompt": -10.954914093017578
    },
    {
        "epoch": 54,
        "loss": 0.9794555306434631,
        "best_loss": 0.8882588148117065,
        "best_kl": 5.91591215133667,
        "best_std": 0.3676150798797607,
        "cur_kl": 6.374619483947754,
        "cur_std": 0.3854945421218872,
        "prompt": " Puerto Br Rocky PythonAccess** check if a given key exists ILCS steadfast`.",
        "nll_prompt": -10.811284065246582
    },
    {
        "epoch": 55,
        "loss": 1.017146348953247,
        "best_loss": 0.8882588148117065,
        "best_kl": 5.689564228057861,
        "best_std": 0.36401259899139404,
        "cur_kl": 5.689564228057861,
        "cur_std": 0.36401259899139404,
        "prompt": " Puerto Br Rocky Python Swift** check if a given key exists ILCS steadfast`.",
        "nll_prompt": -10.35959529876709
    },
    {
        "epoch": 56,
        "loss": 1.0050076246261597,
        "best_loss": 0.8882588148117065,
        "best_kl": 5.576065540313721,
        "best_std": 0.35102524757385256,
        "cur_kl": 5.576065540313721,
        "cur_std": 0.35102524757385256,
        "prompt": " Puertom Rocky Python Swift** check if a given key exists ILCS steadfast`.",
        "nll_prompt": -10.686890602111816
    },
    {
        "epoch": 57,
        "loss": 1.0104857683181763,
        "best_loss": 0.8882588148117065,
        "best_kl": 5.576065540313721,
        "best_std": 0.35102524757385256,
        "cur_kl": 5.613562107086182,
        "cur_std": 0.3727750301361084,
        "prompt": " Puertom Rocky Python Swift D check if a given key exists ILCS steadfast`.",
        "nll_prompt": -10.567511558532715
    },
    {
        "epoch": 58,
        "loss": 0.968434751033783,
        "best_loss": 0.8882588148117065,
        "best_kl": 5.562742710113525,
        "best_std": 0.36276793479919434,
        "cur_kl": 5.562742710113525,
        "cur_std": 0.36276793479919434,
        "prompt": " Puertom Rocky Python Swift North check if a given key exists ILCS steadfast`.",
        "nll_prompt": -11.092216491699219
    },
    {
        "epoch": 59,
        "loss": 0.9644609093666077,
        "best_loss": 0.8882588148117065,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 5.383321285247803,
        "cur_std": 0.3621614933013916,
        "prompt": " Puerto dam Rocky Python Swift North check if a given key exists ILCS steadfast`.",
        "nll_prompt": -11.084356307983398
    },
    {
        "epoch": 60,
        "loss": 1.0144742727279663,
        "best_loss": 0.8882588148117065,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 5.535830974578857,
        "cur_std": 0.33760149478912355,
        "prompt": " Puerto dam Rocky Python Swift North check if a given key exists ILCS Integer`.",
        "nll_prompt": -10.502460479736328
    },
    {
        "epoch": 61,
        "loss": 1.0100606679916382,
        "best_loss": 0.8882588148117065,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 5.82314395904541,
        "cur_std": 0.3633296251296997,
        "prompt": " Puerto dam Rocky Python drug North check if a given key exists ILCS Integer`.",
        "nll_prompt": -10.698911666870117
    },
    {
        "epoch": 62,
        "loss": 1.027881383895874,
        "best_loss": 0.8882588148117065,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 5.763620853424072,
        "cur_std": 0.3509777069091797,
        "prompt": " Puerto dam Rocky Python dragon North check if a given key exists ILCS Integer`.",
        "nll_prompt": -10.484295845031738
    },
    {
        "epoch": 63,
        "loss": 0.9358330368995667,
        "best_loss": 0.8882588148117065,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 5.577238082885742,
        "cur_std": 0.35084693431854247,
        "prompt": " Puerto dam Rocky Python dragon North check if a given key existssky Integer`.",
        "nll_prompt": -10.671893119812012
    },
    {
        "epoch": 64,
        "loss": 0.9400765895843506,
        "best_loss": 0.8882588148117065,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 5.6798095703125,
        "cur_std": 0.34688916206359866,
        "prompt": " Puerto dam Rocky Python dragon North check if a given key existsg Integer`.",
        "nll_prompt": -10.149372100830078
    },
    {
        "epoch": 65,
        "loss": 0.919301450252533,
        "best_loss": 0.8882588148117065,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 5.572038650512695,
        "cur_std": 0.3372321844100952,
        "prompt": " Puerto dam Rocky Python dragon extra check if a given key existsg Integer`.",
        "nll_prompt": -9.671850204467773
    },
    {
        "epoch": 66,
        "loss": 1.0082082748413086,
        "best_loss": 0.8882588148117065,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 5.75982666015625,
        "cur_std": 0.3422117233276367,
        "prompt": " Puerto dam Rocky Python peer extra check if a given key existsg Integer`.",
        "nll_prompt": -10.023448944091797
    },
    {
        "epoch": 67,
        "loss": 0.9403426647186279,
        "best_loss": 0.8882588148117065,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 5.959483623504639,
        "cur_std": 0.3423073530197144,
        "prompt": "ah dam Rocky Python peer extra check if a given key existsg Integer`.",
        "nll_prompt": -9.595678329467773
    },
    {
        "epoch": 68,
        "loss": 0.9638438820838928,
        "best_loss": 0.8882588148117065,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 5.477449893951416,
        "cur_std": 0.32644095420837405,
        "prompt": "ah dam Rocky Python peer extra check if a given key existsginteger`.",
        "nll_prompt": -9.556374549865723
    },
    {
        "epoch": 69,
        "loss": 1.0075759887695312,
        "best_loss": 0.8882588148117065,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 6.345331192016602,
        "cur_std": 0.3610379695892334,
        "prompt": "ah dam Rockyative peer extra check if a given key existsginteger`.",
        "nll_prompt": -9.959705352783203
    },
    {
        "epoch": 70,
        "loss": 0.994963526725769,
        "best_loss": 0.8882588148117065,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 8.134642601013184,
        "cur_std": 0.3791136026382446,
        "prompt": "ah dam Rockyative peercrypt check if a given key existsginteger`.",
        "nll_prompt": -10.256983757019043
    },
    {
        "epoch": 71,
        "loss": 1.0433521270751953,
        "best_loss": 0.8882588148117065,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 8.116426467895508,
        "cur_std": 0.3647496223449707,
        "prompt": "ah dam Rocky collection peercrypt check if a given key existsginteger`.",
        "nll_prompt": -9.824688911437988
    },
    {
        "epoch": 72,
        "loss": 1.0645302534103394,
        "best_loss": 0.8882588148117065,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 6.799829959869385,
        "cur_std": 0.3564878463745117,
        "prompt": "ah dam Rocky collection peer Marsh check if a given key existsginteger`.",
        "nll_prompt": -9.768263816833496
    },
    {
        "epoch": 73,
        "loss": 1.0190566778182983,
        "best_loss": 0.8882588148117065,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 6.344162464141846,
        "cur_std": 0.3482569694519043,
        "prompt": "ah dam Rockyinsert peer Marsh check if a given key existsginteger`.",
        "nll_prompt": -10.140453338623047
    },
    {
        "epoch": 74,
        "loss": 1.0212688446044922,
        "best_loss": 0.8882588148117065,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 6.509670734405518,
        "cur_std": 0.3178716659545898,
        "prompt": "ah dam Rockyinsert Swiss Marsh check if a given key existsginteger`.",
        "nll_prompt": -10.070436477661133
    },
    {
        "epoch": 75,
        "loss": 0.9530246257781982,
        "best_loss": 0.8882588148117065,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 6.196005821228027,
        "cur_std": 0.33266615867614746,
        "prompt": "ah dam Rockyinsertmethod Marsh check if a given key existsginteger`.",
        "nll_prompt": -9.99134635925293
    },
    {
        "epoch": 76,
        "loss": 0.967919647693634,
        "best_loss": 0.8882588148117065,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 6.050522804260254,
        "cur_std": 0.33234710693359376,
        "prompt": "otin dam Rockyinsertmethod Marsh check if a given key existsginteger`.",
        "nll_prompt": -10.65058708190918
    },
    {
        "epoch": 77,
        "loss": 0.8822044134140015,
        "best_loss": 0.8822044134140015,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 6.27824592590332,
        "cur_std": 0.33251123428344725,
        "prompt": "otin dam Rockyinsertinder Marsh check if a given key existsginteger`.",
        "nll_prompt": -10.792902946472168
    },
    {
        "epoch": 78,
        "loss": 1.0255296230316162,
        "best_loss": 0.8822044134140015,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 6.677292346954346,
        "cur_std": 0.35683131217956543,
        "prompt": "� dam Rockyinsertinder Marsh check if a given key existsginteger`.",
        "nll_prompt": -10.88002872467041
    },
    {
        "epoch": 79,
        "loss": 1.0292147397994995,
        "best_loss": 0.8822044134140015,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 6.943184852600098,
        "cur_std": 0.36903331279754636,
        "prompt": "� dam Rocky Warinder Marsh check if a given key existsginteger`.",
        "nll_prompt": -10.45136547088623
    },
    {
        "epoch": 80,
        "loss": 1.0202124118804932,
        "best_loss": 0.8822044134140015,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 6.448647499084473,
        "cur_std": 0.38212270736694337,
        "prompt": "� dam Rocky Warinder python check if a given key existsginteger`.",
        "nll_prompt": -10.512266159057617
    },
    {
        "epoch": 81,
        "loss": 0.9821323156356812,
        "best_loss": 0.8822044134140015,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 6.55361270904541,
        "cur_std": 0.3706648826599121,
        "prompt": "� dam Rocky SWinder python check if a given key existsginteger`.",
        "nll_prompt": -10.388715744018555
    },
    {
        "epoch": 82,
        "loss": 1.0220733880996704,
        "best_loss": 0.8822044134140015,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 6.604720115661621,
        "cur_std": 0.3966407537460327,
        "prompt": "� dam Rocky SWinder python check if a given key existsgTrue`.",
        "nll_prompt": -10.037450790405273
    },
    {
        "epoch": 83,
        "loss": 0.9905214309692383,
        "best_loss": 0.8822044134140015,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 6.816007137298584,
        "cur_std": 0.37160799503326414,
        "prompt": "� dam Rocky SWinder Py check if a given key existsgTrue`.",
        "nll_prompt": -10.118956565856934
    },
    {
        "epoch": 84,
        "loss": 1.0203566551208496,
        "best_loss": 0.8822044134140015,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 6.43603515625,
        "cur_std": 0.36181082725524905,
        "prompt": "� dam Rockystinder Py check if a given key existsgTrue`.",
        "nll_prompt": -10.2178955078125
    },
    {
        "epoch": 85,
        "loss": 1.0112963914871216,
        "best_loss": 0.8822044134140015,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 5.985649108886719,
        "cur_std": 0.3588162183761597,
        "prompt": "�l Rockystinder Py check if a given key existsgTrue`.",
        "nll_prompt": -9.41190242767334
    },
    {
        "epoch": 86,
        "loss": 1.0231361389160156,
        "best_loss": 0.8822044134140015,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 6.489512920379639,
        "cur_std": 0.3648287296295166,
        "prompt": "�l Rockyst body Py check if a given key existsgTrue`.",
        "nll_prompt": -9.025860786437988
    },
    {
        "epoch": 87,
        "loss": 1.0216567516326904,
        "best_loss": 0.8822044134140015,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 5.993297100067139,
        "cur_std": 0.3470763683319092,
        "prompt": " Punl Rockyst body Py check if a given key existsgTrue`.",
        "nll_prompt": -9.136883735656738
    },
    {
        "epoch": 88,
        "loss": 0.9445777535438538,
        "best_loss": 0.8822044134140015,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 5.961136341094971,
        "cur_std": 0.3845154523849487,
        "prompt": " Punl Rockyst body Py check if a given key existsytonTrue`.",
        "nll_prompt": -9.561315536499023
    },
    {
        "epoch": 89,
        "loss": 1.0240427255630493,
        "best_loss": 0.8822044134140015,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 6.066263198852539,
        "cur_std": 0.39763054847717283,
        "prompt": " Punl Pythonst body Py check if a given key existsytonTrue`.",
        "nll_prompt": -9.232195854187012
    },
    {
        "epoch": 90,
        "loss": 1.0175670385360718,
        "best_loss": 0.8822044134140015,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 7.010068416595459,
        "cur_std": 0.47091174125671387,
        "prompt": " Punl Pythonst body Py judge if a given key existsytonTrue`.",
        "nll_prompt": -9.243677139282227
    },
    {
        "epoch": 91,
        "loss": 1.0026277303695679,
        "best_loss": 0.8822044134140015,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 7.257662296295166,
        "cur_std": 0.4308664798736572,
        "prompt": " Punl Documentst body Py judge if a given key existsytonTrue`.",
        "nll_prompt": -9.127829551696777
    },
    {
        "epoch": 92,
        "loss": 0.9915180206298828,
        "best_loss": 0.8822044134140015,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 7.279227256774902,
        "cur_std": 0.43777666091918943,
        "prompt": " Punl Documentst son Py judge if a given key existsytonTrue`.",
        "nll_prompt": -9.26211929321289
    },
    {
        "epoch": 93,
        "loss": 1.0026404857635498,
        "best_loss": 0.8822044134140015,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 7.594091415405273,
        "cur_std": 0.416760778427124,
        "prompt": " Punl Documentst son Py judge if a given key existsytondef`.",
        "nll_prompt": -9.255291938781738
    },
    {
        "epoch": 94,
        "loss": 1.0373365879058838,
        "best_loss": 0.8822044134140015,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 7.595645427703857,
        "cur_std": 0.42464070320129393,
        "prompt": " Punl Documentst Tek Py judge if a given key existsytondef`.",
        "nll_prompt": -9.921806335449219
    },
    {
        "epoch": 95,
        "loss": 1.0195231437683105,
        "best_loss": 0.8822044134140015,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 7.193675518035889,
        "cur_std": 0.4702313899993896,
        "prompt": " Punl spacecraftst Tek Py judge if a given key existsytondef`.",
        "nll_prompt": -11.079371452331543
    },
    {
        "epoch": 96,
        "loss": 1.0024484395980835,
        "best_loss": 0.8822044134140015,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 7.142249584197998,
        "cur_std": 0.4222392559051514,
        "prompt": " Punl spacecraftALLY Tek Py judge if a given key existsytondef`.",
        "nll_prompt": -10.91645336151123
    },
    {
        "epoch": 97,
        "loss": 1.0419604778289795,
        "best_loss": 0.8822044134140015,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 7.16173791885376,
        "cur_std": 0.44359445571899414,
        "prompt": " Punl spacecraftALLY being Py judge if a given key existsytondef`.",
        "nll_prompt": -9.67710018157959
    },
    {
        "epoch": 98,
        "loss": 1.012763261795044,
        "best_loss": 0.8822044134140015,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 6.717516899108887,
        "cur_std": 0.4378340721130371,
        "prompt": " Punl spacecraftALLYinstance Py judge if a given key existsytondef`.",
        "nll_prompt": -10.091981887817383
    },
    {
        "epoch": 99,
        "loss": 0.9933406710624695,
        "best_loss": 0.8822044134140015,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 7.24778938293457,
        "cur_std": 0.4189633846282959,
        "prompt": " Punl spacecraftALLYinstance Py See if a given key existsytondef`.",
        "nll_prompt": -10.15829086303711
    },
    {
        "epoch": 100,
        "loss": 1.059652328491211,
        "best_loss": 0.8822044134140015,
        "best_kl": 5.383321285247803,
        "best_std": 0.3621614933013916,
        "cur_kl": 6.899322986602783,
        "cur_std": 0.4198544979095459,
        "prompt": " Punl InterstellarALLYinstance Py See if a given key existsytondef`.",
        "nll_prompt": -9.708155632019043
    }
]