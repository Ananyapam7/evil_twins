[
    {
        "epoch": 1,
        "loss": 0.9522160887718201,
        "best_loss": 0.9522160887718201,
        "best_kl": 16.05806541442871,
        "best_std": 0.3621166467666626,
        "cur_kl": 16.05806541442871,
        "cur_std": 0.3621166467666626,
        "prompt": " Grad a Python function to merge two sorted lists into a single sorted list using",
        "nll_prompt": -2.4677231311798096
    },
    {
        "epoch": 2,
        "loss": 0.7023344039916992,
        "best_loss": 0.7023344039916992,
        "best_kl": 9.111207962036133,
        "best_std": 0.4081245422363281,
        "cur_kl": 9.111207962036133,
        "cur_std": 0.4081245422363281,
        "prompt": " Grad a Python function to merge two sorted lists into a single sorted list Google",
        "nll_prompt": -3.3449549674987793
    },
    {
        "epoch": 3,
        "loss": 0.6738292574882507,
        "best_loss": 0.6738292574882507,
        "best_kl": 9.111207962036133,
        "best_std": 0.4081245422363281,
        "cur_kl": 9.216094970703125,
        "cur_std": 0.33054499626159667,
        "prompt": " Grad a Python function to merge two sorted lists into aology sorted list Google",
        "nll_prompt": -4.983005046844482
    },
    {
        "epoch": 4,
        "loss": 0.7281025648117065,
        "best_loss": 0.6738292574882507,
        "best_kl": 9.111207962036133,
        "best_std": 0.4081245422363281,
        "cur_kl": 9.757522583007812,
        "cur_std": 0.38346543312072756,
        "prompt": " Grad a Python function to merge two sorted lists into aology Genetic list Google",
        "nll_prompt": -6.027690887451172
    },
    {
        "epoch": 5,
        "loss": 0.7487280368804932,
        "best_loss": 0.6738292574882507,
        "best_kl": 9.111207962036133,
        "best_std": 0.4081245422363281,
        "cur_kl": 10.434636116027832,
        "cur_std": 0.41062307357788086,
        "prompt": " Grad a Python function to merge two sorted lists into a 11 Genetic list Google",
        "nll_prompt": -5.960992813110352
    },
    {
        "epoch": 6,
        "loss": 0.6734668612480164,
        "best_loss": 0.6734668612480164,
        "best_kl": 9.062337875366211,
        "best_std": 0.3408538579940796,
        "cur_kl": 9.062337875366211,
        "cur_std": 0.3408538579940796,
        "prompt": " Grad a Python function to merge two sorted lists into a 11 Diesel list Google",
        "nll_prompt": -6.218290328979492
    },
    {
        "epoch": 7,
        "loss": 0.6392924785614014,
        "best_loss": 0.6392924785614014,
        "best_kl": 9.062337875366211,
        "best_std": 0.3408538579940796,
        "cur_kl": 9.663583755493164,
        "cur_std": 0.3647822380065918,
        "prompt": " Grad a Python function to merge two sorted lists into aented Diesel list Google",
        "nll_prompt": -6.138858318328857
    },
    {
        "epoch": 8,
        "loss": 0.7189313173294067,
        "best_loss": 0.6392924785614014,
        "best_kl": 9.062337875366211,
        "best_std": 0.3408538579940796,
        "cur_kl": 9.619507789611816,
        "cur_std": 0.35514810085296633,
        "prompt": " Grad a Python function to merge two sorted lists into aentedDex list Google",
        "nll_prompt": -6.226570129394531
    },
    {
        "epoch": 9,
        "loss": 0.6850500106811523,
        "best_loss": 0.6392924785614014,
        "best_kl": 8.468027114868164,
        "best_std": 0.34228997230529784,
        "cur_kl": 8.468027114868164,
        "cur_std": 0.34228997230529784,
        "prompt": " Grad a Python function to merge two sorted lists into aentedDex listology",
        "nll_prompt": -6.097105979919434
    },
    {
        "epoch": 10,
        "loss": 0.6541684865951538,
        "best_loss": 0.6392924785614014,
        "best_kl": 7.373561859130859,
        "best_std": 0.2858505010604858,
        "cur_kl": 7.373561859130859,
        "cur_std": 0.2858505010604858,
        "prompt": " Grad a Python function to merge two sorted lists into aentedDex listie",
        "nll_prompt": -6.24442720413208
    },
    {
        "epoch": 11,
        "loss": 0.6303073167800903,
        "best_loss": 0.6303073167800903,
        "best_kl": 7.373561859130859,
        "best_std": 0.2858505010604858,
        "cur_kl": 8.122056007385254,
        "cur_std": 0.3183319568634033,
        "prompt": " Grad a Python function to merge two sorted lists into aentedDex list futuristic",
        "nll_prompt": -6.575342178344727
    },
    {
        "epoch": 12,
        "loss": 0.6517607569694519,
        "best_loss": 0.6303073167800903,
        "best_kl": 7.373561859130859,
        "best_std": 0.2858505010604858,
        "cur_kl": 7.897358417510986,
        "cur_std": 0.33889498710632326,
        "prompt": " Grad a Python function to merge two sorted lists into a limpDex list futuristic",
        "nll_prompt": -6.3346734046936035
    },
    {
        "epoch": 13,
        "loss": 0.6727540493011475,
        "best_loss": 0.6303073167800903,
        "best_kl": 7.373561859130859,
        "best_std": 0.2858505010604858,
        "cur_kl": 9.258627891540527,
        "cur_std": 0.3251157760620117,
        "prompt": " Grad a Python function to merge two sorted lists into traces limpDex list futuristic",
        "nll_prompt": -7.687145233154297
    },
    {
        "epoch": 14,
        "loss": 0.6358712315559387,
        "best_loss": 0.6303073167800903,
        "best_kl": 7.373561859130859,
        "best_std": 0.2858505010604858,
        "cur_kl": 7.55745792388916,
        "cur_std": 0.26927571296691893,
        "prompt": " Grad a Python function to merge two sorted lists into que limpDex list futuristic",
        "nll_prompt": -7.562863826751709
    },
    {
        "epoch": 15,
        "loss": 0.6288600564002991,
        "best_loss": 0.6288600564002991,
        "best_kl": 7.373561859130859,
        "best_std": 0.2858505010604858,
        "cur_kl": 8.545141220092773,
        "cur_std": 0.34418530464172364,
        "prompt": " Grad a Python function to merge two sorted lists into que limpDex qualities futuristic",
        "nll_prompt": -7.8437676429748535
    },
    {
        "epoch": 16,
        "loss": 0.6039150953292847,
        "best_loss": 0.6039150953292847,
        "best_kl": 7.239930152893066,
        "best_std": 0.3505021810531616,
        "cur_kl": 7.239930152893066,
        "cur_std": 0.3505021810531616,
        "prompt": " Design a Python function to merge two sorted lists into que limpDex qualities futuristic",
        "nll_prompt": -7.293710708618164
    },
    {
        "epoch": 17,
        "loss": 0.6046693325042725,
        "best_loss": 0.6039150953292847,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 6.863495349884033,
        "cur_std": 0.38717212677001955,
        "prompt": " Design a Python function to merge two sorted lists into lasting limpDex qualities futuristic",
        "nll_prompt": -7.217756748199463
    },
    {
        "epoch": 18,
        "loss": 0.5020307302474976,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.111233711242676,
        "cur_std": 0.5911172389984131,
        "prompt": " Design a Python hue to merge two sorted lists into lasting limpDex qualities futuristic",
        "nll_prompt": -8.86296272277832
    },
    {
        "epoch": 19,
        "loss": 0.660409688949585,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.789654731750488,
        "cur_std": 0.5782437324523926,
        "prompt": " Design a Python hue to merge two sorted lists into lastingistDex qualities futuristic",
        "nll_prompt": -8.646221160888672
    },
    {
        "epoch": 20,
        "loss": 0.6743001341819763,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 7.796756267547607,
        "cur_std": 0.5219508647918701,
        "prompt": " Design a Python hue to merge two sorted lists into McistDex qualities futuristic",
        "nll_prompt": -8.651928901672363
    },
    {
        "epoch": 21,
        "loss": 0.6002794504165649,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.353313446044922,
        "cur_std": 0.45908298492431643,
        "prompt": " Design a Python thoughts to merge two sorted lists into McistDex qualities futuristic",
        "nll_prompt": -8.67641544342041
    },
    {
        "epoch": 22,
        "loss": 0.6223053336143494,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.528664588928223,
        "cur_std": 0.4917177677154541,
        "prompt": " Design a Python seamlessly to merge two sorted lists into McistDex qualities futuristic",
        "nll_prompt": -8.641119003295898
    },
    {
        "epoch": 23,
        "loss": 0.6552000045776367,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 9.186582565307617,
        "cur_std": 0.4802417278289795,
        "prompt": " Design a Python seamlessly to merge two sorted lists intoemistDex qualities futuristic",
        "nll_prompt": -8.74393081665039
    },
    {
        "epoch": 24,
        "loss": 0.7244659066200256,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 10.350906372070312,
        "cur_std": 0.4943070888519287,
        "prompt": " Design a Python seamlessly to merge two sorted lists intoemist Electric qualities futuristic",
        "nll_prompt": -8.290911674499512
    },
    {
        "epoch": 25,
        "loss": 0.6700518727302551,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 9.257012367248535,
        "cur_std": 0.436899471282959,
        "prompt": " Design a Pythonud to merge two sorted lists intoemist Electric qualities futuristic",
        "nll_prompt": -7.579213619232178
    },
    {
        "epoch": 26,
        "loss": 0.6415332555770874,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 7.679288387298584,
        "cur_std": 0.39249072074890134,
        "prompt": " Design a Pythonud to merge two sorted lists intoemist soy qualities futuristic",
        "nll_prompt": -7.909986972808838
    },
    {
        "epoch": 27,
        "loss": 0.6075482964515686,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.129244804382324,
        "cur_std": 0.41293721199035643,
        "prompt": " Design a Pythonud to merge two sorted lists intoem disappearing soy qualities futuristic",
        "nll_prompt": -8.756491661071777
    },
    {
        "epoch": 28,
        "loss": 0.5949531197547913,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.09990406036377,
        "cur_std": 0.3871950149536133,
        "prompt": " Design a Pythonud to merge two sorted lists intoem disappearing3 qualities futuristic",
        "nll_prompt": -8.408639907836914
    },
    {
        "epoch": 29,
        "loss": 0.6581661701202393,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.686047554016113,
        "cur_std": 0.36889431476593015,
        "prompt": " Design a Pythonud to merge two sorted lists intoem disappearing3ness futuristic",
        "nll_prompt": -8.19818115234375
    },
    {
        "epoch": 30,
        "loss": 0.6563032269477844,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.955705642700195,
        "cur_std": 0.38896002769470217,
        "prompt": " Design a Python Pir to merge two sorted lists intoem disappearing3ness futuristic",
        "nll_prompt": -9.213934898376465
    },
    {
        "epoch": 31,
        "loss": 0.6083840131759644,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.104670524597168,
        "cur_std": 0.40525221824645996,
        "prompt": " Design a Python Pirword merge two sorted lists intoem disappearing3ness futuristic",
        "nll_prompt": -10.381159782409668
    },
    {
        "epoch": 32,
        "loss": 0.6725338697433472,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.889540672302246,
        "cur_std": 0.4963095664978027,
        "prompt": " Design a Python Pirword merge two sorted lists intoem disappearing astonishingness futuristic",
        "nll_prompt": -10.143988609313965
    },
    {
        "epoch": 33,
        "loss": 0.6763676404953003,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.790472030639648,
        "cur_std": 0.47218570709228513,
        "prompt": " Design a Python Pirword merge two sorted lists intohedral disappearing astonishingness futuristic",
        "nll_prompt": -9.835979461669922
    },
    {
        "epoch": 34,
        "loss": 0.6709334254264832,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 7.75760555267334,
        "cur_std": 0.41561312675476075,
        "prompt": " Design a Python Pirword merge two sorted lists intohedral disappearing astonishingnessalty",
        "nll_prompt": -9.953166961669922
    },
    {
        "epoch": 35,
        "loss": 0.6691461205482483,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.651253700256348,
        "cur_std": 0.38529090881347655,
        "prompt": " Design a Python Pirword merge two sorted lists intohedral disappearing 280nessalty",
        "nll_prompt": -10.3209228515625
    },
    {
        "epoch": 36,
        "loss": 0.6052407026290894,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.048197746276855,
        "cur_std": 0.38907637596130373,
        "prompt": " Design a Python possibilitiesword merge two sorted lists intohedral disappearing 280nessalty",
        "nll_prompt": -10.087726593017578
    },
    {
        "epoch": 37,
        "loss": 0.5972267985343933,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.200299263000488,
        "cur_std": 0.3983452320098877,
        "prompt": " Design a Python possibilitiesword merge two sorted lists intohedral disappearingrivernessalty",
        "nll_prompt": -9.687087059020996
    },
    {
        "epoch": 38,
        "loss": 0.6662862300872803,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 7.959568977355957,
        "cur_std": 0.3606748104095459,
        "prompt": " Design a Python possibilitiesword merge two sorted lists duringhedral disappearingrivernessalty",
        "nll_prompt": -10.19438362121582
    },
    {
        "epoch": 39,
        "loss": 0.6478991508483887,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.571565628051758,
        "cur_std": 0.36632528305053713,
        "prompt": " Design a Python possibilitiesword merge two sorted lists duringhedral disappearing randomnessalty",
        "nll_prompt": -9.547792434692383
    },
    {
        "epoch": 40,
        "loss": 0.6212430596351624,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 7.603707313537598,
        "cur_std": 0.3716331243515015,
        "prompt": " Design a Python possibilitiesword merge two sorted lists duringhedral feeling randomnessalty",
        "nll_prompt": -9.744288444519043
    },
    {
        "epoch": 41,
        "loss": 0.5997954607009888,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.079638481140137,
        "cur_std": 0.4655439853668213,
        "prompt": " Design a Python possibilitiesword merge two sorted lists scenehedral feeling randomnessalty",
        "nll_prompt": -9.890742301940918
    },
    {
        "epoch": 42,
        "loss": 0.6316677927970886,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 9.421059608459473,
        "cur_std": 0.49809741973876953,
        "prompt": " Design a Python possibilitiesword merge two sorted lists scenehedral feeling maternalnessalty",
        "nll_prompt": -10.400731086730957
    },
    {
        "epoch": 43,
        "loss": 0.6897786855697632,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 9.361517906188965,
        "cur_std": 0.488341760635376,
        "prompt": " Design a Python possibilitiesword merge two sorted lists scenehedral embraces maternalnessalty",
        "nll_prompt": -10.407920837402344
    },
    {
        "epoch": 44,
        "loss": 0.6581375598907471,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 9.579852104187012,
        "cur_std": 0.4805710792541504,
        "prompt": " Design a Python possibilities William merge two sorted lists scenehedral embraces maternalnessalty",
        "nll_prompt": -10.51472282409668
    },
    {
        "epoch": 45,
        "loss": 0.7168607115745544,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 9.61384391784668,
        "cur_std": 0.5150607585906982,
        "prompt": " Design a Python possibilities William merge two sorted lists scene substantial embraces maternalnessalty",
        "nll_prompt": -10.4515380859375
    },
    {
        "epoch": 46,
        "loss": 0.6947706937789917,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 10.235960006713867,
        "cur_std": 0.5268605709075928,
        "prompt": " Design a Python possibilities William merge two sorted lists scene substantial embraces politicalnessalty",
        "nll_prompt": -10.211871147155762
    },
    {
        "epoch": 47,
        "loss": 0.6879740953445435,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 9.801891326904297,
        "cur_std": 0.5138387203216552,
        "prompt": " Design a Python possibilities William merge two sorted lists scene substantial embraces elementsnessalty",
        "nll_prompt": -10.107410430908203
    },
    {
        "epoch": 48,
        "loss": 0.6999741196632385,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 10.145596504211426,
        "cur_std": 0.5240401268005371,
        "prompt": " Design a Python possibilities William merge two sorted lists scene substantial embracesitenessalty",
        "nll_prompt": -10.498710632324219
    },
    {
        "epoch": 49,
        "loss": 0.6800714135169983,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 9.130847930908203,
        "cur_std": 0.4495833873748779,
        "prompt": " Design a Python possibilities woo merge two sorted lists scene substantial embracesitenessalty",
        "nll_prompt": -10.078863143920898
    },
    {
        "epoch": 50,
        "loss": 0.6574195027351379,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 9.493973731994629,
        "cur_std": 0.4488680839538574,
        "prompt": " Design a Python possibilities woo merge two sorted lists scene substantialthuritenessalty",
        "nll_prompt": -9.90679931640625
    },
    {
        "epoch": 51,
        "loss": 0.6362751722335815,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.741436004638672,
        "cur_std": 0.4198878765106201,
        "prompt": " Design a Python possibilities woo merge two sorted lists scene substantial lookitenessalty",
        "nll_prompt": -9.801215171813965
    },
    {
        "epoch": 52,
        "loss": 0.5646551251411438,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.052816390991211,
        "cur_std": 0.45457305908203127,
        "prompt": " Design a Python possibilities woo merge two sorted lists scene unbelievable lookitenessalty",
        "nll_prompt": -9.91054630279541
    },
    {
        "epoch": 53,
        "loss": 0.547674834728241,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 7.682316780090332,
        "cur_std": 0.4475766658782959,
        "prompt": " Design a Python possibilitiesance merge two sorted lists scene unbelievable lookitenessalty",
        "nll_prompt": -10.274314880371094
    },
    {
        "epoch": 54,
        "loss": 0.5799960494041443,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.250978469848633,
        "cur_std": 0.44597640037536623,
        "prompt": " Design a Python caseance merge two sorted lists scene unbelievable lookitenessalty",
        "nll_prompt": -10.50759220123291
    },
    {
        "epoch": 55,
        "loss": 0.6929499506950378,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.848337173461914,
        "cur_std": 0.4800102233886719,
        "prompt": " Design a Python caseance merge two sorted lists scene Sara lookitenessalty",
        "nll_prompt": -10.730494499206543
    },
    {
        "epoch": 56,
        "loss": 0.6835006475448608,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.556914329528809,
        "cur_std": 0.4029972553253174,
        "prompt": " Design a Python caseance merge two sorted lists sceneernand lookitenessalty",
        "nll_prompt": -10.61557674407959
    },
    {
        "epoch": 57,
        "loss": 0.562021017074585,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.405194282531738,
        "cur_std": 0.48461666107177737,
        "prompt": " Design a Python campance merge two sorted lists sceneernand lookitenessalty",
        "nll_prompt": -9.757923126220703
    },
    {
        "epoch": 58,
        "loss": 0.6805063486099243,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.722513198852539,
        "cur_std": 0.4803741931915283,
        "prompt": " Design a Python campance merge two sorted lists sceneernand Regulationitenessalty",
        "nll_prompt": -10.398585319519043
    },
    {
        "epoch": 59,
        "loss": 0.6768477559089661,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.869162559509277,
        "cur_std": 0.4779353141784668,
        "prompt": " Design a Python campance merge two sorted lists sceneernand Regulationiesnessalty",
        "nll_prompt": -10.147052764892578
    },
    {
        "epoch": 60,
        "loss": 0.5694297552108765,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.27249526977539,
        "cur_std": 0.49437456130981444,
        "prompt": " Design a Python campance merge two sorted lists sceneernand �iesnessalty",
        "nll_prompt": -10.23990535736084
    },
    {
        "epoch": 61,
        "loss": 0.6497848629951477,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 7.416773319244385,
        "cur_std": 0.49112768173217775,
        "prompt": " Design a Python campance merge two sorted lists sceneernand � damnessalty",
        "nll_prompt": -10.310747146606445
    },
    {
        "epoch": 62,
        "loss": 0.5457969307899475,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 7.5776848793029785,
        "cur_std": 0.48468775749206544,
        "prompt": " Design a Python campance merge two sorted lists sceneel � damnessalty",
        "nll_prompt": -10.085986137390137
    },
    {
        "epoch": 63,
        "loss": 0.6831728219985962,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.797223091125488,
        "cur_std": 0.4102365016937256,
        "prompt": " Design a Python camp sig merge two sorted lists sceneel � damnessalty",
        "nll_prompt": -10.323468208312988
    },
    {
        "epoch": 64,
        "loss": 0.5227850675582886,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.316726684570312,
        "cur_std": 0.4347332000732422,
        "prompt": " Design a Python journey sig merge two sorted lists sceneel � damnessalty",
        "nll_prompt": -10.404233932495117
    },
    {
        "epoch": 65,
        "loss": 0.627970814704895,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.246028900146484,
        "cur_std": 0.4604219913482666,
        "prompt": " Sprint a Python journey sig merge two sorted lists sceneel � damnessalty",
        "nll_prompt": -11.097729682922363
    },
    {
        "epoch": 66,
        "loss": 0.6307384371757507,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.065813064575195,
        "cur_std": 0.5080418109893798,
        "prompt": " Sprint a Python journey immun merge two sorted lists sceneel � damnessalty",
        "nll_prompt": -11.669212341308594
    },
    {
        "epoch": 67,
        "loss": 0.7033172249794006,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 9.454804420471191,
        "cur_std": 0.5245644569396972,
        "prompt": " Sprint a Python journey immun merge two sorted lists scenenie � damnessalty",
        "nll_prompt": -11.897936820983887
    },
    {
        "epoch": 68,
        "loss": 0.7305480241775513,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 9.255660057067871,
        "cur_std": 0.42560715675354005,
        "prompt": " Sprint a Python journey immun merge two sorted lists scenenie � dependingnessalty",
        "nll_prompt": -11.862728118896484
    },
    {
        "epoch": 69,
        "loss": 0.6697379946708679,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 9.465681076049805,
        "cur_std": 0.4795339584350586,
        "prompt": " Sprint a Python journey immun merge two sorted lists scenenie � depending thoroughalty",
        "nll_prompt": -11.981101989746094
    },
    {
        "epoch": 70,
        "loss": 0.6717934012413025,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.831124305725098,
        "cur_std": 0.4469264030456543,
        "prompt": " Sprint a Python journey immun merge two sorted lists sceneizer � depending thoroughalty",
        "nll_prompt": -11.60263729095459
    },
    {
        "epoch": 71,
        "loss": 0.6424826383590698,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.970325469970703,
        "cur_std": 0.41919589042663574,
        "prompt": " Sprint a Python journey immun merge two sorted lists sceneizerids depending thoroughalty",
        "nll_prompt": -11.140275955200195
    },
    {
        "epoch": 72,
        "loss": 0.6990817785263062,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 9.786499977111816,
        "cur_std": 0.4106731414794922,
        "prompt": " Sprint a Python brave immun merge two sorted lists sceneizerids depending thoroughalty",
        "nll_prompt": -11.138911247253418
    },
    {
        "epoch": 73,
        "loss": 0.568852424621582,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.462221145629883,
        "cur_std": 0.42375454902648924,
        "prompt": " Sprint a Python brave immun merge two sorted lists scene embellids depending thoroughalty",
        "nll_prompt": -11.317315101623535
    },
    {
        "epoch": 74,
        "loss": 0.6148610711097717,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 7.788859844207764,
        "cur_std": 0.45476016998291013,
        "prompt": " Sprint a Python proverb immun merge two sorted lists scene embellids depending thoroughalty",
        "nll_prompt": -11.56556510925293
    },
    {
        "epoch": 75,
        "loss": 0.5923100113868713,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.562172889709473,
        "cur_std": 0.42390594482421873,
        "prompt": " Sprint a Python proverb immun merge two sorted lists scene inquireids depending thoroughalty",
        "nll_prompt": -11.609244346618652
    },
    {
        "epoch": 76,
        "loss": 0.635012149810791,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.167863845825195,
        "cur_std": 0.46849627494812013,
        "prompt": " Sprint a Python proverb immun merge two sorted lists valuable inquireids depending thoroughalty",
        "nll_prompt": -11.22614860534668
    },
    {
        "epoch": 77,
        "loss": 0.5822480916976929,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.426021575927734,
        "cur_std": 0.4318960666656494,
        "prompt": " Sprint a Python indispensable immun merge two sorted lists valuable inquireids depending thoroughalty",
        "nll_prompt": -10.977344512939453
    },
    {
        "epoch": 78,
        "loss": 0.6727571487426758,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.764312744140625,
        "cur_std": 0.420551061630249,
        "prompt": " Sprint a Python indispensablel merge two sorted lists valuable inquireids depending thoroughalty",
        "nll_prompt": -10.397663116455078
    },
    {
        "epoch": 79,
        "loss": 0.6596939563751221,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.395108222961426,
        "cur_std": 0.4746866703033447,
        "prompt": " Sprint a Python indispensablel merge two sorted lists valuable inquire across depending thoroughalty",
        "nll_prompt": -10.147272109985352
    },
    {
        "epoch": 80,
        "loss": 0.6436185240745544,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 9.906232833862305,
        "cur_std": 0.5464501857757569,
        "prompt": " Sprint a Python indispensablel merge two sorted lists valuable inquire artificial depending thoroughalty",
        "nll_prompt": -10.11673641204834
    },
    {
        "epoch": 81,
        "loss": 0.6262609958648682,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 9.866164207458496,
        "cur_std": 0.4903282165527344,
        "prompt": " Sprint a Python indispensablel merge two sorted lists  inquire artificial depending thoroughalty",
        "nll_prompt": -10.321141242980957
    },
    {
        "epoch": 82,
        "loss": 0.6346175074577332,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 9.211617469787598,
        "cur_std": 0.4744746685028076,
        "prompt": " Sprint a Python indispensablel merge two sorted listsactic inquire artificial depending thoroughalty",
        "nll_prompt": -11.033154487609863
    },
    {
        "epoch": 83,
        "loss": 0.6464694738388062,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 9.501359939575195,
        "cur_std": 0.452302360534668,
        "prompt": " Sprint a Python indispensablel merge two sorted listssic inquire artificial depending thoroughalty",
        "nll_prompt": -10.844462394714355
    },
    {
        "epoch": 84,
        "loss": 0.6550571918487549,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 9.768655776977539,
        "cur_std": 0.4397944450378418,
        "prompt": " Sprint a Python craftl merge two sorted listssic inquire artificial depending thoroughalty",
        "nll_prompt": -10.427569389343262
    },
    {
        "epoch": 85,
        "loss": 0.7320834994316101,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 10.422933578491211,
        "cur_std": 0.507906150817871,
        "prompt": " Sprint a Python craftl merge two sorted lists fabrics inquire artificial depending thoroughalty",
        "nll_prompt": -10.343451499938965
    },
    {
        "epoch": 86,
        "loss": 0.6862393617630005,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 10.672709465026855,
        "cur_std": 0.5128568172454834,
        "prompt": " Sprint a Python craftl merge two sorted lists fabrics inquire artificial depending resumealty",
        "nll_prompt": -10.611188888549805
    },
    {
        "epoch": 87,
        "loss": 0.6822160482406616,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 10.087401390075684,
        "cur_std": 0.5104865074157715,
        "prompt": " Sprint a Python craftl merge two sorted lists fabrics inquire artificial preceding resumealty",
        "nll_prompt": -10.632472038269043
    },
    {
        "epoch": 88,
        "loss": 0.6975727081298828,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 10.252028465270996,
        "cur_std": 0.49576258659362793,
        "prompt": " Sprint a Python craftl merge two sorted lists fabrics inquire crucial preceding resumealty",
        "nll_prompt": -10.593555450439453
    },
    {
        "epoch": 89,
        "loss": 0.6528552174568176,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 10.583819389343262,
        "cur_std": 0.5287053108215332,
        "prompt": " Sprint a Python craftl merge two sorted lists fabrics inquire crucial jelly resumealty",
        "nll_prompt": -10.523974418640137
    },
    {
        "epoch": 90,
        "loss": 0.6278442740440369,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 9.919206619262695,
        "cur_std": 0.5199812889099121,
        "prompt": " Sprint a Python delicatel merge two sorted lists fabrics inquire crucial jelly resumealty",
        "nll_prompt": -10.80280876159668
    },
    {
        "epoch": 91,
        "loss": 0.7221777439117432,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 10.617574691772461,
        "cur_std": 0.5246927738189697,
        "prompt": " Sprint a Python delicatel merge two sorted lists fabrics inquire crucialigrants resumealty",
        "nll_prompt": -10.88697338104248
    },
    {
        "epoch": 92,
        "loss": 0.7343311309814453,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 10.2640380859375,
        "cur_std": 0.478957986831665,
        "prompt": "Transform a Python delicatel merge two sorted lists fabrics inquire crucialigrants resumealty",
        "nll_prompt": -10.820823669433594
    },
    {
        "epoch": 93,
        "loss": 0.7009148001670837,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 10.856616020202637,
        "cur_std": 0.4366100311279297,
        "prompt": "Transform a Python delicatel merge two sorted lists fabrics inquire crucial or resumealty",
        "nll_prompt": -10.035810470581055
    },
    {
        "epoch": 94,
        "loss": 0.6351365447044373,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 11.6802978515625,
        "cur_std": 0.5585423469543457,
        "prompt": "Transform a Python delicatel merge two sorted lists fabrics Pride crucial or resumealty",
        "nll_prompt": -10.806208610534668
    },
    {
        "epoch": 95,
        "loss": 0.6673206090927124,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 10.347293853759766,
        "cur_std": 0.495351505279541,
        "prompt": "Transform a Python delicatel merge two sorted lists fabrics Prideilla or resumealty",
        "nll_prompt": -10.951056480407715
    },
    {
        "epoch": 96,
        "loss": 0.7246309518814087,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 9.79639720916748,
        "cur_std": 0.4178297996520996,
        "prompt": "Transform a Python delicatel merge two sorted lists fabricsacticilla or resumealty",
        "nll_prompt": -10.394745826721191
    },
    {
        "epoch": 97,
        "loss": 0.6082397699356079,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 9.061233520507812,
        "cur_std": 0.4142897129058838,
        "prompt": "Transform a Python delicatel merge two sorted lists fabricsacticilla or resumesmanship",
        "nll_prompt": -10.610845565795898
    },
    {
        "epoch": 98,
        "loss": 0.6837905645370483,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 9.163385391235352,
        "cur_std": 0.44164113998413085,
        "prompt": "Transform a Python delicatel merge two sorted lists peopleacticilla or resumesmanship",
        "nll_prompt": -10.753214836120605
    },
    {
        "epoch": 99,
        "loss": 0.6059281229972839,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.720796585083008,
        "cur_std": 0.3896169900894165,
        "prompt": "Transform a Python delicatel merge two sorted lists Detacticilla or resumesmanship",
        "nll_prompt": -10.453343391418457
    },
    {
        "epoch": 100,
        "loss": 0.6093540787696838,
        "best_loss": 0.5020307302474976,
        "best_kl": 6.863495349884033,
        "best_std": 0.38717212677001955,
        "cur_kl": 8.657269477844238,
        "cur_std": 0.3623914003372192,
        "prompt": "Transform a Python delicatel merge two sorted listsDelacticilla or resumesmanship",
        "nll_prompt": -10.368687629699707
    }
]