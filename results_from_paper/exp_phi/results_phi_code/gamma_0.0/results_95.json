[
    {
        "epoch": 1,
        "loss": 1.1504946947097778,
        "best_loss": 1.1504946947097778,
        "best_kl": 11.156661987304688,
        "best_std": 0.7152506828308105,
        "cur_kl": 11.156661987304688,
        "cur_std": 0.7152506828308105,
        "prompt": "Prompt: Write a Python function that takes a decimal number as input.]",
        "nll_prompt": -2.893185615539551
    },
    {
        "epoch": 2,
        "loss": 0.991037130355835,
        "best_loss": 0.991037130355835,
        "best_kl": 10.286500930786133,
        "best_std": 0.6218564510345459,
        "cur_kl": 10.286500930786133,
        "cur_std": 0.6218564510345459,
        "prompt": "Prompt:mt a Python function that takes a decimal number as input.]",
        "nll_prompt": -4.906389236450195
    },
    {
        "epoch": 3,
        "loss": 0.9928671717643738,
        "best_loss": 0.991037130355835,
        "best_kl": 9.92682933807373,
        "best_std": 0.6116320133209229,
        "cur_kl": 9.92682933807373,
        "cur_std": 0.6116320133209229,
        "prompt": "13pt:mt a Python function that takes a decimal number as input.]",
        "nll_prompt": -5.9556708335876465
    },
    {
        "epoch": 4,
        "loss": 1.0518664121627808,
        "best_loss": 0.991037130355835,
        "best_kl": 9.92682933807373,
        "best_std": 0.6116320133209229,
        "cur_kl": 11.149490356445312,
        "cur_std": 0.6530691623687744,
        "prompt": "13 FIG:mt a Python function that takes a decimal number as input.]",
        "nll_prompt": -6.507372856140137
    },
    {
        "epoch": 5,
        "loss": 1.0164602994918823,
        "best_loss": 0.991037130355835,
        "best_kl": 9.92682933807373,
        "best_std": 0.6116320133209229,
        "cur_kl": 10.231599807739258,
        "cur_std": 0.6423671245574951,
        "prompt": "13 FIGsummt a Python function that takes a decimal number as input.]",
        "nll_prompt": -6.134621620178223
    },
    {
        "epoch": 6,
        "loss": 1.0410631895065308,
        "best_loss": 0.991037130355835,
        "best_kl": 9.92682933807373,
        "best_std": 0.6116320133209229,
        "cur_kl": 10.360801696777344,
        "cur_std": 0.6483818531036377,
        "prompt": "13 FIGsummt C Python function that takes a decimal number as input.]",
        "nll_prompt": -6.81594181060791
    },
    {
        "epoch": 7,
        "loss": 1.0472522974014282,
        "best_loss": 0.991037130355835,
        "best_kl": 9.92682933807373,
        "best_std": 0.6116320133209229,
        "cur_kl": 10.715351104736328,
        "cur_std": 0.665692949295044,
        "prompt": "13 FIGMarmt C Python function that takes a decimal number as input.]",
        "nll_prompt": -7.056077003479004
    },
    {
        "epoch": 8,
        "loss": 1.0064916610717773,
        "best_loss": 0.991037130355835,
        "best_kl": 9.92682933807373,
        "best_std": 0.6116320133209229,
        "cur_kl": 10.814348220825195,
        "cur_std": 0.7143025398254395,
        "prompt": " Asia FIGMarmt C Python function that takes a decimal number as input.]",
        "nll_prompt": -7.6105523109436035
    },
    {
        "epoch": 9,
        "loss": 1.0180450677871704,
        "best_loss": 0.991037130355835,
        "best_kl": 9.92682933807373,
        "best_std": 0.6116320133209229,
        "cur_kl": 10.404475212097168,
        "cur_std": 0.6770525455474854,
        "prompt": " AsiaIXMarmt C Python function that takes a decimal number as input.]",
        "nll_prompt": -7.58504581451416
    },
    {
        "epoch": 10,
        "loss": 1.038299798965454,
        "best_loss": 0.991037130355835,
        "best_kl": 9.92682933807373,
        "best_std": 0.6116320133209229,
        "cur_kl": 11.23867416381836,
        "cur_std": 0.697255277633667,
        "prompt": " AsiaIXMarmtP Python function that takes a decimal number as input.]",
        "nll_prompt": -7.332883358001709
    },
    {
        "epoch": 11,
        "loss": 1.120870590209961,
        "best_loss": 0.991037130355835,
        "best_kl": 9.92682933807373,
        "best_std": 0.6116320133209229,
        "cur_kl": 11.09442138671875,
        "cur_std": 0.6302866458892822,
        "prompt": "imgIXMarmtP Python function that takes a decimal number as input.]",
        "nll_prompt": -7.244293689727783
    },
    {
        "epoch": 12,
        "loss": 1.035902738571167,
        "best_loss": 0.991037130355835,
        "best_kl": 9.122638702392578,
        "best_std": 0.5321558952331543,
        "cur_kl": 9.122638702392578,
        "cur_std": 0.5321558952331543,
        "prompt": "imgIX binarymtP Python function that takes a decimal number as input.]",
        "nll_prompt": -7.406630039215088
    },
    {
        "epoch": 13,
        "loss": 0.8826563954353333,
        "best_loss": 0.8826563954353333,
        "best_kl": 9.122638702392578,
        "best_std": 0.5321558952331543,
        "cur_kl": 9.78573989868164,
        "cur_std": 0.5989598751068115,
        "prompt": " commonIX binarymtP Python function that takes a decimal number as input.]",
        "nll_prompt": -7.204648494720459
    },
    {
        "epoch": 14,
        "loss": 0.9342458248138428,
        "best_loss": 0.8826563954353333,
        "best_kl": 9.122638702392578,
        "best_std": 0.5321558952331543,
        "cur_kl": 9.576591491699219,
        "cur_std": 0.5886030673980713,
        "prompt": "�IX binarymtP Python function that takes a decimal number as input.]",
        "nll_prompt": -7.2696661949157715
    },
    {
        "epoch": 15,
        "loss": 0.9801146984100342,
        "best_loss": 0.8826563954353333,
        "best_kl": 9.122638702392578,
        "best_std": 0.5321558952331543,
        "cur_kl": 9.526628494262695,
        "cur_std": 0.5328323364257812,
        "prompt": "� influential binarymtP Python function that takes a decimal number as input.]",
        "nll_prompt": -7.523453712463379
    },
    {
        "epoch": 16,
        "loss": 1.031447172164917,
        "best_loss": 0.8826563954353333,
        "best_kl": 9.122638702392578,
        "best_std": 0.5321558952331543,
        "cur_kl": 9.369000434875488,
        "cur_std": 0.6390543460845948,
        "prompt": "� Yuan binarymtP Python function that takes a decimal number as input.]",
        "nll_prompt": -7.469305038452148
    },
    {
        "epoch": 17,
        "loss": 1.010514497756958,
        "best_loss": 0.8826563954353333,
        "best_kl": 9.122638702392578,
        "best_std": 0.5321558952331543,
        "cur_kl": 10.396507263183594,
        "cur_std": 0.6210841178894043,
        "prompt": "� vector binarymtP Python function that takes a decimal number as input.]",
        "nll_prompt": -7.233813762664795
    },
    {
        "epoch": 18,
        "loss": 1.022035002708435,
        "best_loss": 0.8826563954353333,
        "best_kl": 9.122638702392578,
        "best_std": 0.5321558952331543,
        "cur_kl": 9.124587059020996,
        "cur_std": 0.599902868270874,
        "prompt": "�ender binarymtP Python function that takes a decimal number as input.]",
        "nll_prompt": -7.456475734710693
    },
    {
        "epoch": 19,
        "loss": 0.9569364786148071,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 8.90036392211914,
        "cur_std": 0.5869944572448731,
        "prompt": "�ender binary459P Python function that takes a decimal number as input.]",
        "nll_prompt": -7.1594719886779785
    },
    {
        "epoch": 20,
        "loss": 0.9819260239601135,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 8.949824333190918,
        "cur_std": 0.6199344158172607,
        "prompt": "�ender binaryarpP Python function that takes a decimal number as input.]",
        "nll_prompt": -7.31537389755249
    },
    {
        "epoch": 21,
        "loss": 0.9912753105163574,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 9.151761054992676,
        "cur_std": 0.5207307815551758,
        "prompt": "�ender binaryarpP Python function thatab a decimal number as input.]",
        "nll_prompt": -8.726301193237305
    },
    {
        "epoch": 22,
        "loss": 1.0446364879608154,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 10.53872013092041,
        "cur_std": 0.5339344501495361,
        "prompt": "�ender binaryarpP Python function thatabised decimal number as input.]",
        "nll_prompt": -9.603321075439453
    },
    {
        "epoch": 23,
        "loss": 1.0632517337799072,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 12.052783012390137,
        "cur_std": 0.5670963764190674,
        "prompt": "�ender binaryarpP Python function thatabised decimal number terms input.]",
        "nll_prompt": -10.403095245361328
    },
    {
        "epoch": 24,
        "loss": 1.1681195497512817,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 14.366530418395996,
        "cur_std": 0.6457852840423584,
        "prompt": "�ender binaryarp represents Python function thatabised decimal number terms input.]",
        "nll_prompt": -10.341209411621094
    },
    {
        "epoch": 25,
        "loss": 1.1827095746994019,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 14.737960815429688,
        "cur_std": 0.6575046062469483,
        "prompt": " parender binaryarp represents Python function thatabised decimal number terms input.]",
        "nll_prompt": -10.226897239685059
    },
    {
        "epoch": 26,
        "loss": 1.135010004043579,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 14.538219451904297,
        "cur_std": 0.6797573089599609,
        "prompt": " parender binary step represents Python function thatabised decimal number terms input.]",
        "nll_prompt": -10.242509841918945
    },
    {
        "epoch": 27,
        "loss": 1.0994387865066528,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 14.199752807617188,
        "cur_std": 0.6599039077758789,
        "prompt": " par Barcl binary step represents Python function thatabised decimal number terms input.]",
        "nll_prompt": -11.08724308013916
    },
    {
        "epoch": 28,
        "loss": 1.1235907077789307,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 13.551361083984375,
        "cur_std": 0.7208975791931153,
        "prompt": " par Barcl binary swapping represents Python function thatabised decimal number terms input.]",
        "nll_prompt": -10.946765899658203
    },
    {
        "epoch": 29,
        "loss": 1.1531249284744263,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 13.304258346557617,
        "cur_std": 0.7178279399871826,
        "prompt": " par Barcl binary swapping represents Python function thatabised decimal numberos input.]",
        "nll_prompt": -11.001543045043945
    },
    {
        "epoch": 30,
        "loss": 1.1381562948226929,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 13.583012580871582,
        "cur_std": 0.6896898746490479,
        "prompt": " par Barcl binary swapping represents Python function thatabised decimal numbercustom input.]",
        "nll_prompt": -11.208906173706055
    },
    {
        "epoch": 31,
        "loss": 1.0596815347671509,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 13.070733070373535,
        "cur_std": 0.6930367946624756,
        "prompt": " Ae Barcl binary swapping represents Python function thatabised decimal numbercustom input.]",
        "nll_prompt": -11.553092002868652
    },
    {
        "epoch": 32,
        "loss": 1.0192736387252808,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 11.993366241455078,
        "cur_std": 0.6164553165435791,
        "prompt": " Ae Barcl binary swapping\", Python function thatabised decimal numbercustom input.]",
        "nll_prompt": -11.07008171081543
    },
    {
        "epoch": 33,
        "loss": 1.0272560119628906,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 12.034821510314941,
        "cur_std": 0.6024429798126221,
        "prompt": " Ae Barcl binary`\", Python function thatabised decimal numbercustom input.]",
        "nll_prompt": -11.37363338470459
    },
    {
        "epoch": 34,
        "loss": 1.0586756467819214,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 11.214872360229492,
        "cur_std": 0.5906600952148438,
        "prompt": " Ae Barcl binary`\", Python function thatabised decimal numberacus input.]",
        "nll_prompt": -11.396475791931152
    },
    {
        "epoch": 35,
        "loss": 0.891051709651947,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 10.713825225830078,
        "cur_std": 0.5505382537841796,
        "prompt": " corresponding Barcl binary`\", Python function thatabised decimal numberacus input.]",
        "nll_prompt": -11.31690788269043
    },
    {
        "epoch": 36,
        "loss": 0.8940109014511108,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 10.71869945526123,
        "cur_std": 0.5047313690185546,
        "prompt": " corresponding Barcl binary`\", Python function thatabised decimal numberacus Adams.]",
        "nll_prompt": -11.975818634033203
    },
    {
        "epoch": 37,
        "loss": 0.992554247379303,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 10.114185333251953,
        "cur_std": 0.487994909286499,
        "prompt": " corresponding Barcl binary`\", Python function thatabised decimal numberacus dab.]",
        "nll_prompt": -11.782060623168945
    },
    {
        "epoch": 38,
        "loss": 0.9787982702255249,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 9.781560897827148,
        "cur_std": 0.49364376068115234,
        "prompt": " corresponding jump binary`\", Python function thatabised decimal numberacus dab.]",
        "nll_prompt": -11.030988693237305
    },
    {
        "epoch": 39,
        "loss": 1.0162352323532104,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 10.462607383728027,
        "cur_std": 0.4855602264404297,
        "prompt": " ad jump binary`\", Python function thatabised decimal numberacus dab.]",
        "nll_prompt": -10.918414115905762
    },
    {
        "epoch": 40,
        "loss": 1.021396517753601,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 9.529808044433594,
        "cur_std": 0.4742398262023926,
        "prompt": " adgor binary`\", Python function thatabised decimal numberacus dab.]",
        "nll_prompt": -11.257555961608887
    },
    {
        "epoch": 41,
        "loss": 0.9906678795814514,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 10.3121337890625,
        "cur_std": 0.430173397064209,
        "prompt": " adgor binary`\", Python function thatab online decimal numberacus dab.]",
        "nll_prompt": -11.32817268371582
    },
    {
        "epoch": 42,
        "loss": 0.9981167316436768,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 10.921579360961914,
        "cur_std": 0.43919715881347654,
        "prompt": " Bahgor binary`\", Python function thatab online decimal numberacus dab.]",
        "nll_prompt": -10.740568161010742
    },
    {
        "epoch": 43,
        "loss": 1.019199013710022,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 10.436479568481445,
        "cur_std": 0.4669789791107178,
        "prompt": " Bahgor binary`,\", Python function thatab online decimal numberacus dab.]",
        "nll_prompt": -10.91566276550293
    },
    {
        "epoch": 44,
        "loss": 0.9909396171569824,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 11.432329177856445,
        "cur_std": 0.4358822822570801,
        "prompt": " Bahgor binary Protestant\", Python function thatab online decimal numberacus dab.]",
        "nll_prompt": -11.134831428527832
    },
    {
        "epoch": 45,
        "loss": 1.1196742057800293,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 13.075662612915039,
        "cur_std": 0.4823592662811279,
        "prompt": " Bah potion binary Protestant\", Python function thatab online decimal numberacus dab.]",
        "nll_prompt": -11.628232955932617
    },
    {
        "epoch": 46,
        "loss": 1.0083129405975342,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 12.030632019042969,
        "cur_std": 0.478092622756958,
        "prompt": " Bah potion binary Protestant\", Python function thatab familiar decimal numberacus dab.]",
        "nll_prompt": -11.712803840637207
    },
    {
        "epoch": 47,
        "loss": 1.0061050653457642,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 11.822686195373535,
        "cur_std": 0.4732548713684082,
        "prompt": " Bah potion binary Monaco\", Python function thatab familiar decimal numberacus dab.]",
        "nll_prompt": -12.004944801330566
    },
    {
        "epoch": 48,
        "loss": 1.085918664932251,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 12.192243576049805,
        "cur_std": 0.48852057456970216,
        "prompt": " Bah potion binary Monaco\", Python function thatab familiar decimal numberint dab.]",
        "nll_prompt": -11.957371711730957
    },
    {
        "epoch": 49,
        "loss": 1.0486897230148315,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 12.084176063537598,
        "cur_std": 0.48274736404418944,
        "prompt": " Bah potion binary Monaco\", Python function thatab familiar decimal number reinforcement dab.]",
        "nll_prompt": -11.810297966003418
    },
    {
        "epoch": 50,
        "loss": 1.1018065214157104,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 13.030338287353516,
        "cur_std": 0.5114300727844239,
        "prompt": " Bah potion binary Monacoville Python function thatab familiar decimal number reinforcement dab.]",
        "nll_prompt": -11.832426071166992
    },
    {
        "epoch": 51,
        "loss": 1.0754189491271973,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 12.053428649902344,
        "cur_std": 0.5549794197082519,
        "prompt": " Bahowned binary Monacoville Python function thatab familiar decimal number reinforcement dab.]",
        "nll_prompt": -11.128618240356445
    },
    {
        "epoch": 52,
        "loss": 1.060709834098816,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 11.439814567565918,
        "cur_std": 0.5315505981445312,
        "prompt": " Bahowned binary Monacoville`. function thatab familiar decimal number reinforcement dab.]",
        "nll_prompt": -12.035731315612793
    },
    {
        "epoch": 53,
        "loss": 1.082712173461914,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 11.19170093536377,
        "cur_std": 0.5156176090240479,
        "prompt": " Bahowned binary Monacoville`. function thatab familiar decimal numberith dab.]",
        "nll_prompt": -12.21357250213623
    },
    {
        "epoch": 54,
        "loss": 1.0924590826034546,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 12.074015617370605,
        "cur_std": 0.4960925579071045,
        "prompt": " celestialowned binary Monacoville`. function thatab familiar decimal numberith dab.]",
        "nll_prompt": -12.669886589050293
    },
    {
        "epoch": 55,
        "loss": 1.0936870574951172,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 11.705029487609863,
        "cur_std": 0.5264974594116211,
        "prompt": "allowned binary Monacoville`. function thatab familiar decimal numberith dab.]",
        "nll_prompt": -11.891067504882812
    },
    {
        "epoch": 56,
        "loss": 1.1058350801467896,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 12.80202865600586,
        "cur_std": 0.5626363754272461,
        "prompt": "allowned binary Monacoville`. function thatab familiar decimal number Eh dab.]",
        "nll_prompt": -11.52604866027832
    },
    {
        "epoch": 57,
        "loss": 1.1176291704177856,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 12.190378189086914,
        "cur_std": 0.5602593898773194,
        "prompt": "all Champion binary Monacoville`. function thatab familiar decimal number Eh dab.]",
        "nll_prompt": -11.958958625793457
    },
    {
        "epoch": 58,
        "loss": 1.0375624895095825,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 12.188577651977539,
        "cur_std": 0.5345252513885498,
        "prompt": "all Champion binary Monacoentary`. function thatab familiar decimal number Eh dab.]",
        "nll_prompt": -12.432520866394043
    },
    {
        "epoch": 59,
        "loss": 1.125419020652771,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 11.455385208129883,
        "cur_std": 0.5089492797851562,
        "prompt": "all Champion binary Monacoentary`. function thatab familiar decimal number unl dab.]",
        "nll_prompt": -12.40638542175293
    },
    {
        "epoch": 60,
        "loss": 1.0378340482711792,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 12.190897941589355,
        "cur_std": 0.5367830276489258,
        "prompt": "all Champion binary Monaco comprehension`. function thatab familiar decimal number unl dab.]",
        "nll_prompt": -12.205994606018066
    },
    {
        "epoch": 61,
        "loss": 1.0751392841339111,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 11.162825584411621,
        "cur_std": 0.5194688320159913,
        "prompt": "allenne binary Monaco comprehension`. function thatab familiar decimal number unl dab.]",
        "nll_prompt": -11.834098815917969
    },
    {
        "epoch": 62,
        "loss": 1.096482515335083,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 11.071067810058594,
        "cur_std": 0.5045424461364746,
        "prompt": "allenne binary Monaco comprehension`. function thatab familiar decimal numberiggle dab.]",
        "nll_prompt": -12.107572555541992
    },
    {
        "epoch": 63,
        "loss": 1.1195437908172607,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 10.110281944274902,
        "cur_std": 0.45937910079956057,
        "prompt": "allenne binary professionals comprehension`. function thatab familiar decimal numberiggle dab.]",
        "nll_prompt": -11.972089767456055
    },
    {
        "epoch": 64,
        "loss": 1.047444462776184,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 10.63438606262207,
        "cur_std": 0.4669752597808838,
        "prompt": "allenne binary professionals comprehension`. function thatab Dai decimal numberiggle dab.]",
        "nll_prompt": -12.25267219543457
    },
    {
        "epoch": 65,
        "loss": 1.069656252861023,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 10.49831485748291,
        "cur_std": 0.4848135471343994,
        "prompt": "allenne binary professionals comprehension`. function thatab respect decimal numberiggle dab.]",
        "nll_prompt": -11.839594841003418
    },
    {
        "epoch": 66,
        "loss": 1.0535894632339478,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 11.176215171813965,
        "cur_std": 0.5196243762969971,
        "prompt": " connectedenne binary professionals comprehension`. function thatab respect decimal numberiggle dab.]",
        "nll_prompt": -12.093152046203613
    },
    {
        "epoch": 67,
        "loss": 0.9848636388778687,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 11.471969604492188,
        "cur_std": 0.5080772876739502,
        "prompt": " connectedenne binary professionals comprehension`. function thatab respect decimal numberiggle leave.]",
        "nll_prompt": -11.994385719299316
    },
    {
        "epoch": 68,
        "loss": 1.067043423652649,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 11.675088882446289,
        "cur_std": 0.5113895893096924,
        "prompt": " connectedenne binary professionals comprehension`. function thatabdata decimal numberiggle leave.]",
        "nll_prompt": -11.73603630065918
    },
    {
        "epoch": 69,
        "loss": 1.0860438346862793,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 11.596481323242188,
        "cur_std": 0.4773865222930908,
        "prompt": " connectedenne binary professionals comprehension`. function thatabdata decimal numberiggle euphem.]",
        "nll_prompt": -12.225296020507812
    },
    {
        "epoch": 70,
        "loss": 1.1102027893066406,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 10.333757400512695,
        "cur_std": 0.44365725517272947,
        "prompt": "entenne binary professionals comprehension`. function thatabdata decimal numberiggle euphem.]",
        "nll_prompt": -11.896293640136719
    },
    {
        "epoch": 71,
        "loss": 1.016357183456421,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 11.127974510192871,
        "cur_std": 0.4489948272705078,
        "prompt": "entenne binary professionals comprehension`. function thatab deep decimal numberiggle euphem.]",
        "nll_prompt": -12.010539054870605
    },
    {
        "epoch": 72,
        "loss": 1.030236840248108,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 10.758331298828125,
        "cur_std": 0.5026445388793945,
        "prompt": "entenne binary professionals comprehension`. function that execut deep decimal numberiggle euphem.]",
        "nll_prompt": -11.813158988952637
    },
    {
        "epoch": 73,
        "loss": 1.0978115797042847,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 13.831920623779297,
        "cur_std": 0.5892647266387939,
        "prompt": "\":enne binary professionals comprehension`. function that execut deep decimal numberiggle euphem.]",
        "nll_prompt": -12.188284873962402
    },
    {
        "epoch": 74,
        "loss": 1.115925908088684,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 12.100150108337402,
        "cur_std": 0.551841402053833,
        "prompt": " Kerenne binary professionals comprehension`. function that execut deep decimal numberiggle euphem.]",
        "nll_prompt": -11.89594841003418
    },
    {
        "epoch": 75,
        "loss": 1.1080294847488403,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 13.148361206054688,
        "cur_std": 0.5490827560424805,
        "prompt": " Kerenne binary you comprehension`. function that execut deep decimal numberiggle euphem.]",
        "nll_prompt": -11.576224327087402
    },
    {
        "epoch": 76,
        "loss": 1.1522185802459717,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 13.64565658569336,
        "cur_std": 0.5651319980621338,
        "prompt": " Kerenne binary you comprehension`. function that execut deep decimal number or euphem.]",
        "nll_prompt": -10.75499153137207
    },
    {
        "epoch": 77,
        "loss": 1.1489067077636719,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 13.791732788085938,
        "cur_std": 0.5713006019592285,
        "prompt": " Ker Babylon binary you comprehension`. function that execut deep decimal number or euphem.]",
        "nll_prompt": -11.176530838012695
    },
    {
        "epoch": 78,
        "loss": 1.162686824798584,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 12.900174140930176,
        "cur_std": 0.48516016006469725,
        "prompt": " Ker Babylon binary you comprehension`. function thatogly deep decimal number or euphem.]",
        "nll_prompt": -11.443350791931152
    },
    {
        "epoch": 79,
        "loss": 1.064354419708252,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 12.029694557189941,
        "cur_std": 0.49556889533996584,
        "prompt": " Ker Babylon binary you comprehension`. function thatogly them decimal number or euphem.]",
        "nll_prompt": -11.300604820251465
    },
    {
        "epoch": 80,
        "loss": 0.9713116884231567,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 10.093018531799316,
        "cur_std": 0.4550345420837402,
        "prompt": " Ker scree binary you comprehension`. function thatogly them decimal number or euphem.]",
        "nll_prompt": -11.72693920135498
    },
    {
        "epoch": 81,
        "loss": 0.9485966563224792,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 10.32264232635498,
        "cur_std": 0.4584767818450928,
        "prompt": " Ker scree binary you comprehension`. function thatogly them decimal number measures euphem.]",
        "nll_prompt": -12.196330070495605
    },
    {
        "epoch": 82,
        "loss": 1.1073663234710693,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 10.283330917358398,
        "cur_std": 0.46100482940673826,
        "prompt": " Ker scree binary you comprehension`. function thatogly them decimal number Gardens euphem.]",
        "nll_prompt": -12.661670684814453
    },
    {
        "epoch": 83,
        "loss": 1.0981696844100952,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 11.836069107055664,
        "cur_std": 0.47157893180847166,
        "prompt": " Ker scree binary you years`. function thatogly them decimal number Gardens euphem.]",
        "nll_prompt": -12.73569393157959
    },
    {
        "epoch": 84,
        "loss": 0.9799064993858337,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 11.004169464111328,
        "cur_std": 0.45656404495239256,
        "prompt": " Ker scree binary you years`. function thatogly them decimal number grap euphem.]",
        "nll_prompt": -12.24519157409668
    },
    {
        "epoch": 85,
        "loss": 1.1532829999923706,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 14.538888931274414,
        "cur_std": 0.4778727054595947,
        "prompt": " < scree binary you years`. function thatogly them decimal number grap euphem.]",
        "nll_prompt": -11.996129989624023
    },
    {
        "epoch": 86,
        "loss": 0.9641907215118408,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 11.818245887756348,
        "cur_std": 0.44161696434020997,
        "prompt": " whirlwind scree binary you years`. function thatogly them decimal number grap euphem.]",
        "nll_prompt": -12.571834564208984
    },
    {
        "epoch": 87,
        "loss": 1.033761978149414,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 11.23530101776123,
        "cur_std": 0.440266752243042,
        "prompt": " whirlwind scree binary youator`. function thatogly them decimal number grap euphem.]",
        "nll_prompt": -12.448901176452637
    },
    {
        "epoch": 88,
        "loss": 1.091606855392456,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 11.181715965270996,
        "cur_std": 0.4553041458129883,
        "prompt": " whirlwind calculating binary youator`. function thatogly them decimal number grap euphem.]",
        "nll_prompt": -11.875601768493652
    },
    {
        "epoch": 89,
        "loss": 1.0388630628585815,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 9.920890808105469,
        "cur_std": 0.44496908187866213,
        "prompt": " whirlwind calculating binary youately`. function thatogly them decimal number grap euphem.]",
        "nll_prompt": -11.962581634521484
    },
    {
        "epoch": 90,
        "loss": 1.0128570795059204,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 10.356254577636719,
        "cur_std": 0.4559618949890137,
        "prompt": "it calculating binary youately`. function thatogly them decimal number grap euphem.]",
        "nll_prompt": -10.945343971252441
    },
    {
        "epoch": 91,
        "loss": 1.1059269905090332,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 10.019293785095215,
        "cur_std": 0.47891950607299805,
        "prompt": "it calculating binary youately`. function thatogly them decimal number grap't.]",
        "nll_prompt": -10.292991638183594
    },
    {
        "epoch": 92,
        "loss": 1.0745470523834229,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 9.915156364440918,
        "cur_std": 0.45341153144836427,
        "prompt": "it calculating binary youately`. function thatogly them decimal number medicine't.]",
        "nll_prompt": -10.493266105651855
    },
    {
        "epoch": 93,
        "loss": 0.9448406100273132,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 10.247946739196777,
        "cur_std": 0.4830792427062988,
        "prompt": "it calculating binary youately`. function thatogly them decimal numberac't.]",
        "nll_prompt": -10.464012145996094
    },
    {
        "epoch": 94,
        "loss": 0.9323520660400391,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 9.987104415893555,
        "cur_std": 0.48226451873779297,
        "prompt": "ear calculating binary youately`. function thatogly them decimal numberac't.]",
        "nll_prompt": -10.607184410095215
    },
    {
        "epoch": 95,
        "loss": 1.0345393419265747,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 10.582426071166992,
        "cur_std": 0.4809252262115479,
        "prompt": "ear calculating binary you who`. function thatogly them decimal numberac't.]",
        "nll_prompt": -10.512103080749512
    },
    {
        "epoch": 96,
        "loss": 1.0734449625015259,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 10.351515769958496,
        "cur_std": 0.48270473480224607,
        "prompt": "ear calculating binary you specifications`. function thatogly them decimal numberac't.]",
        "nll_prompt": -10.729612350463867
    },
    {
        "epoch": 97,
        "loss": 0.9584959149360657,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 10.016149520874023,
        "cur_std": 0.4508193016052246,
        "prompt": "ear calculating binary you specifications`. function thatogly them decimal number difficulties't.]",
        "nll_prompt": -10.704936027526855
    },
    {
        "epoch": 98,
        "loss": 1.0611428022384644,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 9.744345664978027,
        "cur_std": 0.45159454345703126,
        "prompt": "ear calculating binary you specifications`. function thatogly them decimal numberumsy't.]",
        "nll_prompt": -11.09400749206543
    },
    {
        "epoch": 99,
        "loss": 1.0480986833572388,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 9.1251220703125,
        "cur_std": 0.43619418144226074,
        "prompt": "ear calculating binary you perplex`. function thatogly them decimal numberumsy't.]",
        "nll_prompt": -11.002350807189941
    },
    {
        "epoch": 100,
        "loss": 0.9202163219451904,
        "best_loss": 0.8826563954353333,
        "best_kl": 8.90036392211914,
        "best_std": 0.5869944572448731,
        "cur_kl": 9.872611999511719,
        "cur_std": 0.44576430320739746,
        "prompt": "ear alongside binary you perplex`. function thatogly them decimal numberumsy't.]",
        "nll_prompt": -11.47072696685791
    }
]