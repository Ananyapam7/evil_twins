[
    {
        "epoch": 1,
        "loss": 1.1642488241195679,
        "best_loss": 1.1642488241195679,
        "best_kl": 14.826520919799805,
        "best_std": 0.6099509716033935,
        "cur_kl": 14.826520919799805,
        "cur_std": 0.6099509716033935,
        "prompt": "Write a Python function named `fibonacci` that generates theUS",
        "nll_prompt": -2.9718410968780518
    },
    {
        "epoch": 2,
        "loss": 1.1401758193969727,
        "best_loss": 1.1401758193969727,
        "best_kl": 14.826520919799805,
        "best_std": 0.6099509716033935,
        "cur_kl": 15.762225151062012,
        "cur_std": 0.5641420364379883,
        "prompt": "Write a Python function named `fibonacci` that sensing theUS",
        "nll_prompt": -4.265848159790039
    },
    {
        "epoch": 3,
        "loss": 1.0798969268798828,
        "best_loss": 1.0798969268798828,
        "best_kl": 14.826520919799805,
        "best_std": 0.6099509716033935,
        "cur_kl": 15.694091796875,
        "cur_std": 0.5733163356781006,
        "prompt": "Write a Python function named `fibonacci` that part theUS",
        "nll_prompt": -3.941251516342163
    },
    {
        "epoch": 4,
        "loss": 1.0793979167938232,
        "best_loss": 1.0793979167938232,
        "best_kl": 14.826520919799805,
        "best_std": 0.6099509716033935,
        "cur_kl": 16.599994659423828,
        "cur_std": 0.5714004516601563,
        "prompt": "Write a Python function named `fibonacci` Th part theUS",
        "nll_prompt": -5.0283966064453125
    },
    {
        "epoch": 5,
        "loss": 1.1482970714569092,
        "best_loss": 1.0793979167938232,
        "best_kl": 14.826520919799805,
        "best_std": 0.6099509716033935,
        "cur_kl": 15.851933479309082,
        "cur_std": 0.5752584934234619,
        "prompt": "Write a Python function named `fibonacci` Th sweeps theUS",
        "nll_prompt": -5.18295955657959
    },
    {
        "epoch": 6,
        "loss": 1.060807704925537,
        "best_loss": 1.060807704925537,
        "best_kl": 14.735427856445312,
        "best_std": 0.5661249160766602,
        "cur_kl": 14.735427856445312,
        "cur_std": 0.5661249160766602,
        "prompt": "roph a Python function named `fibonacci` Th sweeps theUS",
        "nll_prompt": -6.535560607910156
    },
    {
        "epoch": 7,
        "loss": 1.1344175338745117,
        "best_loss": 1.060807704925537,
        "best_kl": 14.735427856445312,
        "best_std": 0.5661249160766602,
        "cur_kl": 15.05025863647461,
        "cur_std": 0.6181649684906005,
        "prompt": "roph a Python function named `fibonacci` Th sweeps AirUS",
        "nll_prompt": -6.791266441345215
    },
    {
        "epoch": 8,
        "loss": 1.1898654699325562,
        "best_loss": 1.060807704925537,
        "best_kl": 14.735427856445312,
        "best_std": 0.5661249160766602,
        "cur_kl": 15.585354804992676,
        "cur_std": 0.5987949848175049,
        "prompt": "roph a Python function named `fibonacci` abduct sweeps AirUS",
        "nll_prompt": -7.4038262367248535
    },
    {
        "epoch": 9,
        "loss": 1.2033805847167969,
        "best_loss": 1.060807704925537,
        "best_kl": 14.327665328979492,
        "best_std": 0.5679901123046875,
        "cur_kl": 14.327665328979492,
        "cur_std": 0.5679901123046875,
        "prompt": "roph a Python function named `fibonacci` abduct sweepsAIRUS",
        "nll_prompt": -7.61414098739624
    },
    {
        "epoch": 10,
        "loss": 1.088103175163269,
        "best_loss": 1.060807704925537,
        "best_kl": 13.014750480651855,
        "best_std": 0.556959867477417,
        "cur_kl": 13.014750480651855,
        "cur_std": 0.556959867477417,
        "prompt": "roph a Python function named `fibonacci` abduct umbAIRUS",
        "nll_prompt": -7.413115501403809
    },
    {
        "epoch": 11,
        "loss": 1.111474871635437,
        "best_loss": 1.060807704925537,
        "best_kl": 13.014750480651855,
        "best_std": 0.556959867477417,
        "cur_kl": 13.617880821228027,
        "cur_std": 0.5478946685791015,
        "prompt": "roph a Python function named `fibonacci` abduct inquAIRUS",
        "nll_prompt": -6.962860584259033
    },
    {
        "epoch": 12,
        "loss": 1.1504334211349487,
        "best_loss": 1.060807704925537,
        "best_kl": 13.014750480651855,
        "best_std": 0.556959867477417,
        "cur_kl": 15.092230796813965,
        "cur_std": 0.5605701923370361,
        "prompt": "roph a Python function named `fibonacci` abduct inqu FRUS",
        "nll_prompt": -7.1302056312561035
    },
    {
        "epoch": 13,
        "loss": 1.1515884399414062,
        "best_loss": 1.060807704925537,
        "best_kl": 13.014750480651855,
        "best_std": 0.556959867477417,
        "cur_kl": 14.79977035522461,
        "cur_std": 0.5664788246154785,
        "prompt": "roph a Python function named `fibonacci` decentral inqu FRUS",
        "nll_prompt": -6.817455291748047
    },
    {
        "epoch": 14,
        "loss": 1.1822274923324585,
        "best_loss": 1.060807704925537,
        "best_kl": 13.014750480651855,
        "best_std": 0.556959867477417,
        "cur_kl": 13.522918701171875,
        "cur_std": 0.5351841449737549,
        "prompt": "roph a Python function named `fibonacci` decentral inquNazUS",
        "nll_prompt": -7.525670528411865
    },
    {
        "epoch": 15,
        "loss": 1.0153918266296387,
        "best_loss": 1.0153918266296387,
        "best_kl": 13.014750480651855,
        "best_std": 0.556959867477417,
        "cur_kl": 13.108268737792969,
        "cur_std": 0.5319019317626953,
        "prompt": "storm a Python function named `fibonacci` decentral inquNazUS",
        "nll_prompt": -7.161864280700684
    },
    {
        "epoch": 16,
        "loss": 1.163969874382019,
        "best_loss": 1.0153918266296387,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 13.003005981445312,
        "cur_std": 0.545618724822998,
        "prompt": "storm a Python function named `fibonacci`- inquNazUS",
        "nll_prompt": -6.805596828460693
    },
    {
        "epoch": 17,
        "loss": 1.1078345775604248,
        "best_loss": 1.0153918266296387,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 13.330866813659668,
        "cur_std": 0.5300183773040772,
        "prompt": "template a Python function named `fibonacci`- inquNazUS",
        "nll_prompt": -6.590363025665283
    },
    {
        "epoch": 18,
        "loss": 1.107178807258606,
        "best_loss": 1.0153918266296387,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 14.861117362976074,
        "cur_std": 0.6053494930267334,
        "prompt": "template South Python function named `fibonacci`- inquNazUS",
        "nll_prompt": -7.870850086212158
    },
    {
        "epoch": 19,
        "loss": 1.1303296089172363,
        "best_loss": 1.0153918266296387,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 14.674443244934082,
        "cur_std": 0.6189966678619385,
        "prompt": "template South Python function named `fibonacci`- inqu FORUS",
        "nll_prompt": -7.157466411590576
    },
    {
        "epoch": 20,
        "loss": 1.0033268928527832,
        "best_loss": 1.0033268928527832,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 15.285270690917969,
        "cur_std": 0.5767913818359375,
        "prompt": "template South Python function named `fibonacci`- inqu FOR that",
        "nll_prompt": -6.862823963165283
    },
    {
        "epoch": 21,
        "loss": 1.0865603685379028,
        "best_loss": 1.0033268928527832,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 15.473485946655273,
        "cur_std": 0.6347133159637451,
        "prompt": "template South Python function named `fibonacci`- inqu FORQ",
        "nll_prompt": -7.1195197105407715
    },
    {
        "epoch": 22,
        "loss": 1.1038964986801147,
        "best_loss": 1.0033268928527832,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 16.824142456054688,
        "cur_std": 0.6434133052825928,
        "prompt": "template South Python methods named `fibonacci`- inqu FORQ",
        "nll_prompt": -7.736814022064209
    },
    {
        "epoch": 23,
        "loss": 1.059027075767517,
        "best_loss": 1.0033268928527832,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 15.037288665771484,
        "cur_std": 0.6466786861419678,
        "prompt": "template 5 Python methods named `fibonacci`- inqu FORQ",
        "nll_prompt": -7.330425262451172
    },
    {
        "epoch": 24,
        "loss": 1.028011441230774,
        "best_loss": 1.0033268928527832,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 15.303573608398438,
        "cur_std": 0.6625987529754639,
        "prompt": "template 5 Python methods named `fibonacci`-Le FORQ",
        "nll_prompt": -7.392120838165283
    },
    {
        "epoch": 25,
        "loss": 1.1765464544296265,
        "best_loss": 1.0033268928527832,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 15.434306144714355,
        "cur_std": 0.6816599369049072,
        "prompt": "template 5 Python methods named `fibonacci`-LT FORQ",
        "nll_prompt": -7.297241687774658
    },
    {
        "epoch": 26,
        "loss": 1.1669542789459229,
        "best_loss": 1.0033268928527832,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 15.23745346069336,
        "cur_std": 0.7540316581726074,
        "prompt": "template 5 Python methods named `fibonacci`- Dean FORQ",
        "nll_prompt": -7.443491458892822
    },
    {
        "epoch": 27,
        "loss": 1.1427257061004639,
        "best_loss": 1.0033268928527832,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 14.045632362365723,
        "cur_std": 0.7241106986999511,
        "prompt": "template 5 Python methods named `fibonacci`- Dean FORFILE",
        "nll_prompt": -7.647731781005859
    },
    {
        "epoch": 28,
        "loss": 1.1041086912155151,
        "best_loss": 1.0033268928527832,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 14.34844970703125,
        "cur_std": 0.7185089111328125,
        "prompt": "template 5 Python methods R `fibonacci`- Dean FORFILE",
        "nll_prompt": -8.046881675720215
    },
    {
        "epoch": 29,
        "loss": 1.1882779598236084,
        "best_loss": 1.0033268928527832,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 16.598390579223633,
        "cur_std": 0.6831550121307373,
        "prompt": "template 5 Python methods R `fibonacci`-jp FORFILE",
        "nll_prompt": -7.985530376434326
    },
    {
        "epoch": 30,
        "loss": 1.1290816068649292,
        "best_loss": 1.0033268928527832,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 16.975528717041016,
        "cur_std": 0.6870049476623535,
        "prompt": "template 5 Python methods R `fibonacci` stilljp FORFILE",
        "nll_prompt": -8.569244384765625
    },
    {
        "epoch": 31,
        "loss": 1.121762990951538,
        "best_loss": 1.0033268928527832,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 15.772697448730469,
        "cur_std": 0.6438472747802735,
        "prompt": "template 5 Python methods R `fibonacci` Salamjp FORFILE",
        "nll_prompt": -9.395123481750488
    },
    {
        "epoch": 32,
        "loss": 1.0569210052490234,
        "best_loss": 1.0033268928527832,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 14.851351737976074,
        "cur_std": 0.6067126750946045,
        "prompt": "template 5 Python methods R `fibonacci` Salamjp FORero",
        "nll_prompt": -9.761194229125977
    },
    {
        "epoch": 33,
        "loss": 1.122936725616455,
        "best_loss": 1.0033268928527832,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 15.694372177124023,
        "cur_std": 0.6627979755401612,
        "prompt": "template 5 Python methods R `fibonacci` Salam: FORero",
        "nll_prompt": -8.656975746154785
    },
    {
        "epoch": 34,
        "loss": 1.0032967329025269,
        "best_loss": 1.0032967329025269,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 13.809282302856445,
        "cur_std": 0.6264928817749024,
        "prompt": "template 5 Python methods R `fibonacci` Salam Maur FORero",
        "nll_prompt": -9.45443344116211
    },
    {
        "epoch": 35,
        "loss": 1.1653858423233032,
        "best_loss": 1.0032967329025269,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 14.256667137145996,
        "cur_std": 0.6246804237365723,
        "prompt": "template 5 Python methods R `fibonacci` Mud Maur FORero",
        "nll_prompt": -9.283435821533203
    },
    {
        "epoch": 36,
        "loss": 1.2029812335968018,
        "best_loss": 1.0032967329025269,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 14.65121078491211,
        "cur_std": 0.5900560855865479,
        "prompt": " eyebrow 5 Python methods R `fibonacci` Mud Maur FORero",
        "nll_prompt": -9.10161018371582
    },
    {
        "epoch": 37,
        "loss": 1.1618088483810425,
        "best_loss": 1.0032967329025269,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 14.820219039916992,
        "cur_std": 0.6158064365386963,
        "prompt": " eyebrow 5 Python methods R `fibonacci` enigmatic Maur FORero",
        "nll_prompt": -9.185888290405273
    },
    {
        "epoch": 38,
        "loss": 1.1223324537277222,
        "best_loss": 1.0032967329025269,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 14.897552490234375,
        "cur_std": 0.6395442008972168,
        "prompt": " eyebrow 5 Python methods R `fibonacci` enigmatic Latin FORero",
        "nll_prompt": -8.676445960998535
    },
    {
        "epoch": 39,
        "loss": 1.1064261198043823,
        "best_loss": 1.0032967329025269,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 14.933549880981445,
        "cur_std": 0.6112722873687744,
        "prompt": " eyebrow 5 Python methods R `fibonacci` enigmaticiaz FORero",
        "nll_prompt": -9.24258041381836
    },
    {
        "epoch": 40,
        "loss": 1.1613761186599731,
        "best_loss": 1.0032967329025269,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 14.776421546936035,
        "cur_std": 0.6487720489501954,
        "prompt": " eyebrow 5 Python methods support `fibonacci` enigmaticiaz FORero",
        "nll_prompt": -9.241803169250488
    },
    {
        "epoch": 41,
        "loss": 0.8871591687202454,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 14.739917755126953,
        "cur_std": 0.6267083168029786,
        "prompt": " eyebrow 5 Python methods Anth `fibonacci` enigmaticiaz FORero",
        "nll_prompt": -9.51947021484375
    },
    {
        "epoch": 42,
        "loss": 1.1272931098937988,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 14.61793327331543,
        "cur_std": 0.6513237476348877,
        "prompt": " paragraph 5 Python methods Anth `fibonacci` enigmaticiaz FORero",
        "nll_prompt": -9.570671081542969
    },
    {
        "epoch": 43,
        "loss": 1.109350562095642,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 15.000968933105469,
        "cur_std": 0.651552391052246,
        "prompt": "ractive 5 Python methods Anth `fibonacci` enigmaticiaz FORero",
        "nll_prompt": -9.767651557922363
    },
    {
        "epoch": 44,
        "loss": 1.1578799486160278,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 15.984549522399902,
        "cur_std": 0.6186449527740479,
        "prompt": "ractive 5 Python 1 Anth `fibonacci` enigmaticiaz FORero",
        "nll_prompt": -10.01986312866211
    },
    {
        "epoch": 45,
        "loss": 1.2159626483917236,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 14.396950721740723,
        "cur_std": 0.5814472675323487,
        "prompt": " Clean 5 Python 1 Anth `fibonacci` enigmaticiaz FORero",
        "nll_prompt": -9.870129585266113
    },
    {
        "epoch": 46,
        "loss": 1.184465765953064,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 14.52529239654541,
        "cur_std": 0.5551291465759277,
        "prompt": " Clean 5 Python 1 Anth `fibonacci` enigmaticiaz FOR suspicion",
        "nll_prompt": -9.696022987365723
    },
    {
        "epoch": 47,
        "loss": 1.1036268472671509,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 15.492616653442383,
        "cur_std": 0.5809496402740478,
        "prompt": " Clean]] Python 1 Anth `fibonacci` enigmaticiaz FOR suspicion",
        "nll_prompt": -9.89017391204834
    },
    {
        "epoch": 48,
        "loss": 1.1871190071105957,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 14.340946197509766,
        "cur_std": 0.5954368114471436,
        "prompt": " Clean]] Python 1 Anth `fibonacci` enigmaticiaz FORitions",
        "nll_prompt": -10.222797393798828
    },
    {
        "epoch": 49,
        "loss": 1.050649881362915,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 13.900882720947266,
        "cur_std": 0.6003129005432128,
        "prompt": " start]] Python 1 Anth `fibonacci` enigmaticiaz FORitions",
        "nll_prompt": -10.064091682434082
    },
    {
        "epoch": 50,
        "loss": 1.1003135442733765,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 14.690906524658203,
        "cur_std": 0.6501157283782959,
        "prompt": " start]] Python 1 Anth `fibonacci` enigmatic horse FORitions",
        "nll_prompt": -9.586456298828125
    },
    {
        "epoch": 51,
        "loss": 1.104535698890686,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 14.602296829223633,
        "cur_std": 0.6802757740020752,
        "prompt": " start]] Python 1 Anth `fibonacci` enigmatic manageable FORitions",
        "nll_prompt": -9.741894721984863
    },
    {
        "epoch": 52,
        "loss": 1.0339961051940918,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 15.288410186767578,
        "cur_std": 0.6270833015441895,
        "prompt": " start]] Python 1 Anth `fibonacci` enigmatic manageable FOR#",
        "nll_prompt": -9.167119026184082
    },
    {
        "epoch": 53,
        "loss": 1.1527395248413086,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 15.832319259643555,
        "cur_std": 0.5927388668060303,
        "prompt": " start]] Python 1 Anth `fibonacci`� manageable FOR#",
        "nll_prompt": -9.45864200592041
    },
    {
        "epoch": 54,
        "loss": 1.064607858657837,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 16.083030700683594,
        "cur_std": 0.5543987274169921,
        "prompt": " start� Python 1 Anth `fibonacci`� manageable FOR#",
        "nll_prompt": -9.562938690185547
    },
    {
        "epoch": 55,
        "loss": 1.2537753582000732,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 16.16505241394043,
        "cur_std": 0.5420395851135253,
        "prompt": " start� Python 1 Anth{\\fibonacci`� manageable FOR#",
        "nll_prompt": -10.261414527893066
    },
    {
        "epoch": 56,
        "loss": 1.2241955995559692,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 17.548383712768555,
        "cur_std": 0.5841315746307373,
        "prompt": " start� Python 1 Anth{\\fibonacci`� was FOR#",
        "nll_prompt": -9.896307945251465
    },
    {
        "epoch": 57,
        "loss": 1.2418335676193237,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 16.598285675048828,
        "cur_std": 0.5852413177490234,
        "prompt": " start� Python� Anth{\\fibonacci`� was FOR#",
        "nll_prompt": -10.104138374328613
    },
    {
        "epoch": 58,
        "loss": 1.1976191997528076,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 17.146421432495117,
        "cur_std": 0.572603988647461,
        "prompt": " start� Python� reflect{\\fibonacci`� was FOR#",
        "nll_prompt": -9.98184871673584
    },
    {
        "epoch": 59,
        "loss": 1.1059130430221558,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 18.14682388305664,
        "cur_std": 0.6037629127502442,
        "prompt": " start� Python� reflect{\\fib Aquacci`� was FOR#",
        "nll_prompt": -11.523887634277344
    },
    {
        "epoch": 60,
        "loss": 1.2606512308120728,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 16.657901763916016,
        "cur_std": 0.5463864803314209,
        "prompt": " start� Python� reflect{\\fib Aquacci`�ALTH FOR#",
        "nll_prompt": -11.445999145507812
    },
    {
        "epoch": 61,
        "loss": 1.1675318479537964,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 16.03384780883789,
        "cur_std": 0.5754889011383056,
        "prompt": " start murm Python� reflect{\\fib Aquacci`�ALTH FOR#",
        "nll_prompt": -12.07363224029541
    },
    {
        "epoch": 62,
        "loss": 1.2789769172668457,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 15.8811674118042,
        "cur_std": 0.554192590713501,
        "prompt": " start Loan Python� reflect{\\fib Aquacci`�ALTH FOR#",
        "nll_prompt": -11.351679801940918
    },
    {
        "epoch": 63,
        "loss": 1.283274531364441,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 15.076727867126465,
        "cur_std": 0.5634308338165284,
        "prompt": " start Loan Python� Po{\\fib Aquacci`�ALTH FOR#",
        "nll_prompt": -11.017895698547363
    },
    {
        "epoch": 64,
        "loss": 1.0653752088546753,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 15.420974731445312,
        "cur_std": 0.5541830062866211,
        "prompt": " start Loan Python� Po{\\fib Aquacci`� IS FOR#",
        "nll_prompt": -10.835822105407715
    },
    {
        "epoch": 65,
        "loss": 1.248437523841858,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 15.688295364379883,
        "cur_std": 0.5461581230163575,
        "prompt": " start Loan Python� Po{\\fib Aquacci`AR IS FOR#",
        "nll_prompt": -10.629084587097168
    },
    {
        "epoch": 66,
        "loss": 1.2234346866607666,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 17.294477462768555,
        "cur_std": 0.5776097774505615,
        "prompt": " start Loan Python� Po{\\fib Aquacci`AR Psychology FOR#",
        "nll_prompt": -11.04683780670166
    },
    {
        "epoch": 67,
        "loss": 1.1619459390640259,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 17.428627014160156,
        "cur_std": 0.5421507358551025,
        "prompt": " start Loan Python� Po{\\fib Aquacci`AR Psychology Party#",
        "nll_prompt": -10.889667510986328
    },
    {
        "epoch": 68,
        "loss": 1.2116374969482422,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 16.02739143371582,
        "cur_std": 0.5768081665039062,
        "prompt": " start Loan Python� Po{\\fib Aquacci`ARert Party#",
        "nll_prompt": -10.761847496032715
    },
    {
        "epoch": 69,
        "loss": 1.2560991048812866,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 16.54161262512207,
        "cur_std": 0.5707097530364991,
        "prompt": " start Loan Python� Po{\\fib Aquacci yourARert Party#",
        "nll_prompt": -10.82594108581543
    },
    {
        "epoch": 70,
        "loss": 1.081016182899475,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 17.04041290283203,
        "cur_std": 0.607562255859375,
        "prompt": " confident Loan Python� Po{\\fib Aquacci yourARert Party#",
        "nll_prompt": -11.072202682495117
    },
    {
        "epoch": 71,
        "loss": 1.2688528299331665,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 17.229337692260742,
        "cur_std": 0.6105103492736816,
        "prompt": " confident Loan Python� Po{\\fib Aquacci yourARH Party#",
        "nll_prompt": -11.01252555847168
    },
    {
        "epoch": 72,
        "loss": 1.1952942609786987,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 18.11536407470703,
        "cur_std": 0.5968170166015625,
        "prompt": " confident Loan Python� Po{\\fib Aquacci receivingARH Party#",
        "nll_prompt": -11.39777946472168
    },
    {
        "epoch": 73,
        "loss": 1.1058381795883179,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 18.232236862182617,
        "cur_std": 0.6012918949127197,
        "prompt": " confident Loan Python� Po{\\fib Aquacci receivingARome Party#",
        "nll_prompt": -11.471723556518555
    },
    {
        "epoch": 74,
        "loss": 1.1709603071212769,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 18.11729621887207,
        "cur_std": 0.5959047317504883,
        "prompt": " confident Loan Python� Po{\\fibHeadacci receivingARome Party#",
        "nll_prompt": -11.86454963684082
    },
    {
        "epoch": 75,
        "loss": 1.151838779449463,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 17.569408416748047,
        "cur_std": 0.5739391326904297,
        "prompt": " successful Loan Python� Po{\\fibHeadacci receivingARome Party#",
        "nll_prompt": -11.625622749328613
    },
    {
        "epoch": 76,
        "loss": 1.1622614860534668,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 17.865320205688477,
        "cur_std": 0.5701028823852539,
        "prompt": " successful Loan Python� Po{\\fibHeadacci receivingAR IPO Party#",
        "nll_prompt": -11.859390258789062
    },
    {
        "epoch": 77,
        "loss": 1.153601050376892,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 17.274229049682617,
        "cur_std": 0.5640278339385987,
        "prompt": " successful Loan Python� Po{\\fibHeadacci receivingARWinter Party#",
        "nll_prompt": -11.67751407623291
    },
    {
        "epoch": 78,
        "loss": 1.1517577171325684,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 16.194623947143555,
        "cur_std": 0.542880916595459,
        "prompt": " successful household Python� Po{\\fibHeadacci receivingARWinter Party#",
        "nll_prompt": -11.802350997924805
    },
    {
        "epoch": 79,
        "loss": 1.1875568628311157,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 15.90517520904541,
        "cur_std": 0.5540869235992432,
        "prompt": " successful household Python� Po{\\fibHeadacci tuARWinter Party#",
        "nll_prompt": -12.00600528717041
    },
    {
        "epoch": 80,
        "loss": 1.1759778261184692,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 16.296445846557617,
        "cur_std": 0.5570845603942871,
        "prompt": " successful household Python� Po{\\fibHeadacci tuAR do Party#",
        "nll_prompt": -12.26509952545166
    },
    {
        "epoch": 81,
        "loss": 1.1104024648666382,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 15.456154823303223,
        "cur_std": 0.5531379222869873,
        "prompt": " successful household Python� Po{\\fibHeadacci tuARBay Party#",
        "nll_prompt": -12.00002384185791
    },
    {
        "epoch": 82,
        "loss": 1.2055082321166992,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 15.012003898620605,
        "cur_std": 0.4977707386016846,
        "prompt": " successful household Python� Po{\\fibHeadacci tuARBay�#",
        "nll_prompt": -12.128165245056152
    },
    {
        "epoch": 83,
        "loss": 1.2427256107330322,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 16.695703506469727,
        "cur_std": 0.5208394527435303,
        "prompt": " metaph household Python� Po{\\fibHeadacci tuARBay�#",
        "nll_prompt": -12.741056442260742
    },
    {
        "epoch": 84,
        "loss": 1.2531766891479492,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 16.961320877075195,
        "cur_std": 0.609290599822998,
        "prompt": " metaph household Python� Po{\\f CypHeadacci tuARBay�#",
        "nll_prompt": -13.767045974731445
    },
    {
        "epoch": 85,
        "loss": 1.3140347003936768,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 17.609792709350586,
        "cur_std": 0.5912358283996582,
        "prompt": " smaller household Python� Po{\\f CypHeadacci tuARBay�#",
        "nll_prompt": -12.948442459106445
    },
    {
        "epoch": 86,
        "loss": 1.2563694715499878,
        "best_loss": 0.8871591687202454,
        "best_kl": 13.003005981445312,
        "best_std": 0.545618724822998,
        "cur_kl": 16.951251983642578,
        "cur_std": 0.5524207592010498,
        "prompt": " smaller engineer Python� Po{\\f CypHeadacci tuARBay�#",
        "nll_prompt": -12.90657901763916
    },
    {
        "epoch": 87,
        "loss": 1.2156587839126587,
        "best_loss": 0.8871591687202454,
        "best_kl": 11.860405921936035,
        "best_std": 0.5134182453155518,
        "cur_kl": 11.860405921936035,
        "cur_std": 0.5134182453155518,
        "prompt": " smaller engineer Python� Po{\\f CypHeadacci tuARBay�`.",
        "nll_prompt": -13.060596466064453
    },
    {
        "epoch": 88,
        "loss": 1.0633490085601807,
        "best_loss": 0.8871591687202454,
        "best_kl": 11.661335945129395,
        "best_std": 0.5151261806488037,
        "cur_kl": 11.661335945129395,
        "cur_std": 0.5151261806488037,
        "prompt": " smaller engineer Python� Po{\\f CypHeadacci tuMBay�`.",
        "nll_prompt": -12.833888053894043
    },
    {
        "epoch": 89,
        "loss": 0.9131208658218384,
        "best_loss": 0.8871591687202454,
        "best_kl": 11.307169914245605,
        "best_std": 0.4933470249176025,
        "cur_kl": 11.307169914245605,
        "cur_std": 0.4933470249176025,
        "prompt": " smaller engineer Python� length{\\f CypHeadacci tuMBay�`.",
        "nll_prompt": -13.07325267791748
    },
    {
        "epoch": 90,
        "loss": 1.0725396871566772,
        "best_loss": 0.8871591687202454,
        "best_kl": 11.307169914245605,
        "best_std": 0.4933470249176025,
        "cur_kl": 11.989641189575195,
        "cur_std": 0.49170446395874023,
        "prompt": " smaller engineer Python� In{\\f CypHeadacci tuMBay�`.",
        "nll_prompt": -13.312657356262207
    },
    {
        "epoch": 91,
        "loss": 1.0822865962982178,
        "best_loss": 0.8871591687202454,
        "best_kl": 11.307169914245605,
        "best_std": 0.4933470249176025,
        "cur_kl": 11.88762092590332,
        "cur_std": 0.4663418769836426,
        "prompt": " smaller engineer Python� In{\\fivesHeadacci tuMBay�`.",
        "nll_prompt": -12.83222484588623
    },
    {
        "epoch": 92,
        "loss": 1.0895949602127075,
        "best_loss": 0.8871591687202454,
        "best_kl": 10.954118728637695,
        "best_std": 0.4618217468261719,
        "cur_kl": 10.954118728637695,
        "cur_std": 0.4618217468261719,
        "prompt": " smaller engineer Python�og{\\fivesHeadacci tuMBay�`.",
        "nll_prompt": -12.42249584197998
    },
    {
        "epoch": 93,
        "loss": 0.9512542486190796,
        "best_loss": 0.8871591687202454,
        "best_kl": 10.776315689086914,
        "best_std": 0.4675290107727051,
        "cur_kl": 10.776315689086914,
        "cur_std": 0.4675290107727051,
        "prompt": " smaller engineer Python�og{\\fivesHeadacci tuMBayx`.",
        "nll_prompt": -11.924813270568848
    },
    {
        "epoch": 94,
        "loss": 0.9954960346221924,
        "best_loss": 0.8871591687202454,
        "best_kl": 10.711153030395508,
        "best_std": 0.4647925853729248,
        "cur_kl": 10.711153030395508,
        "cur_std": 0.4647925853729248,
        "prompt": " smaller engineer Python painog{\\fivesHeadacci tuMBayx`.",
        "nll_prompt": -12.206865310668945
    },
    {
        "epoch": 95,
        "loss": 1.0985372066497803,
        "best_loss": 0.8871591687202454,
        "best_kl": 10.383313179016113,
        "best_std": 0.4616700649261475,
        "cur_kl": 10.383313179016113,
        "cur_std": 0.4616700649261475,
        "prompt": " smaller engineer Python 13og{\\fivesHeadacci tuMBayx`.",
        "nll_prompt": -12.121739387512207
    },
    {
        "epoch": 96,
        "loss": 0.9623808860778809,
        "best_loss": 0.8871591687202454,
        "best_kl": 10.347390174865723,
        "best_std": 0.4488051414489746,
        "cur_kl": 10.347390174865723,
        "cur_std": 0.4488051414489746,
        "prompt": " Syndrome engineer Python 13og{\\fivesHeadacci tuMBayx`.",
        "nll_prompt": -11.920411109924316
    },
    {
        "epoch": 97,
        "loss": 0.9655171632766724,
        "best_loss": 0.8871591687202454,
        "best_kl": 9.824913024902344,
        "best_std": 0.45246548652648927,
        "cur_kl": 9.824913024902344,
        "cur_std": 0.45246548652648927,
        "prompt": " Syndrome engineer Python 13og{\\fivesHeadacci tuMBay!]`.",
        "nll_prompt": -11.854711532592773
    },
    {
        "epoch": 98,
        "loss": 1.0698353052139282,
        "best_loss": 0.8871591687202454,
        "best_kl": 9.339640617370605,
        "best_std": 0.4485499858856201,
        "cur_kl": 9.339640617370605,
        "cur_std": 0.4485499858856201,
        "prompt": " Syndrome engineer Python 13og{\\fpacesHeadacci tuMBay!]`.",
        "nll_prompt": -12.576353073120117
    },
    {
        "epoch": 99,
        "loss": 1.026713490486145,
        "best_loss": 0.8871591687202454,
        "best_kl": 9.339640617370605,
        "best_std": 0.4485499858856201,
        "cur_kl": 10.387063026428223,
        "cur_std": 0.471974515914917,
        "prompt": " Syndrome use Python 13og{\\fpacesHeadacci tuMBay!]`.",
        "nll_prompt": -12.599762916564941
    },
    {
        "epoch": 100,
        "loss": 0.9777058362960815,
        "best_loss": 0.8871591687202454,
        "best_kl": 9.339640617370605,
        "best_std": 0.4485499858856201,
        "cur_kl": 10.160266876220703,
        "cur_std": 0.4711421489715576,
        "prompt": " Syndrome use Python 13og{\\fpacesHeadacci tu FriBay!]`.",
        "nll_prompt": -12.854350090026855
    }
]