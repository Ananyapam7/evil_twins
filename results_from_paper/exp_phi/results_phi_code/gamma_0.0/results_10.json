[
    {
        "epoch": 1,
        "loss": 1.124031901359558,
        "best_loss": 1.124031901359558,
        "best_kl": 15.361238479614258,
        "best_std": 0.6040677070617676,
        "cur_kl": 15.361238479614258,
        "cur_std": 0.6040677070617676,
        "prompt": "Write a Python function called \"find\\_longest\\_word\" that])",
        "nll_prompt": -3.3424954414367676
    },
    {
        "epoch": 2,
        "loss": 1.0596396923065186,
        "best_loss": 1.0596396923065186,
        "best_kl": 13.244874000549316,
        "best_std": 0.5438720703125,
        "cur_kl": 13.244874000549316,
        "cur_std": 0.5438720703125,
        "prompt": " talent a Python function called \"find\\_longest\\_word\" that])",
        "nll_prompt": -4.503853797912598
    },
    {
        "epoch": 3,
        "loss": 1.0343352556228638,
        "best_loss": 1.0343352556228638,
        "best_kl": 12.210625648498535,
        "best_std": 0.5075600624084473,
        "cur_kl": 12.210625648498535,
        "cur_std": 0.5075600624084473,
        "prompt": " talent a Python function called \"find\\�longest\\_word\" that])",
        "nll_prompt": -5.841338157653809
    },
    {
        "epoch": 4,
        "loss": 1.018595576286316,
        "best_loss": 1.018595576286316,
        "best_kl": 11.85892391204834,
        "best_std": 0.49605526924133303,
        "cur_kl": 11.85892391204834,
        "cur_std": 0.49605526924133303,
        "prompt": " talent a Python function called \"find\\�longestant_word\" that])",
        "nll_prompt": -6.548905372619629
    },
    {
        "epoch": 5,
        "loss": 1.032065749168396,
        "best_loss": 1.018595576286316,
        "best_kl": 11.85892391204834,
        "best_std": 0.49605526924133303,
        "cur_kl": 12.502480506896973,
        "cur_std": 0.5213675022125244,
        "prompt": " talent a Python function called \"find\\�longestant_word\" Jess])",
        "nll_prompt": -7.4648919105529785
    },
    {
        "epoch": 6,
        "loss": 1.034383773803711,
        "best_loss": 1.018595576286316,
        "best_kl": 11.85892391204834,
        "best_std": 0.49605526924133303,
        "cur_kl": 12.536701202392578,
        "cur_std": 0.5482259273529053,
        "prompt": "ue a Python function called \"find\\�longestant_word\" Jess])",
        "nll_prompt": -7.108774185180664
    },
    {
        "epoch": 7,
        "loss": 1.030007243156433,
        "best_loss": 1.018595576286316,
        "best_kl": 11.85892391204834,
        "best_std": 0.49605526924133303,
        "cur_kl": 12.38541030883789,
        "cur_std": 0.5299640655517578,
        "prompt": " Season a Python function called \"find\\�longestant_word\" Jess])",
        "nll_prompt": -7.196450233459473
    },
    {
        "epoch": 8,
        "loss": 1.0461180210113525,
        "best_loss": 1.018595576286316,
        "best_kl": 11.85892391204834,
        "best_std": 0.49605526924133303,
        "cur_kl": 13.095861434936523,
        "cur_std": 0.507283067703247,
        "prompt": " Season a Python functionop \"find\\�longestant_word\" Jess])",
        "nll_prompt": -8.394438743591309
    },
    {
        "epoch": 9,
        "loss": 1.0240739583969116,
        "best_loss": 1.018595576286316,
        "best_kl": 11.763492584228516,
        "best_std": 0.49284610748291013,
        "cur_kl": 11.763492584228516,
        "cur_std": 0.49284610748291013,
        "prompt": " Season a Python functionop \"find\\�longestant_word\" confidential])",
        "nll_prompt": -8.243462562561035
    },
    {
        "epoch": 10,
        "loss": 1.0172398090362549,
        "best_loss": 1.0172398090362549,
        "best_kl": 11.340076446533203,
        "best_std": 0.4847257614135742,
        "cur_kl": 11.340076446533203,
        "cur_std": 0.4847257614135742,
        "prompt": " enigmatic a Python functionop \"find\\�longestant_word\" confidential])",
        "nll_prompt": -8.644994735717773
    },
    {
        "epoch": 11,
        "loss": 1.0064659118652344,
        "best_loss": 1.0064659118652344,
        "best_kl": 11.340076446533203,
        "best_std": 0.4847257614135742,
        "cur_kl": 11.368857383728027,
        "cur_std": 0.497920560836792,
        "prompt": " ruthless a Python functionop \"find\\�longestant_word\" confidential])",
        "nll_prompt": -8.546737670898438
    },
    {
        "epoch": 12,
        "loss": 1.01531982421875,
        "best_loss": 1.0064659118652344,
        "best_kl": 11.340076446533203,
        "best_std": 0.4847257614135742,
        "cur_kl": 11.868632316589355,
        "cur_std": 0.4937098979949951,
        "prompt": " ruthless a Python functionop \"find\\�longestant_word\" Maria])",
        "nll_prompt": -8.5906343460083
    },
    {
        "epoch": 13,
        "loss": 0.9775976538658142,
        "best_loss": 0.9775976538658142,
        "best_kl": 10.669171333312988,
        "best_std": 0.5181894779205323,
        "cur_kl": 10.669171333312988,
        "cur_std": 0.5181894779205323,
        "prompt": " ruthless a Python functionorical \"find\\�longestant_word\" Maria])",
        "nll_prompt": -8.831890106201172
    },
    {
        "epoch": 14,
        "loss": 0.989520788192749,
        "best_loss": 0.9775976538658142,
        "best_kl": 10.669171333312988,
        "best_std": 0.5181894779205323,
        "cur_kl": 10.89370346069336,
        "cur_std": 0.5069367408752441,
        "prompt": " ruthless a Python functionorical \"find\\�longestf_word\" Maria])",
        "nll_prompt": -8.802448272705078
    },
    {
        "epoch": 15,
        "loss": 0.9958347678184509,
        "best_loss": 0.9775976538658142,
        "best_kl": 10.669171333312988,
        "best_std": 0.5181894779205323,
        "cur_kl": 11.481213569641113,
        "cur_std": 0.5226166725158692,
        "prompt": " ruthless a Python functioninational \"find\\�longestf_word\" Maria])",
        "nll_prompt": -8.512014389038086
    },
    {
        "epoch": 16,
        "loss": 1.0037070512771606,
        "best_loss": 0.9775976538658142,
        "best_kl": 10.669171333312988,
        "best_std": 0.5181894779205323,
        "cur_kl": 11.68603515625,
        "cur_std": 0.527388334274292,
        "prompt": " ruthless a Python functioninational \"find\\�longestf­word\" Maria])",
        "nll_prompt": -8.951299667358398
    },
    {
        "epoch": 17,
        "loss": 1.0065888166427612,
        "best_loss": 0.9775976538658142,
        "best_kl": 10.669171333312988,
        "best_std": 0.5181894779205323,
        "cur_kl": 11.6782808303833,
        "cur_std": 0.5595274448394776,
        "prompt": " ruthless a Python function scientific \"find\\�longestf­word\" Maria])",
        "nll_prompt": -8.654152870178223
    },
    {
        "epoch": 18,
        "loss": 1.0127184391021729,
        "best_loss": 0.9775976538658142,
        "best_kl": 10.669171333312988,
        "best_std": 0.5181894779205323,
        "cur_kl": 11.56881046295166,
        "cur_std": 0.5517083644866944,
        "prompt": " Conduct a Python function scientific \"find\\�longestf­word\" Maria])",
        "nll_prompt": -8.443310737609863
    },
    {
        "epoch": 19,
        "loss": 1.0191515684127808,
        "best_loss": 0.9775976538658142,
        "best_kl": 10.669171333312988,
        "best_std": 0.5181894779205323,
        "cur_kl": 11.597792625427246,
        "cur_std": 0.5674148082733155,
        "prompt": " Conduct a Python function scientific \"find\\)[longestf­word\" Maria])",
        "nll_prompt": -8.725415229797363
    },
    {
        "epoch": 20,
        "loss": 1.023881196975708,
        "best_loss": 0.9775976538658142,
        "best_kl": 10.669171333312988,
        "best_std": 0.5181894779205323,
        "cur_kl": 11.619965553283691,
        "cur_std": 0.53036527633667,
        "prompt": " Conduct a Python function scientific \"find\\-longestf­word\" Maria])",
        "nll_prompt": -8.113860130310059
    },
    {
        "epoch": 21,
        "loss": 1.0161904096603394,
        "best_loss": 0.9775976538658142,
        "best_kl": 10.669171333312988,
        "best_std": 0.5181894779205323,
        "cur_kl": 11.483159065246582,
        "cur_std": 0.5293145656585694,
        "prompt": " Conduct a Python function scientific \"find\\�longestf­word\" Maria])",
        "nll_prompt": -8.506911277770996
    },
    {
        "epoch": 22,
        "loss": 1.0383356809616089,
        "best_loss": 0.9775976538658142,
        "best_kl": 10.669171333312988,
        "best_std": 0.5181894779205323,
        "cur_kl": 12.492610931396484,
        "cur_std": 0.5427087783813477,
        "prompt": " Conduct a Python function scientific \"find\\�longest\t\t\t\t\t­word\" Maria])",
        "nll_prompt": -8.6910400390625
    },
    {
        "epoch": 23,
        "loss": 1.0440800189971924,
        "best_loss": 0.9775976538658142,
        "best_kl": 10.669171333312988,
        "best_std": 0.5181894779205323,
        "cur_kl": 12.516830444335938,
        "cur_std": 0.6009582996368408,
        "prompt": " Conduct a Python function scientific \"find\\�longestSte­word\" Maria])",
        "nll_prompt": -8.81683349609375
    },
    {
        "epoch": 24,
        "loss": 1.0303699970245361,
        "best_loss": 0.9775976538658142,
        "best_kl": 10.669171333312988,
        "best_std": 0.5181894779205323,
        "cur_kl": 12.137800216674805,
        "cur_std": 0.5524066925048828,
        "prompt": " Conduct a Python function scientific \"find\\�longestegu­word\" Maria])",
        "nll_prompt": -9.151267051696777
    },
    {
        "epoch": 25,
        "loss": 1.0195015668869019,
        "best_loss": 0.9775976538658142,
        "best_kl": 10.669171333312988,
        "best_std": 0.5181894779205323,
        "cur_kl": 12.075658798217773,
        "cur_std": 0.5344495296478271,
        "prompt": " Conduct a Python functionroud \"find\\�longestegu­word\" Maria])",
        "nll_prompt": -9.247069358825684
    },
    {
        "epoch": 26,
        "loss": 1.0150879621505737,
        "best_loss": 0.9775976538658142,
        "best_kl": 10.669171333312988,
        "best_std": 0.5181894779205323,
        "cur_kl": 11.742815017700195,
        "cur_std": 0.5501579284667969,
        "prompt": " Conduct a Python functionroud \"find\\ –longestegu­word\" Maria])",
        "nll_prompt": -9.317009925842285
    },
    {
        "epoch": 27,
        "loss": 1.0096244812011719,
        "best_loss": 0.9775976538658142,
        "best_kl": 10.669171333312988,
        "best_std": 0.5181894779205323,
        "cur_kl": 11.15875244140625,
        "cur_std": 0.5016763210296631,
        "prompt": " Conduct a Python functionproclaimed \"find\\ –longestegu­word\" Maria])",
        "nll_prompt": -8.60392951965332
    },
    {
        "epoch": 28,
        "loss": 1.0087734460830688,
        "best_loss": 0.9775976538658142,
        "best_kl": 10.669171333312988,
        "best_std": 0.5181894779205323,
        "cur_kl": 11.253496170043945,
        "cur_std": 0.5246788501739502,
        "prompt": " Conduct a Python functionproclaimed \"find\\ –longestegu­word\" concise])",
        "nll_prompt": -8.661125183105469
    },
    {
        "epoch": 29,
        "loss": 1.027340054512024,
        "best_loss": 0.9775976538658142,
        "best_kl": 10.669171333312988,
        "best_std": 0.5181894779205323,
        "cur_kl": 12.07687759399414,
        "cur_std": 0.5057847976684571,
        "prompt": " Spanish a Python functionproclaimed \"find\\ –longestegu­word\" concise])",
        "nll_prompt": -9.32872200012207
    },
    {
        "epoch": 30,
        "loss": 1.0194658041000366,
        "best_loss": 0.9775976538658142,
        "best_kl": 10.669171333312988,
        "best_std": 0.5181894779205323,
        "cur_kl": 12.002144813537598,
        "cur_std": 0.5204083919525146,
        "prompt": " sarcastic a Python functionproclaimed \"find\\ –longestegu­word\" concise])",
        "nll_prompt": -9.500946044921875
    },
    {
        "epoch": 31,
        "loss": 0.9471684098243713,
        "best_loss": 0.9471684098243713,
        "best_kl": 9.2041015625,
        "best_std": 0.5487468719482422,
        "cur_kl": 9.2041015625,
        "cur_std": 0.5487468719482422,
        "prompt": " sarcastic a Python functionproclaimed \"find\\ –longestegu­word\" concise?",
        "nll_prompt": -8.987274169921875
    },
    {
        "epoch": 32,
        "loss": 0.9301707148551941,
        "best_loss": 0.9301707148551941,
        "best_kl": 8.908942222595215,
        "best_std": 0.5505948066711426,
        "cur_kl": 8.908942222595215,
        "cur_std": 0.5505948066711426,
        "prompt": " sarcastic a Python functiong \"find\\ –longestegu­word\" concise?",
        "nll_prompt": -8.635988235473633
    },
    {
        "epoch": 33,
        "loss": 0.926588773727417,
        "best_loss": 0.926588773727417,
        "best_kl": 8.908942222595215,
        "best_std": 0.5505948066711426,
        "cur_kl": 8.96097469329834,
        "cur_std": 0.5684463024139405,
        "prompt": " sarcastic a Python function Lat \"find\\ –longestegu­word\" concise?",
        "nll_prompt": -8.720122337341309
    },
    {
        "epoch": 34,
        "loss": 0.9272401332855225,
        "best_loss": 0.926588773727417,
        "best_kl": 8.898200988769531,
        "best_std": 0.5702165126800537,
        "cur_kl": 8.898200988769531,
        "cur_std": 0.5702165126800537,
        "prompt": " sarcastic a Python function Lat \"find\\ –longestW­word\" concise?",
        "nll_prompt": -8.241103172302246
    },
    {
        "epoch": 35,
        "loss": 0.930042028427124,
        "best_loss": 0.926588773727417,
        "best_kl": 8.82004451751709,
        "best_std": 0.5567573547363281,
        "cur_kl": 8.82004451751709,
        "cur_std": 0.5567573547363281,
        "prompt": " sarcastic a Python function Lat \"find\\ lingulongestW­word\" concise?",
        "nll_prompt": -9.035698890686035
    },
    {
        "epoch": 36,
        "loss": 0.9390220642089844,
        "best_loss": 0.926588773727417,
        "best_kl": 8.82004451751709,
        "best_std": 0.5567573547363281,
        "cur_kl": 9.416504859924316,
        "cur_std": 0.5245600700378418,
        "prompt": " sarcastic a Python function Lat...find\\ lingulongestW­word\" concise?",
        "nll_prompt": -9.70748519897461
    },
    {
        "epoch": 37,
        "loss": 0.9218884110450745,
        "best_loss": 0.9218884110450745,
        "best_kl": 8.82004451751709,
        "best_std": 0.5567573547363281,
        "cur_kl": 8.948369026184082,
        "cur_std": 0.5225232124328614,
        "prompt": " sarcastic a Python functionby...find\\ lingulongestW­word\" concise?",
        "nll_prompt": -9.963213920593262
    },
    {
        "epoch": 38,
        "loss": 0.9264270067214966,
        "best_loss": 0.9218884110450745,
        "best_kl": 8.82004451751709,
        "best_std": 0.5567573547363281,
        "cur_kl": 9.33282470703125,
        "cur_std": 0.598849105834961,
        "prompt": " sarcastic a Python functionby...Attach\\ lingulongestW­word\" concise?",
        "nll_prompt": -10.24222469329834
    },
    {
        "epoch": 39,
        "loss": 0.9061023592948914,
        "best_loss": 0.9061023592948914,
        "best_kl": 8.525381088256836,
        "best_std": 0.5953062057495118,
        "cur_kl": 8.525381088256836,
        "cur_std": 0.5953062057495118,
        "prompt": " Brave a Python functionby...Attach\\ lingulongestW­word\" concise?",
        "nll_prompt": -10.166647911071777
    },
    {
        "epoch": 40,
        "loss": 0.8977583050727844,
        "best_loss": 0.8977583050727844,
        "best_kl": 8.223496437072754,
        "best_std": 0.6065962791442872,
        "cur_kl": 8.223496437072754,
        "cur_std": 0.6065962791442872,
        "prompt": " Brave a Python functionby productAttach\\ lingulongestW­word\" concise?",
        "nll_prompt": -10.313136100769043
    },
    {
        "epoch": 41,
        "loss": 0.8995623588562012,
        "best_loss": 0.8977583050727844,
        "best_kl": 8.223496437072754,
        "best_std": 0.6065962791442872,
        "cur_kl": 8.289094924926758,
        "cur_std": 0.5983391761779785,
        "prompt": " Brave a Python functionbyADAttach\\ lingulongestW­word\" concise?",
        "nll_prompt": -10.16447639465332
    },
    {
        "epoch": 42,
        "loss": 0.8488014936447144,
        "best_loss": 0.8488014936447144,
        "best_kl": 6.662893295288086,
        "best_std": 0.5898313522338867,
        "cur_kl": 6.662893295288086,
        "cur_std": 0.5898313522338867,
        "prompt": " Brave a Python functionbyADAttach\\ sentencelongestW­word\" concise?",
        "nll_prompt": -9.980650901794434
    },
    {
        "epoch": 43,
        "loss": 0.8384436368942261,
        "best_loss": 0.8384436368942261,
        "best_kl": 6.005321979522705,
        "best_std": 0.5154211521148682,
        "cur_kl": 6.005321979522705,
        "cur_std": 0.5154211521148682,
        "prompt": " Brave a Python functionbyADAttach\\ sentencelongestW­wordag concise?",
        "nll_prompt": -10.417516708374023
    },
    {
        "epoch": 44,
        "loss": 0.8348395228385925,
        "best_loss": 0.8348395228385925,
        "best_kl": 6.005321979522705,
        "best_std": 0.5154211521148682,
        "cur_kl": 6.319303035736084,
        "cur_std": 0.5365389347076416,
        "prompt": " Brave a Python functionASADAttach\\ sentencelongestW­wordag concise?",
        "nll_prompt": -10.396146774291992
    },
    {
        "epoch": 45,
        "loss": 0.8352259397506714,
        "best_loss": 0.8348395228385925,
        "best_kl": 6.005321979522705,
        "best_std": 0.5154211521148682,
        "cur_kl": 6.184725761413574,
        "cur_std": 0.527647590637207,
        "prompt": " Brave a Python functionASADAttach\\ sentencelongestW­wordal concise?",
        "nll_prompt": -10.30060863494873
    },
    {
        "epoch": 46,
        "loss": 0.7993246912956238,
        "best_loss": 0.7993246912956238,
        "best_kl": 5.288510799407959,
        "best_std": 0.518243408203125,
        "cur_kl": 5.288510799407959,
        "cur_std": 0.518243408203125,
        "prompt": " Brave a Python functionASADAttach\\ sentencelongestW­wordal says?",
        "nll_prompt": -10.346128463745117
    },
    {
        "epoch": 47,
        "loss": 0.8131940960884094,
        "best_loss": 0.7993246912956238,
        "best_kl": 5.288510799407959,
        "best_std": 0.518243408203125,
        "cur_kl": 6.057779312133789,
        "cur_std": 0.5074246406555176,
        "prompt": " Brave a Python functionASAD)\\ sentencelongestW­wordal says?",
        "nll_prompt": -10.08681583404541
    },
    {
        "epoch": 48,
        "loss": 0.7963210344314575,
        "best_loss": 0.7963210344314575,
        "best_kl": 5.288510799407959,
        "best_std": 0.518243408203125,
        "cur_kl": 5.49406623840332,
        "cur_std": 0.5129148483276367,
        "prompt": " Brave a Python functionASAD Occup\\ sentencelongestW­wordal says?",
        "nll_prompt": -10.503520011901855
    },
    {
        "epoch": 49,
        "loss": 0.7950823903083801,
        "best_loss": 0.7950823903083801,
        "best_kl": 5.288510799407959,
        "best_std": 0.518243408203125,
        "cur_kl": 5.694530010223389,
        "cur_std": 0.5101366996765136,
        "prompt": " Brave a Python functionASAD Occup\\ sentencelongestW­word> says?",
        "nll_prompt": -10.548267364501953
    },
    {
        "epoch": 50,
        "loss": 0.8042423725128174,
        "best_loss": 0.7950823903083801,
        "best_kl": 5.288510799407959,
        "best_std": 0.518243408203125,
        "cur_kl": 5.822026252746582,
        "cur_std": 0.4514476299285889,
        "prompt": " Brave a Python functionASAD Occup\\ sentencelongest%­word> says?",
        "nll_prompt": -10.044468879699707
    },
    {
        "epoch": 51,
        "loss": 0.8101038336753845,
        "best_loss": 0.7950823903083801,
        "best_kl": 5.288510799407959,
        "best_std": 0.518243408203125,
        "cur_kl": 5.848607063293457,
        "cur_std": 0.4804250717163086,
        "prompt": " Brave a Python functionagsAD Occup\\ sentencelongest%­word> says?",
        "nll_prompt": -10.954181671142578
    },
    {
        "epoch": 52,
        "loss": 0.8023025989532471,
        "best_loss": 0.7950823903083801,
        "best_kl": 5.288510799407959,
        "best_std": 0.518243408203125,
        "cur_kl": 5.411225318908691,
        "cur_std": 0.45544967651367185,
        "prompt": " Brave a Python functionagsirst Occup\\ sentencelongest%­word> says?",
        "nll_prompt": -10.792939186096191
    },
    {
        "epoch": 53,
        "loss": 0.8020249605178833,
        "best_loss": 0.7950823903083801,
        "best_kl": 5.288510799407959,
        "best_std": 0.518243408203125,
        "cur_kl": 5.690131664276123,
        "cur_std": 0.5192842483520508,
        "prompt": " Brave a Python functionagsirst outlook\\ sentencelongest%­word> says?",
        "nll_prompt": -10.78812313079834
    },
    {
        "epoch": 54,
        "loss": 0.8048990368843079,
        "best_loss": 0.7950823903083801,
        "best_kl": 5.288510799407959,
        "best_std": 0.518243408203125,
        "cur_kl": 5.652560234069824,
        "cur_std": 0.4745299816131592,
        "prompt": " Brave a Python functionagsirst residents\\ sentencelongest%­word> says?",
        "nll_prompt": -10.22354793548584
    },
    {
        "epoch": 55,
        "loss": 0.8017594814300537,
        "best_loss": 0.7950823903083801,
        "best_kl": 5.288510799407959,
        "best_std": 0.518243408203125,
        "cur_kl": 5.520161151885986,
        "cur_std": 0.46110711097717283,
        "prompt": " Brave a Python functionagsirstauld\\ sentencelongest%­word> says?",
        "nll_prompt": -10.28751277923584
    },
    {
        "epoch": 56,
        "loss": 0.801705002784729,
        "best_loss": 0.7950823903083801,
        "best_kl": 5.240353107452393,
        "best_std": 0.463155460357666,
        "cur_kl": 5.240353107452393,
        "cur_std": 0.463155460357666,
        "prompt": " Brave a Python functionagsFlyauld\\ sentencelongest%­word> says?",
        "nll_prompt": -10.66514778137207
    },
    {
        "epoch": 57,
        "loss": 0.8073359727859497,
        "best_loss": 0.7950823903083801,
        "best_kl": 5.240353107452393,
        "best_std": 0.463155460357666,
        "cur_kl": 5.736729145050049,
        "cur_std": 0.44815764427185056,
        "prompt": " Brave a Python functionHopFlyauld\\ sentencelongest%­word> says?",
        "nll_prompt": -10.181727409362793
    },
    {
        "epoch": 58,
        "loss": 0.8088392615318298,
        "best_loss": 0.7950823903083801,
        "best_kl": 5.240353107452393,
        "best_std": 0.463155460357666,
        "cur_kl": 5.587026119232178,
        "cur_std": 0.47731966972351075,
        "prompt": " Brave a Python functionHopFlyauld1 sentencelongest%­word> says?",
        "nll_prompt": -10.273951530456543
    },
    {
        "epoch": 59,
        "loss": 0.8148534893989563,
        "best_loss": 0.7950823903083801,
        "best_kl": 5.240353107452393,
        "best_std": 0.463155460357666,
        "cur_kl": 5.963582515716553,
        "cur_std": 0.549653148651123,
        "prompt": " Brave a Python function �Flyauld1 sentencelongest%­word> says?",
        "nll_prompt": -11.075287818908691
    },
    {
        "epoch": 60,
        "loss": 0.8184403777122498,
        "best_loss": 0.7950823903083801,
        "best_kl": 5.240353107452393,
        "best_std": 0.463155460357666,
        "cur_kl": 5.973371505737305,
        "cur_std": 0.5245728969573975,
        "prompt": " Brave a Python function lineFlyauld1 sentencelongest%­word> says?",
        "nll_prompt": -9.896625518798828
    },
    {
        "epoch": 61,
        "loss": 0.763700544834137,
        "best_loss": 0.763700544834137,
        "best_kl": 4.374185085296631,
        "best_std": 0.4283698558807373,
        "cur_kl": 4.374185085296631,
        "cur_std": 0.4283698558807373,
        "prompt": " Brave a Python function thatFlyauld1 sentencelongest%­word> says?",
        "nll_prompt": -9.617082595825195
    },
    {
        "epoch": 62,
        "loss": 0.7708893418312073,
        "best_loss": 0.763700544834137,
        "best_kl": 4.374185085296631,
        "best_std": 0.4283698558807373,
        "cur_kl": 4.661513805389404,
        "cur_std": 0.40447273254394533,
        "prompt": " Brave a Python function thatATauld1 sentencelongest%­word> says?",
        "nll_prompt": -8.705395698547363
    },
    {
        "epoch": 63,
        "loss": 0.7728570103645325,
        "best_loss": 0.763700544834137,
        "best_kl": 4.374185085296631,
        "best_std": 0.4283698558807373,
        "cur_kl": 4.694172382354736,
        "cur_std": 0.39965009689331055,
        "prompt": " Brave a Python function thatATauld1 sentencelongestい­word> says?",
        "nll_prompt": -8.816191673278809
    },
    {
        "epoch": 64,
        "loss": 0.773123562335968,
        "best_loss": 0.763700544834137,
        "best_kl": 4.372664451599121,
        "best_std": 0.4205909252166748,
        "cur_kl": 4.372664451599121,
        "cur_std": 0.4205909252166748,
        "prompt": " Brave a Python function thatAT speech1 sentencelongestい­word> says?",
        "nll_prompt": -8.868494987487793
    },
    {
        "epoch": 65,
        "loss": 0.7628476619720459,
        "best_loss": 0.7628476619720459,
        "best_kl": 4.327415466308594,
        "best_std": 0.40834870338439944,
        "cur_kl": 4.327415466308594,
        "cur_std": 0.40834870338439944,
        "prompt": " Brave a Python function thatAT speech1 sentencelongest�­word> says?",
        "nll_prompt": -9.221453666687012
    },
    {
        "epoch": 66,
        "loss": 0.7591931223869324,
        "best_loss": 0.7591931223869324,
        "best_kl": 4.327415466308594,
        "best_std": 0.40834870338439944,
        "cur_kl": 4.334218502044678,
        "cur_std": 0.3930515289306641,
        "prompt": " Brave a Python function thatATay1 sentencelongest�­word> says?",
        "nll_prompt": -8.738983154296875
    },
    {
        "epoch": 67,
        "loss": 0.7767879962921143,
        "best_loss": 0.7591931223869324,
        "best_kl": 4.327415466308594,
        "best_std": 0.40834870338439944,
        "cur_kl": 5.091542720794678,
        "cur_std": 0.5126743793487549,
        "prompt": " Brave a Python function that�ay1 sentencelongest�­word> says?",
        "nll_prompt": -9.648455619812012
    },
    {
        "epoch": 68,
        "loss": 0.783789873123169,
        "best_loss": 0.7591931223869324,
        "best_kl": 4.327415466308594,
        "best_std": 0.40834870338439944,
        "cur_kl": 5.389418601989746,
        "cur_std": 0.5323175907135009,
        "prompt": " Brave a Python function that�ay1 sentencelongest camer­word> says?",
        "nll_prompt": -10.239344596862793
    },
    {
        "epoch": 69,
        "loss": 0.7818410992622375,
        "best_loss": 0.7591931223869324,
        "best_kl": 4.327415466308594,
        "best_std": 0.40834870338439944,
        "cur_kl": 5.110260486602783,
        "cur_std": 0.518631887435913,
        "prompt": " Brave a Python function that�ay1 sentencelongestfar­word> says?",
        "nll_prompt": -9.970386505126953
    },
    {
        "epoch": 70,
        "loss": 0.7810695767402649,
        "best_loss": 0.7591931223869324,
        "best_kl": 4.327415466308594,
        "best_std": 0.40834870338439944,
        "cur_kl": 5.288835525512695,
        "cur_std": 0.5325593471527099,
        "prompt": " Brave a Python function that�ay1 sentencelongestest­word> says?",
        "nll_prompt": -9.555808067321777
    },
    {
        "epoch": 71,
        "loss": 0.7757397890090942,
        "best_loss": 0.7591931223869324,
        "best_kl": 4.327415466308594,
        "best_std": 0.40834870338439944,
        "cur_kl": 4.949029445648193,
        "cur_std": 0.5294628620147706,
        "prompt": " Brave a Python function that�die1 sentencelongestest­word> says?",
        "nll_prompt": -9.707511901855469
    },
    {
        "epoch": 72,
        "loss": 0.7800225019454956,
        "best_loss": 0.7591931223869324,
        "best_kl": 4.327415466308594,
        "best_std": 0.40834870338439944,
        "cur_kl": 5.130042552947998,
        "cur_std": 0.50291428565979,
        "prompt": " Brave a Python function that� anyone1 sentencelongestest­word> says?",
        "nll_prompt": -9.577096939086914
    },
    {
        "epoch": 73,
        "loss": 0.7817642092704773,
        "best_loss": 0.7591931223869324,
        "best_kl": 4.327415466308594,
        "best_std": 0.40834870338439944,
        "cur_kl": 5.333037376403809,
        "cur_std": 0.5358022212982178,
        "prompt": " Brave a Python function that� anyoneDS sentencelongestest­word> says?",
        "nll_prompt": -10.07267951965332
    },
    {
        "epoch": 74,
        "loss": 0.7793541550636292,
        "best_loss": 0.7591931223869324,
        "best_kl": 4.327415466308594,
        "best_std": 0.40834870338439944,
        "cur_kl": 5.162281513214111,
        "cur_std": 0.5096257209777832,
        "prompt": " Brave a Python function that� anyoneP sentencelongestest­word> says?",
        "nll_prompt": -9.845664024353027
    },
    {
        "epoch": 75,
        "loss": 0.782782793045044,
        "best_loss": 0.7591931223869324,
        "best_kl": 4.327415466308594,
        "best_std": 0.40834870338439944,
        "cur_kl": 5.309859275817871,
        "cur_std": 0.5000614166259766,
        "prompt": " Brave a Python function that� anyoneP sentencelongestestmodword> says?",
        "nll_prompt": -9.969389915466309
    },
    {
        "epoch": 76,
        "loss": 0.7604209780693054,
        "best_loss": 0.7591931223869324,
        "best_kl": 4.327415466308594,
        "best_std": 0.40834870338439944,
        "cur_kl": 4.767115592956543,
        "cur_std": 0.4998363971710205,
        "prompt": " Brave a Python function that� anyoneP sentencelongestestmodword> sent?",
        "nll_prompt": -9.89935302734375
    },
    {
        "epoch": 77,
        "loss": 0.7693076729774475,
        "best_loss": 0.7591931223869324,
        "best_kl": 4.327415466308594,
        "best_std": 0.40834870338439944,
        "cur_kl": 5.304512977600098,
        "cur_std": 0.5234996318817139,
        "prompt": " Brave a Python function that� anyone dimension sentencelongestestmodword> sent?",
        "nll_prompt": -9.99300479888916
    },
    {
        "epoch": 78,
        "loss": 0.757615864276886,
        "best_loss": 0.757615864276886,
        "best_kl": 4.327415466308594,
        "best_std": 0.40834870338439944,
        "cur_kl": 4.701706886291504,
        "cur_std": 0.5114400386810303,
        "prompt": " Brave a Python function that� anyoneash sentencelongestestmodword> sent?",
        "nll_prompt": -9.940070152282715
    },
    {
        "epoch": 79,
        "loss": 0.7506110072135925,
        "best_loss": 0.7506110072135925,
        "best_kl": 4.220008850097656,
        "best_std": 0.46153788566589354,
        "cur_kl": 4.220008850097656,
        "cur_std": 0.46153788566589354,
        "prompt": " Brave a Python function that natural anyoneash sentencelongestestmodword> sent?",
        "nll_prompt": -9.648021697998047
    },
    {
        "epoch": 80,
        "loss": 0.7620010375976562,
        "best_loss": 0.7506110072135925,
        "best_kl": 4.220008850097656,
        "best_std": 0.46153788566589354,
        "cur_kl": 4.920354843139648,
        "cur_std": 0.5264034748077393,
        "prompt": " Brave a Python function that natural artsash sentencelongestestmodword> sent?",
        "nll_prompt": -9.06842041015625
    },
    {
        "epoch": 81,
        "loss": 0.7465202212333679,
        "best_loss": 0.7465202212333679,
        "best_kl": 4.220008850097656,
        "best_std": 0.46153788566589354,
        "cur_kl": 4.6066508293151855,
        "cur_std": 0.471822452545166,
        "prompt": " Brave a Python function thatalth artsash sentencelongestestmodword> sent?",
        "nll_prompt": -9.546918869018555
    },
    {
        "epoch": 82,
        "loss": 0.7591754198074341,
        "best_loss": 0.7465202212333679,
        "best_kl": 4.220008850097656,
        "best_std": 0.46153788566589354,
        "cur_kl": 4.793514728546143,
        "cur_std": 0.42856664657592775,
        "prompt": " Brave a Python function thatalth Premash sentencelongestestmodword> sent?",
        "nll_prompt": -9.699431419372559
    },
    {
        "epoch": 83,
        "loss": 0.7531290054321289,
        "best_loss": 0.7465202212333679,
        "best_kl": 4.220008850097656,
        "best_std": 0.46153788566589354,
        "cur_kl": 4.648277759552002,
        "cur_std": 0.4428835868835449,
        "prompt": " Brave a Python function thatalth Winsash sentencelongestestmodword> sent?",
        "nll_prompt": -9.730412483215332
    },
    {
        "epoch": 84,
        "loss": 0.7540888786315918,
        "best_loss": 0.7465202212333679,
        "best_kl": 4.220008850097656,
        "best_std": 0.46153788566589354,
        "cur_kl": 4.704846382141113,
        "cur_std": 0.4451004981994629,
        "prompt": " Brave a Python function thatalth Winsash sentencelongicalestmodword> sent?",
        "nll_prompt": -10.12904167175293
    },
    {
        "epoch": 85,
        "loss": 0.7509229779243469,
        "best_loss": 0.7465202212333679,
        "best_kl": 4.220008850097656,
        "best_std": 0.46153788566589354,
        "cur_kl": 4.632482051849365,
        "cur_std": 0.46166000366210935,
        "prompt": " Brave a Python function thatalthdiscash sentencelongicalestmodword> sent?",
        "nll_prompt": -9.694055557250977
    },
    {
        "epoch": 86,
        "loss": 0.7504591345787048,
        "best_loss": 0.7465202212333679,
        "best_kl": 4.220008850097656,
        "best_std": 0.46153788566589354,
        "cur_kl": 4.5516581535339355,
        "cur_std": 0.4475534915924072,
        "prompt": " Brave a Python function thatalthologicalash sentencelongicalestmodword> sent?",
        "nll_prompt": -9.883026123046875
    },
    {
        "epoch": 87,
        "loss": 0.7508796453475952,
        "best_loss": 0.7465202212333679,
        "best_kl": 4.220008850097656,
        "best_std": 0.46153788566589354,
        "cur_kl": 4.478945732116699,
        "cur_std": 0.44911770820617675,
        "prompt": " Brave a Python function thatalthchelash sentencelongicalestmodword> sent?",
        "nll_prompt": -9.987468719482422
    },
    {
        "epoch": 88,
        "loss": 0.7428720593452454,
        "best_loss": 0.7428720593452454,
        "best_kl": 4.220008850097656,
        "best_std": 0.46153788566589354,
        "cur_kl": 4.265636920928955,
        "cur_std": 0.4358576774597168,
        "prompt": " Brave a Python function thatalthIndash sentencelongicalestmodword> sent?",
        "nll_prompt": -10.073620796203613
    },
    {
        "epoch": 89,
        "loss": 0.7542293667793274,
        "best_loss": 0.7428720593452454,
        "best_kl": 4.220008850097656,
        "best_std": 0.46153788566589354,
        "cur_kl": 4.574859619140625,
        "cur_std": 0.44202632904052735,
        "prompt": " Brave a Python function thatalthLindash sentencelongicalestmodword> sent?",
        "nll_prompt": -10.174236297607422
    },
    {
        "epoch": 90,
        "loss": 0.7494170069694519,
        "best_loss": 0.7428720593452454,
        "best_kl": 4.220008850097656,
        "best_std": 0.46153788566589354,
        "cur_kl": 4.414671421051025,
        "cur_std": 0.4463380813598633,
        "prompt": " Brave a Python function thatalthialash sentencelongicalestmodword> sent?",
        "nll_prompt": -9.57876205444336
    },
    {
        "epoch": 91,
        "loss": 0.7479308843612671,
        "best_loss": 0.7428720593452454,
        "best_kl": 4.220008850097656,
        "best_std": 0.46153788566589354,
        "cur_kl": 4.501327037811279,
        "cur_std": 0.4493246078491211,
        "prompt": " Brave a Python function thatalthialising sentencelongicalestmodword> sent?",
        "nll_prompt": -9.616888999938965
    },
    {
        "epoch": 92,
        "loss": 0.751717209815979,
        "best_loss": 0.7428720593452454,
        "best_kl": 4.220008850097656,
        "best_std": 0.46153788566589354,
        "cur_kl": 4.389634132385254,
        "cur_std": 0.4737374305725098,
        "prompt": " Brave a Python function thatalthasingising sentencelongicalestmodword> sent?",
        "nll_prompt": -10.309916496276855
    },
    {
        "epoch": 93,
        "loss": 0.7506101727485657,
        "best_loss": 0.7428720593452454,
        "best_kl": 4.220008850097656,
        "best_std": 0.46153788566589354,
        "cur_kl": 4.552240371704102,
        "cur_std": 0.4475431442260742,
        "prompt": " Brave a Python function thatalthasingmediate sentencelongicalestmodword> sent?",
        "nll_prompt": -10.021025657653809
    },
    {
        "epoch": 94,
        "loss": 0.760563850402832,
        "best_loss": 0.7428720593452454,
        "best_kl": 4.220008850097656,
        "best_std": 0.46153788566589354,
        "cur_kl": 4.8247551918029785,
        "cur_std": 0.4484461784362793,
        "prompt": " Brave a Python function thatalthasingmediate sentencelonglongestmodword> sent?",
        "nll_prompt": -9.746381759643555
    },
    {
        "epoch": 95,
        "loss": 0.7594683766365051,
        "best_loss": 0.7428720593452454,
        "best_kl": 4.220008850097656,
        "best_std": 0.46153788566589354,
        "cur_kl": 4.598155498504639,
        "cur_std": 0.4549081325531006,
        "prompt": " Brave a Python function thatalthasingmediate sentence 5longestmodword> sent?",
        "nll_prompt": -9.385218620300293
    },
    {
        "epoch": 96,
        "loss": 0.7576552629470825,
        "best_loss": 0.7428720593452454,
        "best_kl": 4.220008850097656,
        "best_std": 0.46153788566589354,
        "cur_kl": 4.67765998840332,
        "cur_std": 0.4513359069824219,
        "prompt": " Brave a Python function thatalthasingmediate sentence leaklongestmodword> sent?",
        "nll_prompt": -9.238109588623047
    },
    {
        "epoch": 97,
        "loss": 0.7523550987243652,
        "best_loss": 0.7428720593452454,
        "best_kl": 4.220008850097656,
        "best_std": 0.46153788566589354,
        "cur_kl": 4.496201515197754,
        "cur_std": 0.4580037593841553,
        "prompt": " Brave a Python function thatalthasingery sentence leaklongestmodword> sent?",
        "nll_prompt": -9.17458438873291
    },
    {
        "epoch": 98,
        "loss": 0.7605529427528381,
        "best_loss": 0.7428720593452454,
        "best_kl": 4.220008850097656,
        "best_std": 0.46153788566589354,
        "cur_kl": 4.5561041831970215,
        "cur_std": 0.48875722885131834,
        "prompt": " Brave a Python function that realasingery sentence leaklongestmodword> sent?",
        "nll_prompt": -9.03518009185791
    },
    {
        "epoch": 99,
        "loss": 0.7618656754493713,
        "best_loss": 0.7428720593452454,
        "best_kl": 4.220008850097656,
        "best_std": 0.46153788566589354,
        "cur_kl": 4.92810583114624,
        "cur_std": 0.504576587677002,
        "prompt": " Brave a Python function that Watsonasingery sentence leaklongestmodword> sent?",
        "nll_prompt": -9.662993431091309
    },
    {
        "epoch": 100,
        "loss": 0.7607138752937317,
        "best_loss": 0.7428720593452454,
        "best_kl": 4.220008850097656,
        "best_std": 0.46153788566589354,
        "cur_kl": 4.748892784118652,
        "cur_std": 0.5100160598754883,
        "prompt": " Brave a Python function that Watsonasingreci sentence leaklongestmodword> sent?",
        "nll_prompt": -10.184005737304688
    }
]